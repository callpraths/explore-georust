<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>handle_mm_fault (7 samples, 0.01%)</title><rect x="1189.9" y="245" width="0.1" height="15.0" fill="rgb(234,152,52)" rx="2" ry="2" />
<text  x="1192.86" y="255.5" ></text>
</g>
<g >
<title>geo::algorithm::centroid::CentroidOperation&lt;T&gt;::add_multi_polygon (12 samples, 0.02%)</title><rect x="152.5" y="277" width="0.2" height="15.0" fill="rgb(254,22,18)" rx="2" ry="2" />
<text  x="155.50" y="287.5" ></text>
</g>
<g >
<title>geos::algorithm::Centroid::addTriangle (6,004 samples, 10.19%)</title><rect x="608.8" y="277" width="120.2" height="15.0" fill="rgb(212,68,52)" rx="2" ry="2" />
<text  x="611.76" y="287.5" >geos::algorith..</text>
</g>
<g >
<title>geos::geom::CoordinateArraySequence::getAt (928 samples, 1.57%)</title><rect x="131.0" y="261" width="18.5" height="15.0" fill="rgb(205,180,41)" rx="2" ry="2" />
<text  x="133.96" y="271.5" ></text>
</g>
<g >
<title>__do_page_fault (19 samples, 0.03%)</title><rect x="12.8" y="245" width="0.4" height="15.0" fill="rgb(216,162,36)" rx="2" ry="2" />
<text  x="15.80" y="255.5" ></text>
</g>
<g >
<title>vfs_read (15 samples, 0.03%)</title><rect x="1095.7" y="229" width="0.3" height="15.0" fill="rgb(233,122,54)" rx="2" ry="2" />
<text  x="1098.65" y="239.5" ></text>
</g>
<g >
<title>do_group_exit (5 samples, 0.01%)</title><rect x="1097.4" y="245" width="0.1" height="15.0" fill="rgb(215,18,50)" rx="2" ry="2" />
<text  x="1100.35" y="255.5" ></text>
</g>
<g >
<title>unmap_vmas (5 samples, 0.01%)</title><rect x="1097.4" y="181" width="0.1" height="15.0" fill="rgb(236,38,17)" rx="2" ry="2" />
<text  x="1100.35" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.01%)</title><rect x="1097.4" y="277" width="0.1" height="15.0" fill="rgb(247,185,18)" rx="2" ry="2" />
<text  x="1100.35" y="287.5" ></text>
</g>
<g >
<title>geos::geom::CoordinateArraySequence::isEmpty (6 samples, 0.01%)</title><rect x="1039.2" y="277" width="0.1" height="15.0" fill="rgb(250,178,13)" rx="2" ry="2" />
<text  x="1042.23" y="287.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.01%)</title><rect x="13.2" y="245" width="0.1" height="15.0" fill="rgb(245,165,18)" rx="2" ry="2" />
<text  x="16.18" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.03%)</title><rect x="1095.7" y="261" width="0.3" height="15.0" fill="rgb(254,4,4)" rx="2" ry="2" />
<text  x="1098.65" y="271.5" ></text>
</g>
<g >
<title>geos::algorithm::Centroid::area2 (2,778 samples, 4.71%)</title><rect x="729.0" y="277" width="55.6" height="15.0" fill="rgb(211,82,14)" rx="2" ry="2" />
<text  x="731.98" y="287.5" >geos:..</text>
</g>
<g >
<title>geos::algorithm::Centroid::addLineSegments (22,721 samples, 38.55%)</title><rect x="153.7" y="277" width="454.9" height="15.0" fill="rgb(232,173,17)" rx="2" ry="2" />
<text  x="156.70" y="287.5" >geos::algorithm::Centroid::addLineSegments</text>
</g>
<g >
<title>[unknown] (9 samples, 0.02%)</title><rect x="13.2" y="261" width="0.2" height="15.0" fill="rgb(253,95,3)" rx="2" ry="2" />
<text  x="16.18" y="271.5" ></text>
</g>
<g >
<title>clear_page_erms (10 samples, 0.02%)</title><rect x="12.2" y="165" width="0.2" height="15.0" fill="rgb(206,93,53)" rx="2" ry="2" />
<text  x="15.18" y="175.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (17 samples, 0.03%)</title><rect x="608.2" y="245" width="0.4" height="15.0" fill="rgb(244,54,52)" rx="2" ry="2" />
<text  x="611.22" y="255.5" ></text>
</g>
<g >
<title>geos::geom::Geometry::~Geometry (10 samples, 0.02%)</title><rect x="1186.7" y="293" width="0.2" height="15.0" fill="rgb(244,84,6)" rx="2" ry="2" />
<text  x="1189.68" y="303.5" ></text>
</g>
<g >
<title>__libc_read (15 samples, 0.03%)</title><rect x="1095.7" y="293" width="0.3" height="15.0" fill="rgb(244,223,9)" rx="2" ry="2" />
<text  x="1098.65" y="303.5" ></text>
</g>
<g >
<title>ksys_read (15 samples, 0.03%)</title><rect x="1095.7" y="245" width="0.3" height="15.0" fill="rgb(207,146,39)" rx="2" ry="2" />
<text  x="1098.65" y="255.5" ></text>
</g>
<g >
<title>clear_page_erms (10 samples, 0.02%)</title><rect x="13.0" y="149" width="0.2" height="15.0" fill="rgb(206,153,13)" rx="2" ry="2" />
<text  x="15.98" y="159.5" ></text>
</g>
<g >
<title>geos::geom::Geometry::getCentroid (17 samples, 0.03%)</title><rect x="149.6" y="261" width="0.3" height="15.0" fill="rgb(218,148,33)" rx="2" ry="2" />
<text  x="152.56" y="271.5" ></text>
</g>
<g >
<title>geos::algorithm::Centroid::addShell (6 samples, 0.01%)</title><rect x="608.6" y="277" width="0.2" height="15.0" fill="rgb(218,54,39)" rx="2" ry="2" />
<text  x="611.64" y="287.5" ></text>
</g>
<g >
<title>malloc (33 samples, 0.06%)</title><rect x="1187.2" y="293" width="0.6" height="15.0" fill="rgb(236,123,11)" rx="2" ry="2" />
<text  x="1190.16" y="303.5" ></text>
</g>
<g >
<title>geos::geom::MultiPolygon::~MultiPolygon (357 samples, 0.61%)</title><rect x="1083.5" y="277" width="7.1" height="15.0" fill="rgb(243,108,18)" rx="2" ry="2" />
<text  x="1086.50" y="287.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (5 samples, 0.01%)</title><rect x="608.3" y="197" width="0.1" height="15.0" fill="rgb(229,163,13)" rx="2" ry="2" />
<text  x="611.34" y="207.5" ></text>
</g>
<g >
<title>page_fault (19 samples, 0.03%)</title><rect x="12.8" y="261" width="0.4" height="15.0" fill="rgb(228,176,39)" rx="2" ry="2" />
<text  x="15.80" y="271.5" ></text>
</g>
<g >
<title>generic_file_read_iter (15 samples, 0.03%)</title><rect x="1095.7" y="197" width="0.3" height="15.0" fill="rgb(247,31,12)" rx="2" ry="2" />
<text  x="1098.65" y="207.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (10 samples, 0.02%)</title><rect x="12.2" y="197" width="0.2" height="15.0" fill="rgb(209,224,27)" rx="2" ry="2" />
<text  x="15.18" y="207.5" ></text>
</g>
<g >
<title>geos::algorithm::Centroid::add (5 samples, 0.01%)</title><rect x="1092.5" y="245" width="0.1" height="15.0" fill="rgb(245,199,42)" rx="2" ry="2" />
<text  x="1095.53" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (5 samples, 0.01%)</title><rect x="1095.8" y="53" width="0.1" height="15.0" fill="rgb(229,187,23)" rx="2" ry="2" />
<text  x="1098.83" y="63.5" ></text>
</g>
<g >
<title>__do_page_fault (7 samples, 0.01%)</title><rect x="1095.8" y="117" width="0.1" height="15.0" fill="rgb(254,174,54)" rx="2" ry="2" />
<text  x="1098.79" y="127.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (22 samples, 0.04%)</title><rect x="152.7" y="277" width="0.5" height="15.0" fill="rgb(216,119,2)" rx="2" ry="2" />
<text  x="155.74" y="287.5" ></text>
</g>
<g >
<title>benchmark_centroid::geo_centroid (14 samples, 0.02%)</title><rect x="1096.1" y="293" width="0.2" height="15.0" fill="rgb(211,57,18)" rx="2" ry="2" />
<text  x="1099.05" y="303.5" ></text>
</g>
<g >
<title>geos::geom::GeometryCollection::isEmpty (6 samples, 0.01%)</title><rect x="1082.5" y="277" width="0.1" height="15.0" fill="rgb(211,7,5)" rx="2" ry="2" />
<text  x="1085.46" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (12 samples, 0.02%)</title><rect x="12.9" y="229" width="0.3" height="15.0" fill="rgb(215,204,34)" rx="2" ry="2" />
<text  x="15.94" y="239.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (80 samples, 0.14%)</title><rect x="1089.0" y="245" width="1.6" height="15.0" fill="rgb(232,215,33)" rx="2" ry="2" />
<text  x="1091.99" y="255.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (7 samples, 0.01%)</title><rect x="728.8" y="261" width="0.2" height="15.0" fill="rgb(243,122,31)" rx="2" ry="2" />
<text  x="731.84" y="271.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (6 samples, 0.01%)</title><rect x="101.0" y="245" width="0.2" height="15.0" fill="rgb(232,140,5)" rx="2" ry="2" />
<text  x="104.04" y="255.5" ></text>
</g>
<g >
<title>geos::geom::Geometry::Geometry (9 samples, 0.02%)</title><rect x="1082.2" y="277" width="0.2" height="15.0" fill="rgb(240,55,8)" rx="2" ry="2" />
<text  x="1085.18" y="287.5" ></text>
</g>
<g >
<title>new_sync_read (15 samples, 0.03%)</title><rect x="1095.7" y="213" width="0.3" height="15.0" fill="rgb(233,129,17)" rx="2" ry="2" />
<text  x="1098.65" y="223.5" ></text>
</g>
<g >
<title>geos::algorithm::Centroid::getCentroid (45 samples, 0.08%)</title><rect x="826.7" y="277" width="0.9" height="15.0" fill="rgb(254,79,7)" rx="2" ry="2" />
<text  x="829.67" y="287.5" ></text>
</g>
<g >
<title>irq_exit (17 samples, 0.03%)</title><rect x="608.2" y="229" width="0.4" height="15.0" fill="rgb(215,161,32)" rx="2" ry="2" />
<text  x="611.22" y="239.5" ></text>
</g>
<g >
<title>[unknown] (118 samples, 0.20%)</title><rect x="1091.2" y="261" width="2.3" height="15.0" fill="rgb(219,220,42)" rx="2" ry="2" />
<text  x="1094.17" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (12 samples, 0.02%)</title><rect x="12.9" y="213" width="0.3" height="15.0" fill="rgb(251,208,1)" rx="2" ry="2" />
<text  x="15.94" y="223.5" ></text>
</g>
<g >
<title>geos::geom::Polygon::getNumInteriorRing (6 samples, 0.01%)</title><rect x="1093.3" y="245" width="0.2" height="15.0" fill="rgb(253,67,54)" rx="2" ry="2" />
<text  x="1096.33" y="255.5" ></text>
</g>
<g >
<title>[libc-2.28.so] (89 samples, 0.15%)</title><rect x="10.7" y="293" width="1.8" height="15.0" fill="rgb(232,175,33)" rx="2" ry="2" />
<text  x="13.70" y="303.5" ></text>
</g>
<g >
<title>mmput (5 samples, 0.01%)</title><rect x="1097.4" y="213" width="0.1" height="15.0" fill="rgb(207,93,28)" rx="2" ry="2" />
<text  x="1100.35" y="223.5" ></text>
</g>
<g >
<title>cfree (24 samples, 0.04%)</title><rect x="151.9" y="277" width="0.5" height="15.0" fill="rgb(231,129,37)" rx="2" ry="2" />
<text  x="154.94" y="287.5" ></text>
</g>
<g >
<title>geos::algorithm::Centroid::centroid3 (1,652 samples, 2.80%)</title><rect x="793.3" y="277" width="33.1" height="15.0" fill="rgb(252,83,14)" rx="2" ry="2" />
<text  x="796.29" y="287.5" >ge..</text>
</g>
<g >
<title>page_fault (23 samples, 0.04%)</title><rect x="12.0" y="277" width="0.5" height="15.0" fill="rgb(231,102,31)" rx="2" ry="2" />
<text  x="15.02" y="287.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (7 samples, 0.01%)</title><rect x="728.8" y="213" width="0.2" height="15.0" fill="rgb(239,56,54)" rx="2" ry="2" />
<text  x="731.84" y="223.5" ></text>
</g>
<g >
<title>geos::algorithm::Centroid::addTriangle@plt (462 samples, 0.78%)</title><rect x="121.4" y="261" width="9.3" height="15.0" fill="rgb(208,206,25)" rx="2" ry="2" />
<text  x="124.41" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.01%)</title><rect x="1097.4" y="293" width="0.1" height="15.0" fill="rgb(211,61,19)" rx="2" ry="2" />
<text  x="1100.35" y="303.5" ></text>
</g>
<g >
<title>&lt;geos::geometry::Geometry as geos::geometry::Geom&gt;::get_centroid (26 samples, 0.04%)</title><rect x="10.1" y="293" width="0.5" height="15.0" fill="rgb(224,124,11)" rx="2" ry="2" />
<text  x="13.10" y="303.5" ></text>
</g>
<g >
<title>__cxxabiv1::__class_type_info::__do_dyncast (8 samples, 0.01%)</title><rect x="1094.1" y="293" width="0.1" height="15.0" fill="rgb(236,62,34)" rx="2" ry="2" />
<text  x="1097.07" y="303.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (17 samples, 0.03%)</title><rect x="608.2" y="261" width="0.4" height="15.0" fill="rgb(212,108,33)" rx="2" ry="2" />
<text  x="611.22" y="271.5" ></text>
</g>
<g >
<title>geos::geom::Polygon::isEmpty (5 samples, 0.01%)</title><rect x="1091.1" y="277" width="0.1" height="15.0" fill="rgb(223,57,25)" rx="2" ry="2" />
<text  x="1094.07" y="287.5" ></text>
</g>
<g >
<title>[unknown] (54,018 samples, 91.66%)</title><rect x="12.5" y="293" width="1081.6" height="15.0" fill="rgb(211,154,54)" rx="2" ry="2" />
<text  x="15.48" y="303.5" >[unknown]</text>
</g>
<g >
<title>geo::algorithm::area::get_linestring_area (1,887 samples, 3.20%)</title><rect x="1097.5" y="293" width="37.8" height="15.0" fill="rgb(211,98,27)" rx="2" ry="2" />
<text  x="1100.47" y="303.5" >geo..</text>
</g>
<g >
<title>geos::geom::CoordinateSequence::getOrdinate (2,139 samples, 3.63%)</title><rect x="1039.3" y="277" width="42.9" height="15.0" fill="rgb(223,138,46)" rx="2" ry="2" />
<text  x="1042.35" y="287.5" >geos..</text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.01%)</title><rect x="1189.9" y="229" width="0.1" height="15.0" fill="rgb(222,88,27)" rx="2" ry="2" />
<text  x="1192.86" y="239.5" ></text>
</g>
<g >
<title>copy_page_to_iter (14 samples, 0.02%)</title><rect x="1095.7" y="181" width="0.2" height="15.0" fill="rgb(248,69,47)" rx="2" ry="2" />
<text  x="1098.65" y="191.5" ></text>
</g>
<g >
<title>__handle_mm_fault (16 samples, 0.03%)</title><rect x="12.1" y="229" width="0.4" height="15.0" fill="rgb(217,221,28)" rx="2" ry="2" />
<text  x="15.14" y="239.5" ></text>
</g>
<g >
<title>geos::geom::GeometryCollection::getNumGeometries (10 samples, 0.02%)</title><rect x="150.0" y="261" width="0.2" height="15.0" fill="rgb(238,89,6)" rx="2" ry="2" />
<text  x="153.00" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_vma (10 samples, 0.02%)</title><rect x="12.2" y="213" width="0.2" height="15.0" fill="rgb(212,106,29)" rx="2" ry="2" />
<text  x="15.18" y="223.5" ></text>
</g>
<g >
<title>copyout (14 samples, 0.02%)</title><rect x="1095.7" y="165" width="0.2" height="15.0" fill="rgb(232,82,29)" rx="2" ry="2" />
<text  x="1098.65" y="175.5" ></text>
</g>
<g >
<title>get_page_from_freelist (11 samples, 0.02%)</title><rect x="13.0" y="165" width="0.2" height="15.0" fill="rgb(241,77,39)" rx="2" ry="2" />
<text  x="15.96" y="175.5" ></text>
</g>
<g >
<title>GEOSGetCentroid_r (17 samples, 0.03%)</title><rect x="1082.8" y="229" width="0.3" height="15.0" fill="rgb(223,92,44)" rx="2" ry="2" />
<text  x="1085.76" y="239.5" ></text>
</g>
<g >
<title>geo::algorithm::centroid::CentroidOperation&lt;T&gt;::add_ring (2,557 samples, 4.34%)</title><rect x="1135.3" y="293" width="51.2" height="15.0" fill="rgb(249,139,5)" rx="2" ry="2" />
<text  x="1138.34" y="303.5" >geo::..</text>
</g>
<g >
<title>geos::geom::GeometryFactory::addRef (9 samples, 0.02%)</title><rect x="1082.6" y="277" width="0.2" height="15.0" fill="rgb(245,172,8)" rx="2" ry="2" />
<text  x="1085.58" y="287.5" ></text>
</g>
<g >
<title>geos::geom::LineString::isEmpty (13 samples, 0.02%)</title><rect x="1083.2" y="277" width="0.3" height="15.0" fill="rgb(218,185,1)" rx="2" ry="2" />
<text  x="1086.22" y="287.5" ></text>
</g>
<g >
<title>geos::geom::Geometry::getCentroid (6 samples, 0.01%)</title><rect x="1083.1" y="229" width="0.1" height="15.0" fill="rgb(225,55,26)" rx="2" ry="2" />
<text  x="1086.10" y="239.5" ></text>
</g>
<g >
<title>__dynamic_cast (37 samples, 0.06%)</title><rect x="1094.9" y="293" width="0.8" height="15.0" fill="rgb(216,174,35)" rx="2" ry="2" />
<text  x="1097.91" y="303.5" ></text>
</g>
<g >
<title>malloc (11 samples, 0.02%)</title><rect x="150.3" y="261" width="0.3" height="15.0" fill="rgb(230,46,13)" rx="2" ry="2" />
<text  x="153.34" y="271.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (34 samples, 0.06%)</title><rect x="1094.2" y="293" width="0.7" height="15.0" fill="rgb(233,94,19)" rx="2" ry="2" />
<text  x="1097.23" y="303.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (6 samples, 0.01%)</title><rect x="101.0" y="229" width="0.2" height="15.0" fill="rgb(213,41,53)" rx="2" ry="2" />
<text  x="104.04" y="239.5" ></text>
</g>
<g >
<title>[libc-2.28.so] (33 samples, 0.06%)</title><rect x="12.5" y="277" width="0.7" height="15.0" fill="rgb(246,80,35)" rx="2" ry="2" />
<text  x="15.52" y="287.5" ></text>
</g>
<g >
<title>[libc-2.28.so] (274 samples, 0.46%)</title><rect x="1083.5" y="245" width="5.5" height="15.0" fill="rgb(213,9,42)" rx="2" ry="2" />
<text  x="1086.50" y="255.5" ></text>
</g>
<g >
<title>irq_exit (7 samples, 0.01%)</title><rect x="728.8" y="229" width="0.2" height="15.0" fill="rgb(233,79,48)" rx="2" ry="2" />
<text  x="731.84" y="239.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (6 samples, 0.01%)</title><rect x="101.0" y="197" width="0.2" height="15.0" fill="rgb(226,131,33)" rx="2" ry="2" />
<text  x="104.04" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 0.01%)</title><rect x="1095.8" y="101" width="0.1" height="15.0" fill="rgb(231,156,16)" rx="2" ry="2" />
<text  x="1098.79" y="111.5" ></text>
</g>
<g >
<title>cfree (10 samples, 0.02%)</title><rect x="1097.1" y="293" width="0.2" height="15.0" fill="rgb(214,200,26)" rx="2" ry="2" />
<text  x="1100.05" y="303.5" ></text>
</g>
<g >
<title>geos::geom::CoordinateArraySequence::getAt (4,626 samples, 7.85%)</title><rect x="946.6" y="277" width="92.6" height="15.0" fill="rgb(236,177,20)" rx="2" ry="2" />
<text  x="949.58" y="287.5" >geos::geom:..</text>
</g>
<g >
<title>page_fault (8 samples, 0.01%)</title><rect x="1189.8" y="277" width="0.2" height="15.0" fill="rgb(222,129,27)" rx="2" ry="2" />
<text  x="1192.84" y="287.5" ></text>
</g>
<g >
<title>geos::algorithm::Centroid::getCentroid@plt (10 samples, 0.02%)</title><rect x="827.6" y="277" width="0.2" height="15.0" fill="rgb(235,78,18)" rx="2" ry="2" />
<text  x="830.57" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (16 samples, 0.03%)</title><rect x="12.1" y="245" width="0.4" height="15.0" fill="rgb(210,92,28)" rx="2" ry="2" />
<text  x="15.14" y="255.5" ></text>
</g>
<g >
<title>__cxxabiv1::__class_type_info::__do_dyncast (12 samples, 0.02%)</title><rect x="150.7" y="277" width="0.2" height="15.0" fill="rgb(214,158,45)" rx="2" ry="2" />
<text  x="153.66" y="287.5" ></text>
</g>
<g >
<title>[libc-2.28.so] (41 samples, 0.07%)</title><rect x="1091.2" y="245" width="0.8" height="15.0" fill="rgb(221,162,36)" rx="2" ry="2" />
<text  x="1094.17" y="255.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (17 samples, 0.03%)</title><rect x="608.2" y="213" width="0.4" height="15.0" fill="rgb(232,118,52)" rx="2" ry="2" />
<text  x="611.22" y="223.5" ></text>
</g>
<g >
<title>geos::algorithm::Centroid::addLineSegments (23 samples, 0.04%)</title><rect x="1092.6" y="245" width="0.5" height="15.0" fill="rgb(250,0,44)" rx="2" ry="2" />
<text  x="1095.63" y="255.5" ></text>
</g>
<g >
<title>all (58,933 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(212,37,54)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 0.04%)</title><rect x="1082.8" y="245" width="0.4" height="15.0" fill="rgb(224,135,41)" rx="2" ry="2" />
<text  x="1085.76" y="255.5" ></text>
</g>
<g >
<title>geos::geom::Polygon::~Polygon (118 samples, 0.20%)</title><rect x="1091.2" y="277" width="2.3" height="15.0" fill="rgb(252,65,44)" rx="2" ry="2" />
<text  x="1094.17" y="287.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (27 samples, 0.05%)</title><rect x="1092.0" y="245" width="0.5" height="15.0" fill="rgb(248,146,47)" rx="2" ry="2" />
<text  x="1094.99" y="255.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (14 samples, 0.02%)</title><rect x="1095.7" y="149" width="0.2" height="15.0" fill="rgb(251,51,51)" rx="2" ry="2" />
<text  x="1098.65" y="159.5" ></text>
</g>
<g >
<title>geos::algorithm::Centroid::addShell (4,380 samples, 7.43%)</title><rect x="13.5" y="261" width="87.7" height="15.0" fill="rgb(251,1,12)" rx="2" ry="2" />
<text  x="16.50" y="271.5" >geos::algo..</text>
</g>
<g >
<title>geos::geom::Point::Point (15 samples, 0.03%)</title><rect x="1090.6" y="277" width="0.3" height="15.0" fill="rgb(252,219,25)" rx="2" ry="2" />
<text  x="1093.65" y="287.5" ></text>
</g>
<g >
<title>unmap_page_range (5 samples, 0.01%)</title><rect x="1097.4" y="165" width="0.1" height="15.0" fill="rgb(227,167,2)" rx="2" ry="2" />
<text  x="1100.35" y="175.5" ></text>
</g>
<g >
<title>exit_mmap (5 samples, 0.01%)</title><rect x="1097.4" y="197" width="0.1" height="15.0" fill="rgb(236,110,25)" rx="2" ry="2" />
<text  x="1100.35" y="207.5" ></text>
</g>
<g >
<title>benchmark_centr (58,933 samples, 100.00%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(230,3,2)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >benchmark_centr</text>
</g>
<g >
<title>[unknown] (6,866 samples, 11.65%)</title><rect x="13.2" y="277" width="137.5" height="15.0" fill="rgb(217,200,17)" rx="2" ry="2" />
<text  x="16.18" y="287.5" >[unknown]</text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_decimal (39 samples, 0.07%)</title><rect x="1188.0" y="293" width="0.8" height="15.0" fill="rgb(249,228,47)" rx="2" ry="2" />
<text  x="1191.00" y="303.5" ></text>
</g>
<g >
<title>geos::algorithm::Orientation::isCCW (5,927 samples, 10.06%)</title><rect x="827.9" y="277" width="118.7" height="15.0" fill="rgb(227,94,2)" rx="2" ry="2" />
<text  x="830.91" y="287.5" >geos::algorith..</text>
</g>
<g >
<title>irq_exit (6 samples, 0.01%)</title><rect x="101.0" y="213" width="0.2" height="15.0" fill="rgb(229,9,31)" rx="2" ry="2" />
<text  x="104.04" y="223.5" ></text>
</g>
<g >
<title>get_page_from_freelist (10 samples, 0.02%)</title><rect x="12.2" y="181" width="0.2" height="15.0" fill="rgb(244,171,22)" rx="2" ry="2" />
<text  x="15.18" y="191.5" ></text>
</g>
<g >
<title>page_fault (7 samples, 0.01%)</title><rect x="1095.8" y="133" width="0.1" height="15.0" fill="rgb(249,88,27)" rx="2" ry="2" />
<text  x="1098.79" y="143.5" ></text>
</g>
<g >
<title>geos::algorithm::Centroid::area2@plt (434 samples, 0.74%)</title><rect x="784.6" y="277" width="8.7" height="15.0" fill="rgb(235,22,1)" rx="2" ry="2" />
<text  x="787.60" y="287.5" ></text>
</g>
<g >
<title>geos::algorithm::Centroid::add (7 samples, 0.01%)</title><rect x="13.4" y="261" width="0.1" height="15.0" fill="rgb(234,78,11)" rx="2" ry="2" />
<text  x="16.36" y="271.5" ></text>
</g>
<g >
<title>geos::algorithm::Centroid::centroid3@plt (15 samples, 0.03%)</title><rect x="826.4" y="277" width="0.3" height="15.0" fill="rgb(216,210,38)" rx="2" ry="2" />
<text  x="829.37" y="287.5" ></text>
</g>
<g >
<title>geos::algorithm::Centroid::add (22 samples, 0.04%)</title><rect x="153.2" y="277" width="0.4" height="15.0" fill="rgb(251,105,0)" rx="2" ry="2" />
<text  x="156.20" y="287.5" ></text>
</g>
<g >
<title>geos::geom::GeometryFactory::~GeometryFactory (23 samples, 0.04%)</title><rect x="1082.8" y="277" width="0.4" height="15.0" fill="rgb(216,163,42)" rx="2" ry="2" />
<text  x="1085.76" y="287.5" ></text>
</g>
<g >
<title>alloc_pages_vma (5 samples, 0.01%)</title><rect x="1095.8" y="69" width="0.1" height="15.0" fill="rgb(208,112,42)" rx="2" ry="2" />
<text  x="1098.83" y="79.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (5 samples, 0.01%)</title><rect x="1097.4" y="261" width="0.1" height="15.0" fill="rgb(236,89,10)" rx="2" ry="2" />
<text  x="1100.35" y="271.5" ></text>
</g>
<g >
<title>__dynamic_cast (47 samples, 0.08%)</title><rect x="150.9" y="277" width="0.9" height="15.0" fill="rgb(224,40,51)" rx="2" ry="2" />
<text  x="153.90" y="287.5" ></text>
</g>
<g >
<title>__do_page_fault (8 samples, 0.01%)</title><rect x="1189.8" y="261" width="0.2" height="15.0" fill="rgb(252,83,3)" rx="2" ry="2" />
<text  x="1192.84" y="271.5" ></text>
</g>
<g >
<title>serde_json::value::Value::as_f64 (6 samples, 0.01%)</title><rect x="1188.8" y="293" width="0.1" height="15.0" fill="rgb(246,37,22)" rx="2" ry="2" />
<text  x="1191.82" y="303.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (7 samples, 0.01%)</title><rect x="728.8" y="245" width="0.2" height="15.0" fill="rgb(224,156,36)" rx="2" ry="2" />
<text  x="731.84" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (11 samples, 0.02%)</title><rect x="13.0" y="181" width="0.2" height="15.0" fill="rgb(244,135,27)" rx="2" ry="2" />
<text  x="15.96" y="191.5" ></text>
</g>
<g >
<title>geos::algorithm::Centroid::addTriangle (1,009 samples, 1.71%)</title><rect x="101.2" y="261" width="20.2" height="15.0" fill="rgb(206,32,8)" rx="2" ry="2" />
<text  x="104.20" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_vma (11 samples, 0.02%)</title><rect x="13.0" y="197" width="0.2" height="15.0" fill="rgb(240,208,50)" rx="2" ry="2" />
<text  x="15.96" y="207.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 0.04%)</title><rect x="1082.8" y="261" width="0.4" height="15.0" fill="rgb(233,33,7)" rx="2" ry="2" />
<text  x="1085.76" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.03%)</title><rect x="1095.7" y="277" width="0.3" height="15.0" fill="rgb(240,44,1)" rx="2" ry="2" />
<text  x="1098.65" y="287.5" ></text>
</g>
<g >
<title>geos::algorithm::Orientation::isCCW (7 samples, 0.01%)</title><rect x="130.7" y="261" width="0.2" height="15.0" fill="rgb(240,180,22)" rx="2" ry="2" />
<text  x="133.72" y="271.5" ></text>
</g>
<g >
<title>malloc (10 samples, 0.02%)</title><rect x="1093.6" y="277" width="0.2" height="15.0" fill="rgb(215,217,42)" rx="2" ry="2" />
<text  x="1096.55" y="287.5" ></text>
</g>
<g >
<title>geojson::util::json_to_position (5 samples, 0.01%)</title><rect x="1186.6" y="293" width="0.1" height="15.0" fill="rgb(225,20,15)" rx="2" ry="2" />
<text  x="1189.58" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (5 samples, 0.01%)</title><rect x="1095.8" y="37" width="0.1" height="15.0" fill="rgb(221,135,9)" rx="2" ry="2" />
<text  x="1098.83" y="47.5" ></text>
</g>
<g >
<title>do_exit (5 samples, 0.01%)</title><rect x="1097.4" y="229" width="0.1" height="15.0" fill="rgb(245,196,15)" rx="2" ry="2" />
<text  x="1100.35" y="239.5" ></text>
</g>
<g >
<title>__do_page_fault (23 samples, 0.04%)</title><rect x="12.0" y="261" width="0.5" height="15.0" fill="rgb(205,31,18)" rx="2" ry="2" />
<text  x="15.02" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.01%)</title><rect x="1095.8" y="85" width="0.1" height="15.0" fill="rgb(207,108,3)" rx="2" ry="2" />
<text  x="1098.79" y="95.5" ></text>
</g>
<g >
<title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (53 samples, 0.09%)</title><rect x="1188.9" y="293" width="1.1" height="15.0" fill="rgb(245,111,8)" rx="2" ry="2" />
<text  x="1191.94" y="303.5" ></text>
</g>
<g >
<title>[unknown] (357 samples, 0.61%)</title><rect x="1083.5" y="261" width="7.1" height="15.0" fill="rgb(213,58,49)" rx="2" ry="2" />
<text  x="1086.50" y="271.5" ></text>
</g>
<g >
<title>benchmark_centroid::geos_centroid (36 samples, 0.06%)</title><rect x="1096.3" y="293" width="0.8" height="15.0" fill="rgb(242,27,27)" rx="2" ry="2" />
<text  x="1099.33" y="303.5" ></text>
</g>
</g>
</svg>
