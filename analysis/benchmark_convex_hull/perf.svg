<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1526" onload="init(evt)" viewBox="0 0 1200 1526" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1526.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1509" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1509" > </text>
<g id="frames">
<g >
<title>geojson::util::expect_f64 (1 samples, 0.10%)</title><rect x="12.3" y="1077" width="1.2" height="15.0" fill="rgb(216,119,25)" rx="2" ry="2" />
<text  x="15.32" y="1087.5" ></text>
</g>
<g >
<title>__libc_read (2 samples, 0.20%)</title><rect x="41.3" y="965" width="2.3" height="15.0" fill="rgb(252,141,17)" rx="2" ry="2" />
<text  x="44.27" y="975.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.20%)</title><rect x="19.3" y="165" width="2.3" height="15.0" fill="rgb(249,210,44)" rx="2" ry="2" />
<text  x="22.26" y="175.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (18 samples, 1.77%)</title><rect x="19.3" y="757" width="20.8" height="15.0" fill="rgb(240,126,2)" rx="2" ry="2" />
<text  x="22.26" y="767.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::is_ccw (4 samples, 0.39%)</title><rect x="74.8" y="1061" width="4.7" height="15.0" fill="rgb(227,91,51)" rx="2" ry="2" />
<text  x="77.85" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="13.5" y="1061" width="1.1" height="15.0" fill="rgb(248,178,25)" rx="2" ry="2" />
<text  x="16.47" y="1071.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (29 samples, 2.85%)</title><rect x="943.3" y="933" width="33.6" height="15.0" fill="rgb(209,138,12)" rx="2" ry="2" />
<text  x="946.35" y="943.5" >ge..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="18.1" y="965" width="1.2" height="15.0" fill="rgb(250,170,16)" rx="2" ry="2" />
<text  x="21.11" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;geos::geom::Coordinate const*&gt;::operator++ (2 samples, 0.20%)</title><rect x="1113.6" y="901" width="2.3" height="15.0" fill="rgb(253,200,2)" rx="2" ry="2" />
<text  x="1116.57" y="911.5" ></text>
</g>
<g >
<title>geos::algorithm::PointLocation::isInRing (3 samples, 0.29%)</title><rect x="1122.8" y="1445" width="3.5" height="15.0" fill="rgb(232,134,29)" rx="2" ry="2" />
<text  x="1125.84" y="1455.5" ></text>
</g>
<g >
<title>geos::algorithm::RayCrossingCounter::countSegment (66 samples, 6.48%)</title><rect x="900.5" y="965" width="76.4" height="15.0" fill="rgb(237,177,37)" rx="2" ry="2" />
<text  x="903.50" y="975.5" >geos::al..</text>
</g>
<g >
<title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (1 samples, 0.10%)</title><rect x="10.0" y="1077" width="1.2" height="15.0" fill="rgb(242,201,28)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" ></text>
</g>
<g >
<title>geos::geom::LinearRing::validateConstruction (1 samples, 0.10%)</title><rect x="690.9" y="981" width="1.2" height="15.0" fill="rgb(241,48,33)" rx="2" ry="2" />
<text  x="693.90" y="991.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.39%)</title><rect x="10.0" y="1445" width="4.6" height="15.0" fill="rgb(213,182,54)" rx="2" ry="2" />
<text  x="13.00" y="1455.5" ></text>
</g>
<g >
<title>GEOSConvexHull_r (896 samples, 87.93%)</title><rect x="79.5" y="1109" width="1037.5" height="15.0" fill="rgb(211,79,17)" rx="2" ry="2" />
<text  x="82.48" y="1119.5" >GEOSConvexHull_r</text>
</g>
<g >
<title>robust::orient2d (1 samples, 0.10%)</title><rect x="59.8" y="1013" width="1.2" height="15.0" fill="rgb(253,14,33)" rx="2" ry="2" />
<text  x="62.79" y="1023.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (2 samples, 0.20%)</title><rect x="19.3" y="229" width="2.3" height="15.0" fill="rgb(250,35,6)" rx="2" ry="2" />
<text  x="22.26" y="239.5" ></text>
</g>
<g >
<title>std::isfinite (1 samples, 0.10%)</title><rect x="737.2" y="837" width="1.2" height="15.0" fill="rgb(248,53,41)" rx="2" ry="2" />
<text  x="740.22" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;::_M_valptr (1 samples, 0.10%)</title><rect x="1112.4" y="885" width="1.2" height="15.0" fill="rgb(229,222,44)" rx="2" ry="2" />
<text  x="1115.41" y="895.5" ></text>
</g>
<g >
<title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (1 samples, 0.10%)</title><rect x="10.0" y="1045" width="1.2" height="15.0" fill="rgb(252,63,34)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" ></text>
</g>
<g >
<title>_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::enumerate::_$u7b$$u7b$closure$u7d$$u7d$::h3d15da34c3dd7995 (8 samples, 0.79%)</title><rect x="62.1" y="1045" width="9.3" height="15.0" fill="rgb(219,165,2)" rx="2" ry="2" />
<text  x="65.11" y="1055.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17 samples, 1.67%)</title><rect x="19.3" y="437" width="19.6" height="15.0" fill="rgb(247,22,15)" rx="2" ry="2" />
<text  x="22.26" y="447.5" ></text>
</g>
<g >
<title>&lt;geo::algorithm::kernels::robust::RobustKernel as geo::algorithm::kernels::Kernel&lt;T&gt;&gt;::orient2d (2 samples, 0.20%)</title><rect x="52.8" y="1013" width="2.4" height="15.0" fill="rgb(247,7,7)" rx="2" ry="2" />
<text  x="55.85" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_key (82 samples, 8.05%)</title><rect x="281.0" y="885" width="94.9" height="15.0" fill="rgb(211,147,0)" rx="2" ry="2" />
<text  x="283.97" y="895.5" >std::_Rb_tr..</text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (1 samples, 0.10%)</title><rect x="766.2" y="949" width="1.1" height="15.0" fill="rgb(245,221,50)" rx="2" ry="2" />
<text  x="769.17" y="959.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::hull_set::_$u7b$$u7b$closure$u7d$$u7d$::he3527c9a5ca8d9da (2 samples, 0.20%)</title><rect x="52.8" y="1045" width="2.4" height="15.0" fill="rgb(250,61,40)" rx="2" ry="2" />
<text  x="55.85" y="1055.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.10%)</title><rect x="684.0" y="885" width="1.1" height="15.0" fill="rgb(253,83,8)" rx="2" ry="2" />
<text  x="686.95" y="895.5" ></text>
</g>
<g >
<title>geozero::geojson::geojson_reader::process_properties (1 samples, 0.10%)</title><rect x="40.1" y="1109" width="1.2" height="15.0" fill="rgb(220,149,2)" rx="2" ry="2" />
<text  x="43.11" y="1119.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt;::construct&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const* const&amp;&gt; (4 samples, 0.39%)</title><rect x="445.4" y="821" width="4.6" height="15.0" fill="rgb(227,15,18)" rx="2" ry="2" />
<text  x="448.41" y="831.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.29%)</title><rect x="26.2" y="149" width="3.5" height="15.0" fill="rgb(216,72,51)" rx="2" ry="2" />
<text  x="29.21" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::empty (4 samples, 0.39%)</title><rect x="657.3" y="1013" width="4.7" height="15.0" fill="rgb(250,93,0)" rx="2" ry="2" />
<text  x="660.32" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_drop_node (1 samples, 0.10%)</title><rect x="1105.5" y="917" width="1.1" height="15.0" fill="rgb(206,201,14)" rx="2" ry="2" />
<text  x="1108.47" y="927.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::destroy&lt;geos::geom::Coordinate const*&gt; (1 samples, 0.10%)</title><rect x="609.8" y="837" width="1.2" height="15.0" fill="rgb(218,76,41)" rx="2" ry="2" />
<text  x="612.84" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_insert_unique_&lt;geos::geom::Coordinate const*&amp;, std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_Alloc_node&gt; (3 samples, 0.29%)</title><rect x="1097.4" y="981" width="3.4" height="15.0" fill="rgb(223,229,29)" rx="2" ry="2" />
<text  x="1100.36" y="991.5" ></text>
</g>
<g >
<title>robust::orient2d (1 samples, 0.10%)</title><rect x="51.7" y="997" width="1.1" height="15.0" fill="rgb(212,50,13)" rx="2" ry="2" />
<text  x="54.69" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (5 samples, 0.49%)</title><rect x="614.5" y="869" width="5.8" height="15.0" fill="rgb(233,185,12)" rx="2" ry="2" />
<text  x="617.47" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[geojson::Feature]&gt; (1 samples, 0.10%)</title><rect x="18.1" y="1061" width="1.2" height="15.0" fill="rgb(247,113,54)" rx="2" ry="2" />
<text  x="21.11" y="1071.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17 samples, 1.67%)</title><rect x="19.3" y="533" width="19.6" height="15.0" fill="rgb(241,38,1)" rx="2" ry="2" />
<text  x="22.26" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::begin (2 samples, 0.20%)</title><rect x="388.7" y="885" width="2.3" height="15.0" fill="rgb(232,214,25)" rx="2" ry="2" />
<text  x="391.67" y="895.5" ></text>
</g>
<g >
<title>generic_file_read_iter (2 samples, 0.20%)</title><rect x="41.3" y="869" width="2.3" height="15.0" fill="rgb(223,147,32)" rx="2" ry="2" />
<text  x="44.27" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_left@plt (1 samples, 0.10%)</title><rect x="1062.6" y="965" width="1.2" height="15.0" fill="rgb(254,160,13)" rx="2" ry="2" />
<text  x="1065.62" y="975.5" ></text>
</g>
<g >
<title>geojson::util::expect_type (1 samples, 0.10%)</title><rect x="10.0" y="1157" width="1.2" height="15.0" fill="rgb(252,13,11)" rx="2" ry="2" />
<text  x="13.00" y="1167.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="18.1" y="869" width="1.2" height="15.0" fill="rgb(230,71,39)" rx="2" ry="2" />
<text  x="21.11" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.49%)</title><rect x="23.9" y="229" width="5.8" height="15.0" fill="rgb(224,81,48)" rx="2" ry="2" />
<text  x="26.90" y="239.5" ></text>
</g>
<g >
<title>geojson::util::get_features (1 samples, 0.10%)</title><rect x="13.5" y="1285" width="1.1" height="15.0" fill="rgb(222,46,52)" rx="2" ry="2" />
<text  x="16.47" y="1295.5" ></text>
</g>
<g >
<title>geos::geom::Geometry::convexHull (896 samples, 87.93%)</title><rect x="79.5" y="1061" width="1037.5" height="15.0" fill="rgb(206,54,40)" rx="2" ry="2" />
<text  x="82.48" y="1071.5" >geos::geom::Geometry::convexHull</text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::peek_or_null (1 samples, 0.10%)</title><rect x="36.6" y="133" width="1.2" height="15.0" fill="rgb(227,213,8)" rx="2" ry="2" />
<text  x="39.63" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;::_M_valptr (2 samples, 0.20%)</title><rect x="1088.1" y="933" width="2.3" height="15.0" fill="rgb(237,199,3)" rx="2" ry="2" />
<text  x="1091.10" y="943.5" ></text>
</g>
<g >
<title>operator new (21 samples, 2.06%)</title><rect x="459.3" y="805" width="24.3" height="15.0" fill="rgb(223,48,47)" rx="2" ry="2" />
<text  x="462.30" y="815.5" >o..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.49%)</title><rect x="23.9" y="277" width="5.8" height="15.0" fill="rgb(228,96,6)" rx="2" ry="2" />
<text  x="26.90" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.29%)</title><rect x="26.2" y="117" width="3.5" height="15.0" fill="rgb(225,130,50)" rx="2" ry="2" />
<text  x="29.21" y="127.5" ></text>
</g>
<g >
<title>geos::geom::CoordinateArraySequence::apply_ro (432 samples, 42.39%)</title><rect x="83.0" y="965" width="500.2" height="15.0" fill="rgb(250,86,14)" rx="2" ry="2" />
<text  x="85.95" y="975.5" >geos::geom::CoordinateArraySequence::apply_ro</text>
</g>
<g >
<title>__GI___libc_malloc (6 samples, 0.59%)</title><rect x="1081.1" y="869" width="7.0" height="15.0" fill="rgb(226,68,15)" rx="2" ry="2" />
<text  x="1084.15" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;::_M_valptr (1 samples, 0.10%)</title><rect x="1136.7" y="1429" width="1.2" height="15.0" fill="rgb(205,8,8)" rx="2" ry="2" />
<text  x="1139.73" y="1439.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;geos::geom::Coordinate const**&gt;, geos::geom::Coordinate const**&gt; (1 samples, 0.10%)</title><rect x="678.2" y="917" width="1.1" height="15.0" fill="rgb(232,18,12)" rx="2" ry="2" />
<text  x="681.16" y="927.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;geos::geom::Coordinate*, unsigned long&gt; (2 samples, 0.20%)</title><rect x="687.4" y="949" width="2.3" height="15.0" fill="rgb(239,160,19)" rx="2" ry="2" />
<text  x="690.43" y="959.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.10%)</title><rect x="611.0" y="805" width="1.2" height="15.0" fill="rgb(210,44,10)" rx="2" ry="2" />
<text  x="614.00" y="815.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, geos::geom::Coordinate const**, geos::geom::Coordinate const**&gt; (3 samples, 0.29%)</title><rect x="576.3" y="821" width="3.4" height="15.0" fill="rgb(210,93,9)" rx="2" ry="2" />
<text  x="579.26" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::operator-@plt (1 samples, 0.10%)</title><rect x="653.8" y="997" width="1.2" height="15.0" fill="rgb(238,90,25)" rx="2" ry="2" />
<text  x="656.85" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;geos::geom::Coordinate const*&gt;::operator-- (2 samples, 0.20%)</title><rect x="395.6" y="885" width="2.3" height="15.0" fill="rgb(214,100,41)" rx="2" ry="2" />
<text  x="398.61" y="895.5" ></text>
</g>
<g >
<title>geos::math::DD::selfAdd (1 samples, 0.10%)</title><rect x="766.2" y="805" width="1.1" height="15.0" fill="rgb(225,69,47)" rx="2" ry="2" />
<text  x="769.17" y="815.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.10%)</title><rect x="482.5" y="773" width="1.1" height="15.0" fill="rgb(229,15,42)" rx="2" ry="2" />
<text  x="485.46" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;geos::geom::Coordinate const*&gt;::allocate (8 samples, 0.79%)</title><rect x="565.8" y="869" width="9.3" height="15.0" fill="rgb(216,9,5)" rx="2" ry="2" />
<text  x="568.84" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_insert_unique&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt; &gt; (4 samples, 0.39%)</title><rect x="1096.2" y="997" width="4.6" height="15.0" fill="rgb(227,65,41)" rx="2" ry="2" />
<text  x="1099.20" y="1007.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::max_by::fold::_$u7b$$u7b$closure$u7d$$u7d$::h135c905c8c0279db (1 samples, 0.10%)</title><rect x="43.6" y="965" width="1.1" height="15.0" fill="rgb(215,7,37)" rx="2" ry="2" />
<text  x="46.58" y="975.5" ></text>
</g>
<g >
<title>geos::geom::LineString::isEmpty (1 samples, 0.10%)</title><rect x="690.9" y="949" width="1.2" height="15.0" fill="rgb(221,121,9)" rx="2" ry="2" />
<text  x="693.90" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (2 samples, 0.20%)</title><rect x="1090.4" y="965" width="2.3" height="15.0" fill="rgb(216,89,14)" rx="2" ry="2" />
<text  x="1093.41" y="975.5" ></text>
</g>
<g >
<title>geos::geom::GeometryFactory::createPolygon (1 samples, 0.10%)</title><rect x="692.1" y="1013" width="1.1" height="15.0" fill="rgb(208,110,32)" rx="2" ry="2" />
<text  x="695.06" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt;::deallocate (1 samples, 0.10%)</title><rect x="1108.9" y="837" width="1.2" height="15.0" fill="rgb(218,33,12)" rx="2" ry="2" />
<text  x="1111.94" y="847.5" ></text>
</g>
<g >
<title>geos::algorithm::Orientation::index (16 samples, 1.57%)</title><rect x="719.9" y="885" width="18.5" height="15.0" fill="rgb(219,41,21)" rx="2" ry="2" />
<text  x="722.85" y="895.5" ></text>
</g>
<g >
<title>std::io::Read::read_to_string (2 samples, 0.20%)</title><rect x="41.3" y="1093" width="2.3" height="15.0" fill="rgb(206,180,13)" rx="2" ry="2" />
<text  x="44.27" y="1103.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientation (1 samples, 0.10%)</title><rect x="736.1" y="821" width="1.1" height="15.0" fill="rgb(219,155,21)" rx="2" ry="2" />
<text  x="739.06" y="831.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;geos::geom::Coordinate const**&gt;, geos::geom::Coordinate const**&gt; (1 samples, 0.10%)</title><rect x="678.2" y="949" width="1.1" height="15.0" fill="rgb(221,18,36)" rx="2" ry="2" />
<text  x="681.16" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_insert_unique_pos (16 samples, 1.57%)</title><rect x="1142.5" y="1445" width="18.6" height="15.0" fill="rgb(228,157,11)" rx="2" ry="2" />
<text  x="1145.52" y="1455.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_to_string (2 samples, 0.20%)</title><rect x="41.3" y="1125" width="2.3" height="15.0" fill="rgb(216,190,3)" rx="2" ry="2" />
<text  x="44.27" y="1135.5" ></text>
</g>
<g >
<title>geozero::geojson::geojson_reader::process_geojson (1 samples, 0.10%)</title><rect x="40.1" y="1125" width="1.2" height="15.0" fill="rgb(233,80,14)" rx="2" ry="2" />
<text  x="43.11" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::end (1 samples, 0.10%)</title><rect x="580.9" y="917" width="1.2" height="15.0" fill="rgb(205,104,35)" rx="2" ry="2" />
<text  x="583.89" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_Node_allocator@plt (1 samples, 0.10%)</title><rect x="437.3" y="837" width="1.2" height="15.0" fill="rgb(223,157,30)" rx="2" ry="2" />
<text  x="440.30" y="847.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (1 samples, 0.10%)</title><rect x="766.2" y="869" width="1.1" height="15.0" fill="rgb(234,77,9)" rx="2" ry="2" />
<text  x="769.17" y="879.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.10%)</title><rect x="43.6" y="901" width="1.1" height="15.0" fill="rgb(247,30,34)" rx="2" ry="2" />
<text  x="46.58" y="911.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;*&amp;, std::_Rb_tree_node_base*&amp;, true&gt; (1 samples, 0.10%)</title><rect x="1064.9" y="965" width="1.2" height="15.0" fill="rgb(243,44,3)" rx="2" ry="2" />
<text  x="1067.94" y="975.5" ></text>
</g>
<g >
<title>core::ptr::write (2 samples, 0.20%)</title><rect x="21.6" y="357" width="2.3" height="15.0" fill="rgb(240,138,2)" rx="2" ry="2" />
<text  x="24.58" y="367.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::map_fold::_$u7b$$u7b$closure$u7d$$u7d$::h9bfd4e2611fa3b1e (2 samples, 0.20%)</title><rect x="43.6" y="997" width="2.3" height="15.0" fill="rgb(251,184,15)" rx="2" ry="2" />
<text  x="46.58" y="1007.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::next (1 samples, 0.10%)</title><rect x="32.0" y="133" width="1.2" height="15.0" fill="rgb(219,94,54)" rx="2" ry="2" />
<text  x="35.00" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="13.5" y="981" width="1.1" height="15.0" fill="rgb(247,181,50)" rx="2" ry="2" />
<text  x="16.47" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_Node_allocator (1 samples, 0.10%)</title><rect x="585.5" y="917" width="1.2" height="15.0" fill="rgb(220,85,52)" rx="2" ry="2" />
<text  x="588.53" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;geos::geom::Coordinate const*&gt;::construct&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const* const&amp;&gt;@plt (1 samples, 0.10%)</title><rect x="682.8" y="965" width="1.2" height="15.0" fill="rgb(218,109,12)" rx="2" ry="2" />
<text  x="685.80" y="975.5" ></text>
</g>
<g >
<title>std::panicking::try (950 samples, 93.23%)</title><rect x="18.1" y="1301" width="1100.1" height="15.0" fill="rgb(234,65,5)" rx="2" ry="2" />
<text  x="21.11" y="1311.5" >std::panicking::try</text>
</g>
<g >
<title>free_perturb (1 samples, 0.10%)</title><rect x="597.1" y="837" width="1.2" height="15.0" fill="rgb(239,27,18)" rx="2" ry="2" />
<text  x="600.11" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;::_M_valptr@plt (1 samples, 0.10%)</title><rect x="1059.1" y="933" width="1.2" height="15.0" fill="rgb(247,43,40)" rx="2" ry="2" />
<text  x="1062.15" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_right@plt (2 samples, 0.20%)</title><rect x="386.3" y="885" width="2.4" height="15.0" fill="rgb(244,125,53)" rx="2" ry="2" />
<text  x="389.35" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_value (42 samples, 4.12%)</title><rect x="323.8" y="869" width="48.7" height="15.0" fill="rgb(236,117,48)" rx="2" ry="2" />
<text  x="326.82" y="879.5" >std:..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::deallocate (2 samples, 0.20%)</title><rect x="607.5" y="853" width="2.3" height="15.0" fill="rgb(233,182,51)" rx="2" ry="2" />
<text  x="610.53" y="863.5" ></text>
</g>
<g >
<title>geozero::geojson::geojson_reader::read_geojson (3 samples, 0.29%)</title><rect x="10.0" y="1365" width="3.5" height="15.0" fill="rgb(251,197,30)" rx="2" ry="2" />
<text  x="13.00" y="1375.5" ></text>
</g>
<g >
<title>&lt;geojson::geojson::GeoJson as core::str::traits::FromStr&gt;::from_str (18 samples, 1.77%)</title><rect x="19.3" y="1109" width="20.8" height="15.0" fill="rgb(208,202,41)" rx="2" ry="2" />
<text  x="22.26" y="1119.5" ></text>
</g>
<g >
<title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.77%)</title><rect x="19.3" y="805" width="20.8" height="15.0" fill="rgb(225,26,21)" rx="2" ry="2" />
<text  x="22.26" y="815.5" ></text>
</g>
<g >
<title>geo::utils::least_and_greatest_index (9 samples, 0.88%)</title><rect x="61.0" y="1093" width="10.4" height="15.0" fill="rgb(207,115,43)" rx="2" ry="2" />
<text  x="63.95" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const*, std::vector&lt;geos::geom::Coordinate, std::allocator&lt;geos::geom::Coordinate&gt; &gt; &gt;::operator++ (3 samples, 0.29%)</title><rect x="85.3" y="949" width="3.4" height="15.0" fill="rgb(239,27,30)" rx="2" ry="2" />
<text  x="88.27" y="959.5" ></text>
</g>
<g >
<title>std::isfinite (2 samples, 0.20%)</title><rect x="762.7" y="821" width="2.3" height="15.0" fill="rgb(214,195,34)" rx="2" ry="2" />
<text  x="765.70" y="831.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::construct&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const* const&amp;&gt; (2 samples, 0.20%)</title><rect x="1076.5" y="917" width="2.3" height="15.0" fill="rgb(223,22,14)" rx="2" ry="2" />
<text  x="1079.52" y="927.5" ></text>
</g>
<g >
<title>_int_malloc (3 samples, 0.29%)</title><rect x="26.2" y="165" width="3.5" height="15.0" fill="rgb(241,112,29)" rx="2" ry="2" />
<text  x="29.21" y="175.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.10%)</title><rect x="36.6" y="101" width="1.2" height="15.0" fill="rgb(238,174,20)" rx="2" ry="2" />
<text  x="39.63" y="111.5" ></text>
</g>
<g >
<title>harness::data::load_multipolygon (1 samples, 0.10%)</title><rect x="13.5" y="1413" width="1.1" height="15.0" fill="rgb(209,16,40)" rx="2" ry="2" />
<text  x="16.47" y="1423.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.49%)</title><rect x="23.9" y="261" width="5.8" height="15.0" fill="rgb(230,133,13)" rx="2" ry="2" />
<text  x="26.90" y="271.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::reduce (2 samples, 0.20%)</title><rect x="43.6" y="1061" width="2.3" height="15.0" fill="rgb(219,62,21)" rx="2" ry="2" />
<text  x="46.58" y="1071.5" ></text>
</g>
<g >
<title>geos::algorithm::Orientation::index (1 samples, 0.10%)</title><rect x="766.2" y="885" width="1.1" height="15.0" fill="rgb(233,212,19)" rx="2" ry="2" />
<text  x="769.17" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator&lt; &lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt; (1 samples, 0.10%)</title><rect x="748.8" y="901" width="1.2" height="15.0" fill="rgb(206,27,22)" rx="2" ry="2" />
<text  x="751.80" y="911.5" ></text>
</g>
<g >
<title>geos::algorithm::ConvexHull::preSort (81 samples, 7.95%)</title><rect x="693.2" y="1029" width="93.8" height="15.0" fill="rgb(210,126,39)" rx="2" ry="2" />
<text  x="696.22" y="1039.5" >geos::algor..</text>
</g>
<g >
<title>tcache_get (1 samples, 0.10%)</title><rect x="1086.9" y="853" width="1.2" height="15.0" fill="rgb(222,174,10)" rx="2" ry="2" />
<text  x="1089.94" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::operator[] (30 samples, 2.94%)</title><rect x="828.7" y="981" width="34.7" height="15.0" fill="rgb(243,113,46)" rx="2" ry="2" />
<text  x="831.70" y="991.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_drop_node (1 samples, 0.10%)</title><rect x="585.5" y="949" width="1.2" height="15.0" fill="rgb(241,81,11)" rx="2" ry="2" />
<text  x="588.53" y="959.5" ></text>
</g>
<g >
<title>geos::geom::LineString::LineString (1 samples, 0.10%)</title><rect x="689.7" y="981" width="1.2" height="15.0" fill="rgb(227,188,5)" rx="2" ry="2" />
<text  x="692.74" y="991.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18 samples, 1.77%)</title><rect x="19.3" y="741" width="20.8" height="15.0" fill="rgb(253,65,49)" rx="2" ry="2" />
<text  x="22.26" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_put_node (2 samples, 0.20%)</title><rect x="615.6" y="789" width="2.3" height="15.0" fill="rgb(219,137,2)" rx="2" ry="2" />
<text  x="618.63" y="799.5" ></text>
</g>
<g >
<title>std::set&lt;geos::geom::Coordinate const*, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::~set (36 samples, 3.53%)</title><rect x="585.5" y="997" width="41.7" height="15.0" fill="rgb(236,202,54)" rx="2" ry="2" />
<text  x="588.53" y="1007.5" >std..</text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (1 samples, 0.10%)</title><rect x="10.0" y="1013" width="1.2" height="15.0" fill="rgb(215,59,0)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>std::io::read_to_end (2 samples, 0.20%)</title><rect x="41.3" y="1045" width="2.3" height="15.0" fill="rgb(205,169,38)" rx="2" ry="2" />
<text  x="44.27" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_destroy_node (1 samples, 0.10%)</title><rect x="599.4" y="885" width="1.2" height="15.0" fill="rgb(242,186,37)" rx="2" ry="2" />
<text  x="602.42" y="895.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.20%)</title><rect x="577.4" y="773" width="2.3" height="15.0" fill="rgb(251,167,24)" rx="2" ry="2" />
<text  x="580.42" y="783.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::reduce (1 samples, 0.10%)</title><rect x="45.9" y="1045" width="1.2" height="15.0" fill="rgb(222,113,18)" rx="2" ry="2" />
<text  x="48.90" y="1055.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Val_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt;::_Val_comp_iter (1 samples, 0.10%)</title><rect x="706.0" y="933" width="1.1" height="15.0" fill="rgb(224,75,35)" rx="2" ry="2" />
<text  x="708.96" y="943.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="45.9" y="1029" width="1.2" height="15.0" fill="rgb(228,5,43)" rx="2" ry="2" />
<text  x="48.90" y="1039.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.10%)</title><rect x="613.3" y="805" width="1.2" height="15.0" fill="rgb(206,43,5)" rx="2" ry="2" />
<text  x="616.32" y="815.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::remove (1 samples, 0.10%)</title><rect x="10.0" y="1125" width="1.2" height="15.0" fill="rgb(232,191,19)" rx="2" ry="2" />
<text  x="13.00" y="1135.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (4 samples, 0.39%)</title><rect x="745.3" y="917" width="4.7" height="15.0" fill="rgb(214,0,0)" rx="2" ry="2" />
<text  x="748.33" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;geos::geom::Coordinate const*&gt;::construct&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const* const&amp;&gt; (6 samples, 0.59%)</title><rect x="555.4" y="901" width="7.0" height="15.0" fill="rgb(229,146,36)" rx="2" ry="2" />
<text  x="558.42" y="911.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;f64&gt;&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="18.1" y="933" width="1.2" height="15.0" fill="rgb(211,134,9)" rx="2" ry="2" />
<text  x="21.11" y="943.5" ></text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::polarCompare (8 samples, 0.79%)</title><rect x="774.3" y="901" width="9.2" height="15.0" fill="rgb(253,162,31)" rx="2" ry="2" />
<text  x="777.28" y="911.5" ></text>
</g>
<g >
<title>geos::algorithm::PointLocation::isInRing (2 samples, 0.20%)</title><rect x="1120.5" y="1429" width="2.3" height="15.0" fill="rgb(224,63,44)" rx="2" ry="2" />
<text  x="1123.52" y="1439.5" ></text>
</g>
<g >
<title>&lt;geo::algorithm::kernels::robust::RobustKernel as geo::algorithm::kernels::Kernel&lt;T&gt;&gt;::orient2d (3 samples, 0.29%)</title><rect x="56.3" y="1029" width="3.5" height="15.0" fill="rgb(209,76,54)" rx="2" ry="2" />
<text  x="59.32" y="1039.5" ></text>
</g>
<g >
<title>geos::geom::CoordinateLessThen::operator (1 samples, 0.10%)</title><rect x="1068.4" y="965" width="1.2" height="15.0" fill="rgb(247,123,52)" rx="2" ry="2" />
<text  x="1071.41" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt;::construct&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const* const&amp;&gt; (1 samples, 0.10%)</title><rect x="1076.5" y="901" width="1.2" height="15.0" fill="rgb(245,201,32)" rx="2" ry="2" />
<text  x="1079.52" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_realloc_insert&lt;geos::geom::Coordinate const* const&amp;&gt; (2 samples, 0.20%)</title><rect x="684.0" y="981" width="2.3" height="15.0" fill="rgb(245,164,19)" rx="2" ry="2" />
<text  x="686.95" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt;::deallocate (1 samples, 0.10%)</title><rect x="608.7" y="837" width="1.1" height="15.0" fill="rgb(211,79,25)" rx="2" ry="2" />
<text  x="611.68" y="847.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (13 samples, 1.28%)</title><rect x="23.9" y="357" width="15.0" height="15.0" fill="rgb(236,159,21)" rx="2" ry="2" />
<text  x="26.90" y="367.5" ></text>
</g>
<g >
<title>all (1,019 samples, 100%)</title><rect x="10.0" y="1477" width="1180.0" height="15.0" fill="rgb(231,2,38)" rx="2" ry="2" />
<text  x="13.00" y="1487.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;::_M_valptr (5 samples, 0.49%)</title><rect x="438.5" y="837" width="5.7" height="15.0" fill="rgb(214,194,49)" rx="2" ry="2" />
<text  x="441.46" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;geos::geom::Coordinate const*&gt;::_M_addr (1 samples, 0.10%)</title><rect x="605.2" y="821" width="1.2" height="15.0" fill="rgb(231,195,19)" rx="2" ry="2" />
<text  x="608.21" y="831.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (2 samples, 0.20%)</title><rect x="19.3" y="261" width="2.3" height="15.0" fill="rgb(232,105,3)" rx="2" ry="2" />
<text  x="22.26" y="271.5" ></text>
</g>
<g >
<title>geos::algorithm::RayCrossingCounter::isOnSegment (4 samples, 0.39%)</title><rect x="978.1" y="965" width="4.6" height="15.0" fill="rgb(216,118,7)" rx="2" ry="2" />
<text  x="981.09" y="975.5" ></text>
</g>
<g >
<title>geozero::geojson::geojson_reader::read_geojson (22 samples, 2.16%)</title><rect x="18.1" y="1141" width="25.5" height="15.0" fill="rgb(207,84,5)" rx="2" ry="2" />
<text  x="21.11" y="1151.5" >g..</text>
</g>
<g >
<title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.10%)</title><rect x="37.8" y="197" width="1.1" height="15.0" fill="rgb(240,58,13)" rx="2" ry="2" />
<text  x="40.79" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_drop_node (4 samples, 0.39%)</title><rect x="605.2" y="885" width="4.6" height="15.0" fill="rgb(238,171,6)" rx="2" ry="2" />
<text  x="608.21" y="895.5" ></text>
</g>
<g >
<title>geojson::util::json_to_1d_positions (1 samples, 0.10%)</title><rect x="12.3" y="1109" width="1.2" height="15.0" fill="rgb(233,182,22)" rx="2" ry="2" />
<text  x="15.32" y="1119.5" ></text>
</g>
<g >
<title>robust::orient2d (3 samples, 0.29%)</title><rect x="56.3" y="1013" width="3.5" height="15.0" fill="rgb(215,111,9)" rx="2" ry="2" />
<text  x="59.32" y="1023.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;geos::geom::Coordinate const*&gt;::_M_ptr (1 samples, 0.10%)</title><rect x="589.0" y="885" width="1.2" height="15.0" fill="rgb(241,56,50)" rx="2" ry="2" />
<text  x="592.00" y="895.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="43.6" y="1029" width="2.3" height="15.0" fill="rgb(207,24,30)" rx="2" ry="2" />
<text  x="46.58" y="1039.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (1 samples, 0.10%)</title><rect x="10.0" y="1109" width="1.2" height="15.0" fill="rgb(214,100,45)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" ></text>
</g>
<g >
<title>geos::util::UniqueCoordinateArrayFilter::filter_ro (1 samples, 0.10%)</title><rect x="1130.9" y="1429" width="1.2" height="15.0" fill="rgb(216,106,42)" rx="2" ry="2" />
<text  x="1133.94" y="1439.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::deallocate (1 samples, 0.10%)</title><rect x="590.2" y="901" width="1.1" height="15.0" fill="rgb(212,171,46)" rx="2" ry="2" />
<text  x="593.16" y="911.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;geos::geom::CoordinateSequence, std::default_delete&lt;geos::geom::CoordinateSequence&gt; &gt;::_M_ptr (1 samples, 0.10%)</title><rect x="689.7" y="933" width="1.2" height="15.0" fill="rgb(254,77,23)" rx="2" ry="2" />
<text  x="692.74" y="943.5" ></text>
</g>
<g >
<title>&lt;geojson::geometry::Geometry as core::convert::TryFrom&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;&gt;::try_from (1 samples, 0.10%)</title><rect x="13.5" y="1205" width="1.1" height="15.0" fill="rgb(244,11,28)" rx="2" ry="2" />
<text  x="16.47" y="1215.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::allocate (1 samples, 0.10%)</title><rect x="684.0" y="949" width="1.1" height="15.0" fill="rgb(219,10,40)" rx="2" ry="2" />
<text  x="686.95" y="959.5" ></text>
</g>
<g >
<title>geojson::util::get_coords_3d_pos (2 samples, 0.20%)</title><rect x="11.2" y="1157" width="2.3" height="15.0" fill="rgb(208,53,4)" rx="2" ry="2" />
<text  x="14.16" y="1167.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;geos::geom::Coordinate const**&gt;, geos::geom::Coordinate const**&gt; (3 samples, 0.29%)</title><rect x="576.3" y="837" width="3.4" height="15.0" fill="rgb(238,144,7)" rx="2" ry="2" />
<text  x="579.26" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt;::operator (3 samples, 0.29%)</title><rect x="745.3" y="901" width="3.5" height="15.0" fill="rgb(254,153,52)" rx="2" ry="2" />
<text  x="748.33" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt;::allocate (7 samples, 0.69%)</title><rect x="1080.0" y="901" width="8.1" height="15.0" fill="rgb(238,125,38)" rx="2" ry="2" />
<text  x="1082.99" y="911.5" ></text>
</g>
<g >
<title>geo::utils::partition_slice (7 samples, 0.69%)</title><rect x="71.4" y="1093" width="8.1" height="15.0" fill="rgb(227,81,20)" rx="2" ry="2" />
<text  x="74.37" y="1103.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;geos::geom::Coordinate const*&gt;::_M_ptr (2 samples, 0.20%)</title><rect x="1056.8" y="917" width="2.3" height="15.0" fill="rgb(221,4,12)" rx="2" ry="2" />
<text  x="1059.83" y="927.5" ></text>
</g>
<g >
<title>&lt;geozero::geojson::geojson_reader::GeoJsonReader&lt;R&gt; as geozero::api::GeozeroDatasource&gt;::process (1 samples, 0.10%)</title><rect x="13.5" y="1397" width="1.1" height="15.0" fill="rgb(205,223,23)" rx="2" ry="2" />
<text  x="16.47" y="1407.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;geos::geom::Coordinate const*&gt;::_M_addr (1 samples, 0.10%)</title><rect x="589.0" y="869" width="1.2" height="15.0" fill="rgb(220,98,50)" rx="2" ry="2" />
<text  x="592.00" y="879.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.88%)</title><rect x="61.0" y="1061" width="10.4" height="15.0" fill="rgb(212,85,31)" rx="2" ry="2" />
<text  x="63.95" y="1071.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.10%)</title><rect x="396.8" y="869" width="1.1" height="15.0" fill="rgb(228,38,23)" rx="2" ry="2" />
<text  x="399.77" y="879.5" ></text>
</g>
<g >
<title>geos::geom::CoordinateLessThen::operator (3 samples, 0.29%)</title><rect x="1142.5" y="1429" width="3.5" height="15.0" fill="rgb(223,143,23)" rx="2" ry="2" />
<text  x="1145.52" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;geos::geom::Coordinate const*, std::vector&lt;geos::geom::Coordinate, std::allocator&lt;geos::geom::Coordinate&gt; &gt; &gt; (1 samples, 0.10%)</title><rect x="1129.8" y="1429" width="1.1" height="15.0" fill="rgb(239,221,26)" rx="2" ry="2" />
<text  x="1132.78" y="1439.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n_a&lt;geos::geom::Coordinate const**, unsigned long, geos::geom::Coordinate const*, geos::geom::Coordinate const*&gt; (1 samples, 0.10%)</title><rect x="865.8" y="949" width="1.1" height="15.0" fill="rgb(205,17,26)" rx="2" ry="2" />
<text  x="868.76" y="959.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndexFilter (1 samples, 0.10%)</title><rect x="681.6" y="933" width="1.2" height="15.0" fill="rgb(254,138,38)" rx="2" ry="2" />
<text  x="684.64" y="943.5" ></text>
</g>
<g >
<title>main (950 samples, 93.23%)</title><rect x="18.1" y="1413" width="1100.1" height="15.0" fill="rgb(251,35,46)" rx="2" ry="2" />
<text  x="21.11" y="1423.5" >main</text>
</g>
<g >
<title>geos::math::operator+ (1 samples, 0.10%)</title><rect x="766.2" y="837" width="1.1" height="15.0" fill="rgb(243,194,0)" rx="2" ry="2" />
<text  x="769.17" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_left (2 samples, 0.20%)</title><rect x="623.7" y="901" width="2.4" height="15.0" fill="rgb(231,82,24)" rx="2" ry="2" />
<text  x="626.74" y="911.5" ></text>
</g>
<g >
<title>harness::notsofine::run_once (928 samples, 91.07%)</title><rect x="43.6" y="1173" width="1074.6" height="15.0" fill="rgb(214,186,43)" rx="2" ry="2" />
<text  x="46.58" y="1183.5" >harness::notsofine::run_once</text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_put_node (1 samples, 0.10%)</title><rect x="1103.2" y="933" width="1.1" height="15.0" fill="rgb(224,38,13)" rx="2" ry="2" />
<text  x="1106.15" y="943.5" ></text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::operator (5 samples, 0.49%)</title><rect x="738.4" y="869" width="5.8" height="15.0" fill="rgb(240,62,25)" rx="2" ry="2" />
<text  x="741.38" y="879.5" ></text>
</g>
<g >
<title>malloc_consolidate (7 samples, 0.69%)</title><rect x="567.0" y="805" width="8.1" height="15.0" fill="rgb(245,0,39)" rx="2" ry="2" />
<text  x="570.00" y="815.5" ></text>
</g>
<g >
<title>geos::math::DD::selfAdd (1 samples, 0.10%)</title><rect x="766.2" y="821" width="1.1" height="15.0" fill="rgb(253,112,9)" rx="2" ry="2" />
<text  x="769.17" y="831.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::is_ccw (2 samples, 0.20%)</title><rect x="50.5" y="1029" width="2.3" height="15.0" fill="rgb(238,103,53)" rx="2" ry="2" />
<text  x="53.53" y="1039.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;geos::geom::Coordinate const*&gt;, bool&gt;::pair&lt;std::_Rb_tree_iterator&lt;geos::geom::Coordinate const*&gt;, bool, true&gt; (2 samples, 0.20%)</title><rect x="1093.9" y="981" width="2.3" height="15.0" fill="rgb(206,116,39)" rx="2" ry="2" />
<text  x="1096.89" y="991.5" ></text>
</g>
<g >
<title>&lt;geo::algorithm::kernels::robust::RobustKernel as geo::algorithm::kernels::Kernel&lt;T&gt;&gt;::orient2d (1 samples, 0.10%)</title><rect x="51.7" y="1013" width="1.1" height="15.0" fill="rgb(250,147,3)" rx="2" ry="2" />
<text  x="54.69" y="1023.5" ></text>
</g>
<g >
<title>geojson::util::json_to_2d_positions (1 samples, 0.10%)</title><rect x="13.5" y="1141" width="1.1" height="15.0" fill="rgb(207,174,20)" rx="2" ry="2" />
<text  x="16.47" y="1151.5" ></text>
</g>
<g >
<title>geos::algorithm::PointLocation::locateInRing (1 samples, 0.10%)</title><rect x="1126.3" y="1445" width="1.2" height="15.0" fill="rgb(216,49,13)" rx="2" ry="2" />
<text  x="1129.31" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::operator- (1 samples, 0.10%)</title><rect x="14.6" y="1445" width="1.2" height="15.0" fill="rgb(252,168,5)" rx="2" ry="2" />
<text  x="17.63" y="1455.5" ></text>
</g>
<g >
<title>core::cmp::Ordering::then (1 samples, 0.10%)</title><rect x="62.1" y="997" width="1.2" height="15.0" fill="rgb(217,177,52)" rx="2" ry="2" />
<text  x="65.11" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;geos::geom::Coordinate const*&gt;::destroy&lt;geos::geom::Coordinate const*&gt; (1 samples, 0.10%)</title><rect x="670.1" y="981" width="1.1" height="15.0" fill="rgb(237,98,3)" rx="2" ry="2" />
<text  x="673.06" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (31 samples, 3.04%)</title><rect x="591.3" y="933" width="35.9" height="15.0" fill="rgb(215,114,11)" rx="2" ry="2" />
<text  x="594.32" y="943.5" >std..</text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; (79 samples, 7.75%)</title><rect x="694.4" y="1013" width="91.5" height="15.0" fill="rgb(228,59,45)" rx="2" ry="2" />
<text  x="697.38" y="1023.5" >std::sort&lt;..</text>
</g>
<g >
<title>GEOSConvexHull_r::{lambda (896 samples, 87.93%)</title><rect x="79.5" y="1077" width="1037.5" height="15.0" fill="rgb(215,47,38)" rx="2" ry="2" />
<text  x="82.48" y="1087.5" >GEOSConvexHull_r::{lambda</text>
</g>
<g >
<title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (17 samples, 1.67%)</title><rect x="19.3" y="581" width="19.6" height="15.0" fill="rgb(213,78,32)" rx="2" ry="2" />
<text  x="22.26" y="591.5" ></text>
</g>
<g >
<title>&lt;std::fs::File as std::io::Read&gt;::read (2 samples, 0.20%)</title><rect x="41.3" y="1013" width="2.3" height="15.0" fill="rgb(220,110,37)" rx="2" ry="2" />
<text  x="44.27" y="1023.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::hull_set::_$u7b$$u7b$closure$u7d$$u7d$::h7ef82cb128e83fda (1 samples, 0.10%)</title><rect x="45.9" y="965" width="1.2" height="15.0" fill="rgb(214,43,49)" rx="2" ry="2" />
<text  x="48.90" y="975.5" ></text>
</g>
<g >
<title>&lt;geo_types::multi_polygon::MultiPolygon&lt;T&gt; as geo::algorithm::convex_hull::ConvexHull&gt;::convex_hull (31 samples, 3.04%)</title><rect x="43.6" y="1125" width="35.9" height="15.0" fill="rgb(228,47,36)" rx="2" ry="2" />
<text  x="46.58" y="1135.5" >&lt;ge..</text>
</g>
<g >
<title>operator new (1 samples, 0.10%)</title><rect x="433.8" y="837" width="1.2" height="15.0" fill="rgb(250,119,50)" rx="2" ry="2" />
<text  x="436.83" y="847.5" ></text>
</g>
<g >
<title>serde_json::value::Value::as_f64 (1 samples, 0.10%)</title><rect x="12.3" y="1061" width="1.2" height="15.0" fill="rgb(249,175,44)" rx="2" ry="2" />
<text  x="15.32" y="1071.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt;::deallocate (1 samples, 0.10%)</title><rect x="16.9" y="1445" width="1.2" height="15.0" fill="rgb(212,82,51)" rx="2" ry="2" />
<text  x="19.95" y="1455.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::operator++ (1 samples, 0.10%)</title><rect x="704.8" y="949" width="1.2" height="15.0" fill="rgb(245,229,51)" rx="2" ry="2" />
<text  x="707.80" y="959.5" ></text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::operator (9 samples, 0.88%)</title><rect x="773.1" y="917" width="10.4" height="15.0" fill="rgb(228,129,22)" rx="2" ry="2" />
<text  x="776.12" y="927.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;f64&gt;]&gt; (1 samples, 0.10%)</title><rect x="18.1" y="853" width="1.2" height="15.0" fill="rgb(248,110,41)" rx="2" ry="2" />
<text  x="21.11" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_construct_node&lt;geos::geom::Coordinate const* const&amp;&gt; (2 samples, 0.20%)</title><rect x="1133.3" y="1445" width="2.3" height="15.0" fill="rgb(238,133,31)" rx="2" ry="2" />
<text  x="1136.26" y="1455.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.10%)</title><rect x="743.0" y="741" width="1.2" height="15.0" fill="rgb(222,5,27)" rx="2" ry="2" />
<text  x="746.01" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;geos::geom::Coordinate const*&gt;::_M_ptr (1 samples, 0.10%)</title><rect x="1107.8" y="837" width="1.1" height="15.0" fill="rgb(209,208,50)" rx="2" ry="2" />
<text  x="1110.78" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_assign_dispatch&lt;std::_Rb_tree_const_iterator&lt;geos::geom::Coordinate const*&gt; &gt; (6 samples, 0.59%)</title><rect x="1110.1" y="997" width="6.9" height="15.0" fill="rgb(239,200,17)" rx="2" ry="2" />
<text  x="1113.10" y="1007.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_number (4 samples, 0.39%)</title><rect x="33.2" y="165" width="4.6" height="15.0" fill="rgb(209,178,46)" rx="2" ry="2" />
<text  x="36.16" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;geos::geom::LinearRing, std::default_delete&lt;geos::geom::LinearRing&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;geos::geom::LinearRing, std::default_delete&lt;geos::geom::LinearRing&gt; &gt; &gt; &gt;::end (1 samples, 0.10%)</title><rect x="583.2" y="981" width="1.2" height="15.0" fill="rgb(226,150,38)" rx="2" ry="2" />
<text  x="586.21" y="991.5" ></text>
</g>
<g >
<title>std::move&lt;std::unique_ptr&lt;geos::geom::LinearRing, std::default_delete&lt;geos::geom::LinearRing&gt; &gt;&amp;&gt; (1 samples, 0.10%)</title><rect x="692.1" y="981" width="1.1" height="15.0" fill="rgb(207,224,8)" rx="2" ry="2" />
<text  x="695.06" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::pop_back (5 samples, 0.49%)</title><rect x="665.4" y="1013" width="5.8" height="15.0" fill="rgb(221,107,2)" rx="2" ry="2" />
<text  x="668.43" y="1023.5" ></text>
</g>
<g >
<title>harness::data::load_multipolygon_pack (22 samples, 2.16%)</title><rect x="18.1" y="1189" width="25.5" height="15.0" fill="rgb(212,176,0)" rx="2" ry="2" />
<text  x="21.11" y="1199.5" >h..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Val_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt;::_Val_comp_iter (1 samples, 0.10%)</title><rect x="15.8" y="1429" width="1.1" height="15.0" fill="rgb(235,193,7)" rx="2" ry="2" />
<text  x="18.79" y="1439.5" ></text>
</g>
<g >
<title>geos::algorithm::ConvexHull::getConvexHull (423 samples, 41.51%)</title><rect x="627.2" y="1045" width="489.8" height="15.0" fill="rgb(208,217,4)" rx="2" ry="2" />
<text  x="630.21" y="1055.5" >geos::algorithm::ConvexHull::getConvexHull</text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::operator[] (16 samples, 1.57%)</title><rect x="986.2" y="965" width="18.5" height="15.0" fill="rgb(212,50,9)" rx="2" ry="2" />
<text  x="989.19" y="975.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.10%)</title><rect x="11.2" y="1093" width="1.1" height="15.0" fill="rgb(242,97,35)" rx="2" ry="2" />
<text  x="14.16" y="1103.5" ></text>
</g>
<g >
<title>std::_Identity&lt;geos::geom::Coordinate const*&gt;::operator (3 samples, 0.29%)</title><rect x="492.9" y="869" width="3.5" height="15.0" fill="rgb(244,11,16)" rx="2" ry="2" />
<text  x="495.89" y="879.5" ></text>
</g>
<g >
<title>geos::geom::Polygon::~Polygon (1 samples, 0.10%)</title><rect x="1117.0" y="1045" width="1.2" height="15.0" fill="rgb(220,174,53)" rx="2" ry="2" />
<text  x="1120.05" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.10%)</title><rect x="11.2" y="1061" width="1.1" height="15.0" fill="rgb(242,79,29)" rx="2" ry="2" />
<text  x="14.16" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;geos::geometry::Geometry&gt; (1 samples, 0.10%)</title><rect x="1117.0" y="1125" width="1.2" height="15.0" fill="rgb(237,129,10)" rx="2" ry="2" />
<text  x="1120.05" y="1135.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::hull_set (8 samples, 0.79%)</title><rect x="45.9" y="1077" width="9.3" height="15.0" fill="rgb(223,15,37)" rx="2" ry="2" />
<text  x="48.90" y="1087.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::push_back (29 samples, 2.85%)</title><rect x="548.5" y="933" width="33.6" height="15.0" fill="rgb(254,44,26)" rx="2" ry="2" />
<text  x="551.47" y="943.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_insert_&lt;geos::geom::Coordinate const* const&amp;, std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_Alloc_node&gt; (23 samples, 2.26%)</title><rect x="1066.1" y="981" width="26.6" height="15.0" fill="rgb(229,150,5)" rx="2" ry="2" />
<text  x="1069.09" y="991.5" >s..</text>
</g>
<g >
<title>std::copy&lt;std::_Rb_tree_const_iterator&lt;geos::geom::Coordinate const*&gt;, geos::geom::Coordinate const**&gt; (6 samples, 0.59%)</title><rect x="1110.1" y="965" width="6.9" height="15.0" fill="rgb(254,107,48)" rx="2" ry="2" />
<text  x="1113.10" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_put_node (1 samples, 0.10%)</title><rect x="585.5" y="933" width="1.2" height="15.0" fill="rgb(209,125,29)" rx="2" ry="2" />
<text  x="588.53" y="943.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;geos::geom::Coordinate const**&gt;, geos::geom::Coordinate const**&gt; (1 samples, 0.10%)</title><rect x="685.1" y="917" width="1.2" height="15.0" fill="rgb(206,213,38)" rx="2" ry="2" />
<text  x="688.11" y="927.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (1 samples, 0.10%)</title><rect x="696.7" y="869" width="1.2" height="15.0" fill="rgb(242,186,53)" rx="2" ry="2" />
<text  x="699.69" y="879.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::operator* (1 samples, 0.10%)</title><rect x="866.9" y="933" width="1.2" height="15.0" fill="rgb(238,200,25)" rx="2" ry="2" />
<text  x="869.92" y="943.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1 samples, 0.10%)</title><rect x="36.6" y="85" width="1.2" height="15.0" fill="rgb(219,2,3)" rx="2" ry="2" />
<text  x="39.63" y="95.5" ></text>
</g>
<g >
<title>std::__adjacent_find&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (1 samples, 0.10%)</title><rect x="866.9" y="965" width="1.2" height="15.0" fill="rgb(222,183,11)" rx="2" ry="2" />
<text  x="869.92" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;::_M_valptr (1 samples, 0.10%)</title><rect x="496.4" y="853" width="1.1" height="15.0" fill="rgb(223,208,16)" rx="2" ry="2" />
<text  x="499.36" y="863.5" ></text>
</g>
<g >
<title>geos::algorithm::ConvexHull::ConvexHull (473 samples, 46.42%)</title><rect x="79.5" y="1045" width="547.7" height="15.0" fill="rgb(229,35,34)" rx="2" ry="2" />
<text  x="82.48" y="1055.5" >geos::algorithm::ConvexHull::ConvexHull</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="685.1" y="837" width="1.2" height="15.0" fill="rgb(238,176,6)" rx="2" ry="2" />
<text  x="688.11" y="847.5" ></text>
</g>
<g >
<title>std::move&lt;geos::geom::Coordinate const*&amp;&gt; (1 samples, 0.10%)</title><rect x="783.5" y="901" width="1.2" height="15.0" fill="rgb(247,134,30)" rx="2" ry="2" />
<text  x="786.54" y="911.5" ></text>
</g>
<g >
<title>geos::algorithm::ConvexHull::lineOrPolygon (11 samples, 1.08%)</title><rect x="680.5" y="1029" width="12.7" height="15.0" fill="rgb(248,0,18)" rx="2" ry="2" />
<text  x="683.48" y="1039.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (1 samples, 0.10%)</title><rect x="747.6" y="821" width="1.2" height="15.0" fill="rgb(212,89,20)" rx="2" ry="2" />
<text  x="750.64" y="831.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.10%)</title><rect x="1108.9" y="821" width="1.2" height="15.0" fill="rgb(209,8,23)" rx="2" ry="2" />
<text  x="1111.94" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;geos::geom::LinearRing, std::default_delete&lt;geos::geom::LinearRing&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;geos::geom::LinearRing, std::default_delete&lt;geos::geom::LinearRing&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;geos::geom::LinearRing, std::default_delete&lt;geos::geom::LinearRing&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1 samples, 0.10%)</title><rect x="583.2" y="965" width="1.2" height="15.0" fill="rgb(213,112,38)" rx="2" ry="2" />
<text  x="586.21" y="975.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.20%)</title><rect x="43.6" y="1045" width="2.3" height="15.0" fill="rgb(227,199,54)" rx="2" ry="2" />
<text  x="46.58" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;geos::geom::Coordinate const*&gt;::operator* (1 samples, 0.10%)</title><rect x="1112.4" y="901" width="1.2" height="15.0" fill="rgb(242,223,28)" rx="2" ry="2" />
<text  x="1115.41" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;::_M_valptr (1 samples, 0.10%)</title><rect x="1107.8" y="853" width="1.1" height="15.0" fill="rgb(235,100,22)" rx="2" ry="2" />
<text  x="1110.78" y="863.5" ></text>
</g>
<g >
<title>geojson::util::get_coords_3d_pos (1 samples, 0.10%)</title><rect x="13.5" y="1173" width="1.1" height="15.0" fill="rgb(236,49,25)" rx="2" ry="2" />
<text  x="16.47" y="1183.5" ></text>
</g>
<g >
<title>geos::geom::CoordinateLessThen::operator (6 samples, 0.59%)</title><rect x="417.6" y="885" width="7.0" height="15.0" fill="rgb(218,189,44)" rx="2" ry="2" />
<text  x="420.62" y="895.5" ></text>
</g>
<g >
<title>geojson::util::json_to_2d_positions (1 samples, 0.10%)</title><rect x="12.3" y="1125" width="1.2" height="15.0" fill="rgb(248,196,39)" rx="2" ry="2" />
<text  x="15.32" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;::_M_valptr (1 samples, 0.10%)</title><rect x="617.9" y="757" width="1.2" height="15.0" fill="rgb(205,118,5)" rx="2" ry="2" />
<text  x="620.95" y="767.5" ></text>
</g>
<g >
<title>std::__unguarded_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (29 samples, 2.85%)</title><rect x="704.8" y="965" width="33.6" height="15.0" fill="rgb(242,90,54)" rx="2" ry="2" />
<text  x="707.80" y="975.5" >st..</text>
</g>
<g >
<title>geojson::util::json_to_1d_positions (1 samples, 0.10%)</title><rect x="13.5" y="1125" width="1.1" height="15.0" fill="rgb(254,107,36)" rx="2" ry="2" />
<text  x="16.47" y="1135.5" ></text>
</g>
<g >
<title>robust::orient2d (2 samples, 0.20%)</title><rect x="52.8" y="997" width="2.4" height="15.0" fill="rgb(248,124,8)" rx="2" ry="2" />
<text  x="55.85" y="1007.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="19.3" y="357" width="2.3" height="15.0" fill="rgb(232,206,43)" rx="2" ry="2" />
<text  x="22.26" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::deallocate (1 samples, 0.10%)</title><rect x="1105.5" y="885" width="1.1" height="15.0" fill="rgb(250,168,16)" rx="2" ry="2" />
<text  x="1108.47" y="895.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.10%)</title><rect x="1099.7" y="901" width="1.1" height="15.0" fill="rgb(239,204,19)" rx="2" ry="2" />
<text  x="1102.68" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;geos::geom::Coordinate const*&gt;::_Rb_tree_const_iterator (3 samples, 0.29%)</title><rect x="545.0" y="901" width="3.5" height="15.0" fill="rgb(234,170,15)" rx="2" ry="2" />
<text  x="548.00" y="911.5" ></text>
</g>
<g >
<title>std::isfinite (6 samples, 0.59%)</title><rect x="970.0" y="917" width="6.9" height="15.0" fill="rgb(232,8,42)" rx="2" ry="2" />
<text  x="972.98" y="927.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18 samples, 1.77%)</title><rect x="19.3" y="949" width="20.8" height="15.0" fill="rgb(211,128,25)" rx="2" ry="2" />
<text  x="22.26" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;geos::geom::Coordinate const*&gt;::_M_addr (1 samples, 0.10%)</title><rect x="1107.8" y="821" width="1.1" height="15.0" fill="rgb(242,204,18)" rx="2" ry="2" />
<text  x="1110.78" y="831.5" ></text>
</g>
<g >
<title>GEOSGeom_destroy_r (1 samples, 0.10%)</title><rect x="1117.0" y="1109" width="1.2" height="15.0" fill="rgb(208,124,2)" rx="2" ry="2" />
<text  x="1120.05" y="1119.5" ></text>
</g>
<g >
<title>harness::data::load_multipolygon_pack (3 samples, 0.29%)</title><rect x="10.0" y="1413" width="3.5" height="15.0" fill="rgb(234,165,32)" rx="2" ry="2" />
<text  x="13.00" y="1423.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (24 samples, 2.36%)</title><rect x="598.3" y="917" width="27.8" height="15.0" fill="rgb(229,61,24)" rx="2" ry="2" />
<text  x="601.26" y="927.5" >s..</text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;geos::geom::Coordinate const**&gt;, geos::geom::Coordinate const**&gt; (1 samples, 0.10%)</title><rect x="685.1" y="933" width="1.2" height="15.0" fill="rgb(225,133,28)" rx="2" ry="2" />
<text  x="688.11" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::assign&lt;std::_Rb_tree_const_iterator&lt;geos::geom::Coordinate const*&gt;, void&gt; (6 samples, 0.59%)</title><rect x="1110.1" y="1013" width="6.9" height="15.0" fill="rgb(231,73,48)" rx="2" ry="2" />
<text  x="1113.10" y="1023.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;geos::geom::Coordinate const**, geos::geom::Coordinate const**, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; (1 samples, 0.10%)</title><rect x="678.2" y="981" width="1.1" height="15.0" fill="rgb(226,82,39)" rx="2" ry="2" />
<text  x="681.16" y="991.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (5 samples, 0.49%)</title><rect x="744.2" y="933" width="5.8" height="15.0" fill="rgb(226,1,32)" rx="2" ry="2" />
<text  x="747.17" y="943.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (7 samples, 0.69%)</title><rect x="756.9" y="837" width="8.1" height="15.0" fill="rgb(226,84,31)" rx="2" ry="2" />
<text  x="759.91" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_drop_node (2 samples, 0.20%)</title><rect x="615.6" y="805" width="2.3" height="15.0" fill="rgb(251,204,44)" rx="2" ry="2" />
<text  x="618.63" y="815.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (15 samples, 1.47%)</title><rect x="721.0" y="869" width="17.4" height="15.0" fill="rgb(227,40,16)" rx="2" ry="2" />
<text  x="724.01" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_insert_unique_pos (1 samples, 0.10%)</title><rect x="1098.5" y="949" width="1.2" height="15.0" fill="rgb(234,33,47)" rx="2" ry="2" />
<text  x="1101.52" y="959.5" ></text>
</g>
<g >
<title>&lt;geo::algorithm::kernels::Orientation as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="50.5" y="1013" width="1.2" height="15.0" fill="rgb(227,21,34)" rx="2" ry="2" />
<text  x="53.53" y="1023.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.10%)</title><rect x="743.0" y="709" width="1.2" height="15.0" fill="rgb(208,71,22)" rx="2" ry="2" />
<text  x="746.01" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;::_M_valptr (8 samples, 0.79%)</title><rect x="1049.9" y="933" width="9.2" height="15.0" fill="rgb(213,142,51)" rx="2" ry="2" />
<text  x="1052.88" y="943.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::bidirectional_iterator_tag&gt;::__copy_m&lt;std::_Rb_tree_const_iterator&lt;geos::geom::Coordinate const*&gt;, geos::geom::Coordinate const**&gt; (5 samples, 0.49%)</title><rect x="1110.1" y="917" width="5.8" height="15.0" fill="rgb(233,147,32)" rx="2" ry="2" />
<text  x="1113.10" y="927.5" ></text>
</g>
<g >
<title>geos::algorithm::Orientation::index (10 samples, 0.98%)</title><rect x="753.4" y="869" width="11.6" height="15.0" fill="rgb(241,92,3)" rx="2" ry="2" />
<text  x="756.43" y="879.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.20%)</title><rect x="595.9" y="853" width="2.4" height="15.0" fill="rgb(234,193,45)" rx="2" ry="2" />
<text  x="598.95" y="863.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.10%)</title><rect x="602.9" y="837" width="1.2" height="15.0" fill="rgb(237,91,13)" rx="2" ry="2" />
<text  x="605.89" y="847.5" ></text>
</g>
<g >
<title>&lt;geojson::feature_collection::FeatureCollection as core::convert::TryFrom&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;&gt;::try_from (3 samples, 0.29%)</title><rect x="10.0" y="1285" width="3.5" height="15.0" fill="rgb(213,186,16)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="13.5" y="1029" width="1.1" height="15.0" fill="rgb(218,167,28)" rx="2" ry="2" />
<text  x="16.47" y="1039.5" ></text>
</g>
<g >
<title>_int_malloc (12 samples, 1.18%)</title><rect x="468.6" y="773" width="13.9" height="15.0" fill="rgb(212,205,1)" rx="2" ry="2" />
<text  x="471.57" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (23 samples, 2.26%)</title><rect x="497.5" y="885" width="26.7" height="15.0" fill="rgb(218,101,6)" rx="2" ry="2" />
<text  x="500.52" y="895.5" >s..</text>
</g>
<g >
<title>__GI___libc_free (2 samples, 0.20%)</title><rect x="615.6" y="741" width="2.3" height="15.0" fill="rgb(242,107,0)" rx="2" ry="2" />
<text  x="618.63" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt;::deallocate (1 samples, 0.10%)</title><rect x="1105.5" y="869" width="1.1" height="15.0" fill="rgb(210,75,46)" rx="2" ry="2" />
<text  x="1108.47" y="879.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::unique_ptr&lt;geos::geom::LinearRing, std::default_delete&lt;geos::geom::LinearRing&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;geos::geom::LinearRing, std::default_delete&lt;geos::geom::LinearRing&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;geos::geom::LinearRing, std::default_delete&lt;geos::geom::LinearRing&gt; &gt; &gt; &gt; &gt;@plt (1 samples, 0.10%)</title><rect x="80.6" y="981" width="1.2" height="15.0" fill="rgb(210,6,8)" rx="2" ry="2" />
<text  x="83.64" y="991.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (950 samples, 93.23%)</title><rect x="18.1" y="1285" width="1100.1" height="15.0" fill="rgb(248,100,29)" rx="2" ry="2" />
<text  x="21.11" y="1295.5" >std::panicking::try::do_call</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const*, std::vector&lt;geos::geom::Coordinate, std::allocator&lt;geos::geom::Coordinate&gt; &gt; &gt;::base (3 samples, 0.29%)</title><rect x="89.9" y="933" width="3.5" height="15.0" fill="rgb(212,193,49)" rx="2" ry="2" />
<text  x="92.90" y="943.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;geojson::geometry::Geometry&gt; (1 samples, 0.10%)</title><rect x="18.1" y="1013" width="1.2" height="15.0" fill="rgb(224,149,36)" rx="2" ry="2" />
<text  x="21.11" y="1023.5" ></text>
</g>
<g >
<title>&lt;geo::algorithm::kernels::robust::RobustKernel as geo::algorithm::kernels::Kernel&lt;T&gt;&gt;::orient2d (1 samples, 0.10%)</title><rect x="59.8" y="1029" width="1.2" height="15.0" fill="rgb(254,110,51)" rx="2" ry="2" />
<text  x="62.79" y="1039.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (8 samples, 0.79%)</title><rect x="29.7" y="277" width="9.2" height="15.0" fill="rgb(211,187,45)" rx="2" ry="2" />
<text  x="32.69" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt;::operator (13 samples, 1.28%)</title><rect x="750.0" y="917" width="15.0" height="15.0" fill="rgb(227,153,37)" rx="2" ry="2" />
<text  x="752.96" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_value (11 samples, 1.08%)</title><rect x="1169.2" y="1429" width="12.7" height="15.0" fill="rgb(237,147,11)" rx="2" ry="2" />
<text  x="1172.16" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::operator- (6 samples, 0.59%)</title><rect x="646.9" y="997" width="6.9" height="15.0" fill="rgb(223,47,4)" rx="2" ry="2" />
<text  x="649.90" y="1007.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (950 samples, 93.23%)</title><rect x="18.1" y="1349" width="1100.1" height="15.0" fill="rgb(238,168,40)" rx="2" ry="2" />
<text  x="21.11" y="1359.5" >std::panicking::try::do_call</text>
</g>
<g >
<title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.77%)</title><rect x="19.3" y="1013" width="20.8" height="15.0" fill="rgb(219,88,33)" rx="2" ry="2" />
<text  x="22.26" y="1023.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.10%)</title><rect x="16.9" y="1429" width="1.2" height="15.0" fill="rgb(225,94,2)" rx="2" ry="2" />
<text  x="19.95" y="1439.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (17 samples, 1.67%)</title><rect x="19.3" y="549" width="19.6" height="15.0" fill="rgb(252,153,28)" rx="2" ry="2" />
<text  x="22.26" y="559.5" ></text>
</g>
<g >
<title>geojson::feature::&lt;impl core::convert::TryFrom&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; for geojson::Feature&gt;::try_from (1 samples, 0.10%)</title><rect x="13.5" y="1253" width="1.1" height="15.0" fill="rgb(242,204,17)" rx="2" ry="2" />
<text  x="16.47" y="1263.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (1 samples, 0.10%)</title><rect x="766.2" y="853" width="1.1" height="15.0" fill="rgb(254,93,48)" rx="2" ry="2" />
<text  x="769.17" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_left (6 samples, 0.59%)</title><rect x="379.4" y="885" width="6.9" height="15.0" fill="rgb(221,27,44)" rx="2" ry="2" />
<text  x="382.40" y="895.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (2 samples, 0.20%)</title><rect x="19.3" y="245" width="2.3" height="15.0" fill="rgb(216,95,30)" rx="2" ry="2" />
<text  x="22.26" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="18.1" y="805" width="1.2" height="15.0" fill="rgb(219,48,49)" rx="2" ry="2" />
<text  x="21.11" y="815.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (31 samples, 3.04%)</title><rect x="941.0" y="949" width="35.9" height="15.0" fill="rgb(250,179,5)" rx="2" ry="2" />
<text  x="944.03" y="959.5" >geo..</text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;geos::geom::Coordinate const*&gt;::_M_ptr (1 samples, 0.10%)</title><rect x="605.2" y="837" width="1.2" height="15.0" fill="rgb(234,68,39)" rx="2" ry="2" />
<text  x="608.21" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;f64&gt;&gt;&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="18.1" y="981" width="1.2" height="15.0" fill="rgb(245,219,32)" rx="2" ry="2" />
<text  x="21.11" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_Alloc_node::_Alloc_node (1 samples, 0.10%)</title><rect x="1015.1" y="981" width="1.2" height="15.0" fill="rgb(219,89,0)" rx="2" ry="2" />
<text  x="1018.14" y="991.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17 samples, 1.67%)</title><rect x="19.3" y="629" width="19.6" height="15.0" fill="rgb(207,50,14)" rx="2" ry="2" />
<text  x="22.26" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::operator[]@plt (2 samples, 0.20%)</title><rect x="863.4" y="981" width="2.4" height="15.0" fill="rgb(209,6,53)" rx="2" ry="2" />
<text  x="866.44" y="991.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.59%)</title><rect x="1081.1" y="885" width="7.0" height="15.0" fill="rgb(234,104,33)" rx="2" ry="2" />
<text  x="1084.15" y="895.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::is_ccw (2 samples, 0.20%)</title><rect x="52.8" y="1029" width="2.4" height="15.0" fill="rgb(250,102,25)" rx="2" ry="2" />
<text  x="55.85" y="1039.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (18 samples, 1.77%)</title><rect x="19.3" y="997" width="20.8" height="15.0" fill="rgb(205,26,29)" rx="2" ry="2" />
<text  x="22.26" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_destroy_node (1 samples, 0.10%)</title><rect x="609.8" y="853" width="1.2" height="15.0" fill="rgb(233,25,54)" rx="2" ry="2" />
<text  x="612.84" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (8 samples, 0.79%)</title><rect x="1100.8" y="965" width="9.3" height="15.0" fill="rgb(207,24,21)" rx="2" ry="2" />
<text  x="1103.83" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;geos::geom::Coordinate const*&gt;::_M_addr (2 samples, 0.20%)</title><rect x="441.9" y="805" width="2.3" height="15.0" fill="rgb(234,148,19)" rx="2" ry="2" />
<text  x="444.93" y="815.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (9 samples, 0.88%)</title><rect x="754.6" y="853" width="10.4" height="15.0" fill="rgb(228,226,33)" rx="2" ry="2" />
<text  x="757.59" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_insert_&lt;geos::geom::Coordinate const*&amp;, std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_Alloc_node&gt; (1 samples, 0.10%)</title><rect x="1099.7" y="965" width="1.1" height="15.0" fill="rgb(229,219,52)" rx="2" ry="2" />
<text  x="1102.68" y="975.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.10%)</title><rect x="11.2" y="949" width="1.1" height="15.0" fill="rgb(219,175,35)" rx="2" ry="2" />
<text  x="14.16" y="959.5" ></text>
</g>
<g >
<title>geos::algorithm::RayCrossingCounter::locatePointInRing (2 samples, 0.20%)</title><rect x="1127.5" y="1445" width="2.3" height="15.0" fill="rgb(235,114,46)" rx="2" ry="2" />
<text  x="1130.47" y="1455.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (1 samples, 0.10%)</title><rect x="681.6" y="949" width="1.2" height="15.0" fill="rgb(219,224,5)" rx="2" ry="2" />
<text  x="684.64" y="959.5" ></text>
</g>
<g >
<title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (17 samples, 1.67%)</title><rect x="19.3" y="389" width="19.6" height="15.0" fill="rgb(244,152,21)" rx="2" ry="2" />
<text  x="22.26" y="399.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.20%)</title><rect x="41.3" y="901" width="2.3" height="15.0" fill="rgb(216,180,1)" rx="2" ry="2" />
<text  x="44.27" y="911.5" ></text>
</g>
<g >
<title>geos::algorithm::Orientation::index (12 samples, 1.18%)</title><rect x="630.7" y="1013" width="13.9" height="15.0" fill="rgb(240,10,32)" rx="2" ry="2" />
<text  x="633.69" y="1023.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::allocate (4 samples, 0.39%)</title><rect x="1161.1" y="1429" width="4.6" height="15.0" fill="rgb(251,133,13)" rx="2" ry="2" />
<text  x="1164.05" y="1439.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndexFilter (1 samples, 0.10%)</title><rect x="747.6" y="805" width="1.2" height="15.0" fill="rgb(231,173,12)" rx="2" ry="2" />
<text  x="750.64" y="815.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::deallocate (1 samples, 0.10%)</title><rect x="602.9" y="869" width="1.2" height="15.0" fill="rgb(221,140,52)" rx="2" ry="2" />
<text  x="605.89" y="879.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::construct&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const* const&amp;&gt; (5 samples, 0.49%)</title><rect x="444.2" y="837" width="5.8" height="15.0" fill="rgb(248,67,23)" rx="2" ry="2" />
<text  x="447.25" y="847.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1 samples, 0.10%)</title><rect x="38.9" y="661" width="1.2" height="15.0" fill="rgb(223,119,30)" rx="2" ry="2" />
<text  x="41.95" y="671.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.10%)</title><rect x="612.2" y="805" width="1.1" height="15.0" fill="rgb(244,93,40)" rx="2" ry="2" />
<text  x="615.16" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.20%)</title><rect x="41.3" y="949" width="2.3" height="15.0" fill="rgb(239,152,49)" rx="2" ry="2" />
<text  x="44.27" y="959.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndexFilter (11 samples, 1.08%)</title><rect x="724.5" y="837" width="12.7" height="15.0" fill="rgb(238,64,29)" rx="2" ry="2" />
<text  x="727.48" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="13.5" y="1045" width="1.1" height="15.0" fill="rgb(244,59,43)" rx="2" ry="2" />
<text  x="16.47" y="1055.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="18.1" y="1077" width="1.2" height="15.0" fill="rgb(229,29,30)" rx="2" ry="2" />
<text  x="21.11" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;::_M_valptr (4 samples, 0.39%)</title><rect x="1184.2" y="1445" width="4.6" height="15.0" fill="rgb(251,38,12)" rx="2" ry="2" />
<text  x="1187.21" y="1455.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.10%)</title><rect x="11.2" y="1077" width="1.1" height="15.0" fill="rgb(222,161,20)" rx="2" ry="2" />
<text  x="14.16" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_put_node (1 samples, 0.10%)</title><rect x="590.2" y="917" width="1.1" height="15.0" fill="rgb(216,73,16)" rx="2" ry="2" />
<text  x="593.16" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;geos::geom::Coordinate const*&gt;::_M_ptr (20 samples, 1.96%)</title><rect x="349.3" y="837" width="23.2" height="15.0" fill="rgb(225,210,27)" rx="2" ry="2" />
<text  x="352.29" y="847.5" >_..</text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::vector (1 samples, 0.10%)</title><rect x="865.8" y="981" width="1.1" height="15.0" fill="rgb(232,138,11)" rx="2" ry="2" />
<text  x="868.76" y="991.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::__normal_iterator (2 samples, 0.20%)</title><rect x="651.5" y="981" width="2.3" height="15.0" fill="rgb(224,139,45)" rx="2" ry="2" />
<text  x="654.53" y="991.5" ></text>
</g>
<g >
<title>geo::utils::lex_cmp (8 samples, 0.79%)</title><rect x="62.1" y="1013" width="9.3" height="15.0" fill="rgb(211,188,51)" rx="2" ry="2" />
<text  x="65.11" y="1023.5" ></text>
</g>
<g >
<title>geos::algorithm::Orientation::index (1 samples, 0.10%)</title><rect x="681.6" y="981" width="1.2" height="15.0" fill="rgb(215,204,37)" rx="2" ry="2" />
<text  x="684.64" y="991.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (5 samples, 0.49%)</title><rect x="32.0" y="181" width="5.8" height="15.0" fill="rgb(231,228,3)" rx="2" ry="2" />
<text  x="35.00" y="191.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.20%)</title><rect x="41.3" y="821" width="2.3" height="15.0" fill="rgb(209,37,1)" rx="2" ry="2" />
<text  x="44.27" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.10%)</title><rect x="30.8" y="197" width="1.2" height="15.0" fill="rgb(219,118,2)" rx="2" ry="2" />
<text  x="33.84" y="207.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.20%)</title><rect x="19.3" y="69" width="2.3" height="15.0" fill="rgb(216,209,15)" rx="2" ry="2" />
<text  x="22.26" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_destroy_node (2 samples, 0.20%)</title><rect x="592.5" y="901" width="2.3" height="15.0" fill="rgb(217,76,38)" rx="2" ry="2" />
<text  x="595.47" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const*, std::vector&lt;geos::geom::Coordinate, std::allocator&lt;geos::geom::Coordinate&gt; &gt; &gt;::operator* (1 samples, 0.10%)</title><rect x="84.1" y="949" width="1.2" height="15.0" fill="rgb(223,38,20)" rx="2" ry="2" />
<text  x="87.11" y="959.5" ></text>
</g>
<g >
<title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18 samples, 1.77%)</title><rect x="19.3" y="725" width="20.8" height="15.0" fill="rgb(250,157,38)" rx="2" ry="2" />
<text  x="22.26" y="735.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (2 samples, 0.20%)</title><rect x="19.3" y="293" width="2.3" height="15.0" fill="rgb(216,150,30)" rx="2" ry="2" />
<text  x="22.26" y="303.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (1 samples, 0.10%)</title><rect x="703.6" y="853" width="1.2" height="15.0" fill="rgb(254,212,35)" rx="2" ry="2" />
<text  x="706.64" y="863.5" ></text>
</g>
<g >
<title>std::forward&lt;bool&gt; (1 samples, 0.10%)</title><rect x="529.9" y="885" width="1.2" height="15.0" fill="rgb(240,212,21)" rx="2" ry="2" />
<text  x="532.94" y="895.5" ></text>
</g>
<g >
<title>geos::geom::Coordinate::compareTo (68 samples, 6.67%)</title><rect x="196.4" y="869" width="78.8" height="15.0" fill="rgb(232,185,0)" rx="2" ry="2" />
<text  x="199.44" y="879.5" >geos::geo..</text>
</g>
<g >
<title>std::forward&lt;geos::geom::Coordinate const* const&amp;&gt; (1 samples, 0.10%)</title><rect x="1092.7" y="981" width="1.2" height="15.0" fill="rgb(219,80,9)" rx="2" ry="2" />
<text  x="1095.73" y="991.5" ></text>
</g>
<g >
<title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_to_string (2 samples, 0.20%)</title><rect x="41.3" y="1109" width="2.3" height="15.0" fill="rgb(231,221,5)" rx="2" ry="2" />
<text  x="44.27" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;geojson::geometry::Value&gt; (1 samples, 0.10%)</title><rect x="18.1" y="997" width="1.2" height="15.0" fill="rgb(247,121,12)" rx="2" ry="2" />
<text  x="21.11" y="1007.5" ></text>
</g>
<g >
<title>geos::geom::LinearRing::LinearRing (2 samples, 0.20%)</title><rect x="689.7" y="997" width="2.4" height="15.0" fill="rgb(226,183,12)" rx="2" ry="2" />
<text  x="692.74" y="1007.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.10%)</title><rect x="38.9" y="645" width="1.2" height="15.0" fill="rgb(212,19,19)" rx="2" ry="2" />
<text  x="41.95" y="655.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (24 samples, 2.36%)</title><rect x="738.4" y="965" width="27.8" height="15.0" fill="rgb(247,129,21)" rx="2" ry="2" />
<text  x="741.38" y="975.5" >s..</text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::push_back (3 samples, 0.29%)</title><rect x="682.8" y="997" width="3.5" height="15.0" fill="rgb(205,224,47)" rx="2" ry="2" />
<text  x="685.80" y="1007.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (17 samples, 1.67%)</title><rect x="19.3" y="661" width="19.6" height="15.0" fill="rgb(238,206,45)" rx="2" ry="2" />
<text  x="22.26" y="671.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::is_ccw (1 samples, 0.10%)</title><rect x="59.8" y="1045" width="1.2" height="15.0" fill="rgb(225,205,28)" rx="2" ry="2" />
<text  x="62.79" y="1055.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (2 samples, 0.20%)</title><rect x="746.5" y="837" width="2.3" height="15.0" fill="rgb(231,207,27)" rx="2" ry="2" />
<text  x="749.49" y="847.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.10%)</title><rect x="684.0" y="917" width="1.1" height="15.0" fill="rgb(225,101,7)" rx="2" ry="2" />
<text  x="686.95" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::end (1 samples, 0.10%)</title><rect x="655.0" y="997" width="1.2" height="15.0" fill="rgb(209,60,42)" rx="2" ry="2" />
<text  x="658.00" y="1007.5" ></text>
</g>
<g >
<title>serde_json::number::Number::as_f64 (1 samples, 0.10%)</title><rect x="12.3" y="1045" width="1.2" height="15.0" fill="rgb(245,7,23)" rx="2" ry="2" />
<text  x="15.32" y="1055.5" ></text>
</g>
<g >
<title>geojson::geojson::GeoJson::from_json_object (3 samples, 0.29%)</title><rect x="10.0" y="1317" width="3.5" height="15.0" fill="rgb(238,96,40)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.10%)</title><rect x="11.2" y="965" width="1.1" height="15.0" fill="rgb(215,35,22)" rx="2" ry="2" />
<text  x="14.16" y="975.5" ></text>
</g>
<g >
<title>geos::geom::Coordinate::compareTo@plt (3 samples, 0.29%)</title><rect x="275.2" y="869" width="3.5" height="15.0" fill="rgb(216,36,30)" rx="2" ry="2" />
<text  x="278.18" y="879.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.20%)</title><rect x="19.3" y="197" width="2.3" height="15.0" fill="rgb(211,115,49)" rx="2" ry="2" />
<text  x="22.26" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__val_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; (2 samples, 0.20%)</title><rect x="706.0" y="949" width="2.3" height="15.0" fill="rgb(253,35,48)" rx="2" ry="2" />
<text  x="708.96" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (8 samples, 0.79%)</title><rect x="1100.8" y="981" width="9.3" height="15.0" fill="rgb(245,56,21)" rx="2" ry="2" />
<text  x="1103.83" y="991.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.69%)</title><rect x="29.7" y="213" width="8.1" height="15.0" fill="rgb(209,110,18)" rx="2" ry="2" />
<text  x="32.69" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_key (3 samples, 0.29%)</title><rect x="1165.7" y="1429" width="3.5" height="15.0" fill="rgb(253,0,39)" rx="2" ry="2" />
<text  x="1168.68" y="1439.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="11.2" y="1045" width="1.1" height="15.0" fill="rgb(232,131,50)" rx="2" ry="2" />
<text  x="14.16" y="1055.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_realloc_insert&lt;geos::geom::Coordinate const* const&amp;&gt; (15 samples, 1.47%)</title><rect x="563.5" y="917" width="17.4" height="15.0" fill="rgb(238,15,32)" rx="2" ry="2" />
<text  x="566.52" y="927.5" ></text>
</g>
<g >
<title>std::__unique&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equal_to_iter&gt; (1 samples, 0.10%)</title><rect x="866.9" y="981" width="1.2" height="15.0" fill="rgb(243,208,47)" rx="2" ry="2" />
<text  x="869.92" y="991.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18 samples, 1.77%)</title><rect x="19.3" y="853" width="20.8" height="15.0" fill="rgb(246,86,44)" rx="2" ry="2" />
<text  x="22.26" y="863.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (18 samples, 1.77%)</title><rect x="19.3" y="965" width="20.8" height="15.0" fill="rgb(238,145,46)" rx="2" ry="2" />
<text  x="22.26" y="975.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (950 samples, 93.23%)</title><rect x="18.1" y="1317" width="1100.1" height="15.0" fill="rgb(205,95,35)" rx="2" ry="2" />
<text  x="21.11" y="1327.5" >std::panic::catch_unwind</text>
</g>
<g >
<title>copy_page_to_iter (2 samples, 0.20%)</title><rect x="41.3" y="853" width="2.3" height="15.0" fill="rgb(247,81,36)" rx="2" ry="2" />
<text  x="44.27" y="863.5" ></text>
</g>
<g >
<title>geos::algorithm::ConvexHull::toCoordinateSequence (3 samples, 0.29%)</title><rect x="686.3" y="1013" width="3.4" height="15.0" fill="rgb(226,102,27)" rx="2" ry="2" />
<text  x="689.27" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_Node_allocator (1 samples, 0.10%)</title><rect x="1075.4" y="917" width="1.1" height="15.0" fill="rgb(205,192,6)" rx="2" ry="2" />
<text  x="1078.36" y="927.5" ></text>
</g>
<g >
<title>execute&lt;GEOSGeom_destroy_r::{lambda (1 samples, 0.10%)</title><rect x="1117.0" y="1093" width="1.2" height="15.0" fill="rgb(222,15,17)" rx="2" ry="2" />
<text  x="1120.05" y="1103.5" ></text>
</g>
<g >
<title>geojson::util::json_to_position (1 samples, 0.10%)</title><rect x="13.5" y="1109" width="1.1" height="15.0" fill="rgb(214,20,30)" rx="2" ry="2" />
<text  x="16.47" y="1119.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::hull_set::_$u7b$$u7b$closure$u7d$$u7d$::h42e16cf9d6a833ce (4 samples, 0.39%)</title><rect x="55.2" y="1061" width="4.6" height="15.0" fill="rgb(247,160,44)" rx="2" ry="2" />
<text  x="58.16" y="1071.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;geos::geom::Coordinate const*&gt;::_Rb_tree_iterator@plt (1 samples, 0.10%)</title><rect x="389.8" y="869" width="1.2" height="15.0" fill="rgb(230,195,16)" rx="2" ry="2" />
<text  x="392.82" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_destroy_node (1 samples, 0.10%)</title><rect x="1107.8" y="869" width="1.1" height="15.0" fill="rgb(248,31,6)" rx="2" ry="2" />
<text  x="1110.78" y="879.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;geos::geom::Coordinate const*&gt;, bool&gt;::pair&lt;std::_Rb_tree_iterator&lt;geos::geom::Coordinate const*&gt;, bool, true&gt; (4 samples, 0.39%)</title><rect x="528.8" y="901" width="4.6" height="15.0" fill="rgb(212,3,30)" rx="2" ry="2" />
<text  x="531.78" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::~_Rb_tree (36 samples, 3.53%)</title><rect x="585.5" y="981" width="41.7" height="15.0" fill="rgb(208,206,45)" rx="2" ry="2" />
<text  x="588.53" y="991.5" >std..</text>
</g>
<g >
<title>geos::algorithm::Orientation::index (2 samples, 0.20%)</title><rect x="746.5" y="853" width="2.3" height="15.0" fill="rgb(250,183,43)" rx="2" ry="2" />
<text  x="749.49" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_drop_node (2 samples, 0.20%)</title><rect x="1107.8" y="885" width="2.3" height="15.0" fill="rgb(250,204,51)" rx="2" ry="2" />
<text  x="1110.78" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (3 samples, 0.29%)</title><rect x="615.6" y="821" width="3.5" height="15.0" fill="rgb(240,168,31)" rx="2" ry="2" />
<text  x="618.63" y="831.5" ></text>
</g>
<g >
<title>geos::util::UniqueCoordinateArrayFilter::filter_ro (1 samples, 0.10%)</title><rect x="1132.1" y="1445" width="1.2" height="15.0" fill="rgb(229,150,49)" rx="2" ry="2" />
<text  x="1135.10" y="1455.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;*&amp;, std::_Rb_tree_node_base*&amp;, true&gt; (4 samples, 0.39%)</title><rect x="400.2" y="885" width="4.7" height="15.0" fill="rgb(218,143,31)" rx="2" ry="2" />
<text  x="403.25" y="895.5" ></text>
</g>
<g >
<title>std::move&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&amp;&gt; (1 samples, 0.10%)</title><rect x="706.0" y="917" width="1.1" height="15.0" fill="rgb(209,85,31)" rx="2" ry="2" />
<text  x="708.96" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::~_Rb_tree (8 samples, 0.79%)</title><rect x="1100.8" y="997" width="9.3" height="15.0" fill="rgb(230,51,25)" rx="2" ry="2" />
<text  x="1103.83" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;geos::geom::Coordinate const* const*, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt; (1 samples, 0.10%)</title><rect x="659.6" y="997" width="1.2" height="15.0" fill="rgb(234,219,23)" rx="2" ry="2" />
<text  x="662.64" y="1007.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;false&gt;::__uninit_default_n&lt;geos::geom::Coordinate*, unsigned long&gt; (1 samples, 0.10%)</title><rect x="688.6" y="933" width="1.1" height="15.0" fill="rgb(248,131,23)" rx="2" ry="2" />
<text  x="691.59" y="943.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;geos::geom::Coordinate const**&gt; (1 samples, 0.10%)</title><rect x="678.2" y="901" width="1.1" height="15.0" fill="rgb(227,84,45)" rx="2" ry="2" />
<text  x="681.16" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_fill_initialize (1 samples, 0.10%)</title><rect x="865.8" y="965" width="1.1" height="15.0" fill="rgb(235,130,47)" rx="2" ry="2" />
<text  x="868.76" y="975.5" ></text>
</g>
<g >
<title>&lt;geojson::geojson::GeoJson as core::str::traits::FromStr&gt;::from_str (3 samples, 0.29%)</title><rect x="10.0" y="1333" width="3.5" height="15.0" fill="rgb(246,39,22)" rx="2" ry="2" />
<text  x="13.00" y="1343.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;f64&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="18.1" y="885" width="1.2" height="15.0" fill="rgb(239,109,49)" rx="2" ry="2" />
<text  x="21.11" y="895.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.20%)</title><rect x="19.3" y="133" width="2.3" height="15.0" fill="rgb(216,40,14)" rx="2" ry="2" />
<text  x="22.26" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::operator* (1 samples, 0.10%)</title><rect x="712.9" y="917" width="1.2" height="15.0" fill="rgb(251,88,42)" rx="2" ry="2" />
<text  x="715.90" y="927.5" ></text>
</g>
<g >
<title>benchmark_conve (1,019 samples, 100.00%)</title><rect x="10.0" y="1461" width="1180.0" height="15.0" fill="rgb(222,33,29)" rx="2" ry="2" />
<text  x="13.00" y="1471.5" >benchmark_conve</text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_node (4 samples, 0.39%)</title><rect x="1161.1" y="1445" width="4.6" height="15.0" fill="rgb(236,215,20)" rx="2" ry="2" />
<text  x="1164.05" y="1455.5" ></text>
</g>
<g >
<title>geos::algorithm::PointLocation::locateInRing@plt (1 samples, 0.10%)</title><rect x="1010.5" y="997" width="1.2" height="15.0" fill="rgb(213,20,23)" rx="2" ry="2" />
<text  x="1013.51" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const* const*, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::base (1 samples, 0.10%)</title><rect x="659.6" y="981" width="1.2" height="15.0" fill="rgb(207,12,50)" rx="2" ry="2" />
<text  x="662.64" y="991.5" ></text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.69%)</title><rect x="29.7" y="245" width="8.1" height="15.0" fill="rgb(219,136,49)" rx="2" ry="2" />
<text  x="32.69" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::operator[] (1 samples, 0.10%)</title><rect x="785.9" y="1013" width="1.1" height="15.0" fill="rgb(253,33,6)" rx="2" ry="2" />
<text  x="788.86" y="1023.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::destroy&lt;geos::geom::Coordinate const*&gt; (2 samples, 0.20%)</title><rect x="668.9" y="997" width="2.3" height="15.0" fill="rgb(213,210,6)" rx="2" ry="2" />
<text  x="671.90" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_value (10 samples, 0.98%)</title><rect x="1048.7" y="949" width="11.6" height="15.0" fill="rgb(206,188,41)" rx="2" ry="2" />
<text  x="1051.72" y="959.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.20%)</title><rect x="27.4" y="69" width="2.3" height="15.0" fill="rgb(237,122,19)" rx="2" ry="2" />
<text  x="30.37" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_value (2 samples, 0.20%)</title><rect x="1088.1" y="949" width="2.3" height="15.0" fill="rgb(225,125,21)" rx="2" ry="2" />
<text  x="1091.10" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_destroy_node (1 samples, 0.10%)</title><rect x="1102.0" y="933" width="1.2" height="15.0" fill="rgb(230,224,53)" rx="2" ry="2" />
<text  x="1104.99" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_construct_node&lt;geos::geom::Coordinate const* const&amp;&gt; (15 samples, 1.47%)</title><rect x="432.7" y="853" width="17.3" height="15.0" fill="rgb(237,209,27)" rx="2" ry="2" />
<text  x="435.67" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::back (10 samples, 0.98%)</title><rect x="644.6" y="1013" width="11.6" height="15.0" fill="rgb(206,23,42)" rx="2" ry="2" />
<text  x="647.58" y="1023.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_drop_node (1 samples, 0.10%)</title><rect x="1137.9" y="1445" width="1.1" height="15.0" fill="rgb(216,39,24)" rx="2" ry="2" />
<text  x="1140.89" y="1455.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_end (1 samples, 0.10%)</title><rect x="279.8" y="885" width="1.2" height="15.0" fill="rgb(230,130,30)" rx="2" ry="2" />
<text  x="282.81" y="895.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Val_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (5 samples, 0.49%)</title><rect x="699.0" y="949" width="5.8" height="15.0" fill="rgb(252,151,37)" rx="2" ry="2" />
<text  x="702.01" y="959.5" ></text>
</g>
<g >
<title>geos::geom::Coordinate::Coordinate (1 samples, 0.10%)</title><rect x="688.6" y="901" width="1.1" height="15.0" fill="rgb(251,125,1)" rx="2" ry="2" />
<text  x="691.59" y="911.5" ></text>
</g>
<g >
<title>geo::utils::least_and_greatest_index::_$u7b$$u7b$closure$u7d$$u7d$::h0ae013e8d05df935 (8 samples, 0.79%)</title><rect x="62.1" y="1029" width="9.3" height="15.0" fill="rgb(230,219,49)" rx="2" ry="2" />
<text  x="65.11" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt;::allocate (24 samples, 2.36%)</title><rect x="455.8" y="821" width="27.8" height="15.0" fill="rgb(226,87,41)" rx="2" ry="2" />
<text  x="458.83" y="831.5" >_..</text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::operator[] (2 samples, 0.20%)</title><rect x="663.1" y="1013" width="2.3" height="15.0" fill="rgb(224,206,43)" rx="2" ry="2" />
<text  x="666.11" y="1023.5" ></text>
</g>
<g >
<title>geos::geom::CoordinateArraySequence::isEmpty (1 samples, 0.10%)</title><rect x="690.9" y="933" width="1.2" height="15.0" fill="rgb(226,27,54)" rx="2" ry="2" />
<text  x="693.90" y="943.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.88%)</title><rect x="61.0" y="1077" width="10.4" height="15.0" fill="rgb(220,130,29)" rx="2" ry="2" />
<text  x="63.95" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_put_node (3 samples, 0.29%)</title><rect x="600.6" y="885" width="3.5" height="15.0" fill="rgb(231,55,21)" rx="2" ry="2" />
<text  x="603.58" y="895.5" ></text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::operator (3 samples, 0.29%)</title><rect x="694.4" y="933" width="3.5" height="15.0" fill="rgb(220,70,38)" rx="2" ry="2" />
<text  x="697.38" y="943.5" ></text>
</g>
<g >
<title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18 samples, 1.77%)</title><rect x="19.3" y="1045" width="20.8" height="15.0" fill="rgb(254,229,10)" rx="2" ry="2" />
<text  x="22.26" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (3 samples, 0.29%)</title><rect x="615.6" y="853" width="3.5" height="15.0" fill="rgb(252,203,17)" rx="2" ry="2" />
<text  x="618.63" y="863.5" ></text>
</g>
<g >
<title>std::forward&lt;geos::geom::Coordinate const* const&amp;&gt; (1 samples, 0.10%)</title><rect x="677.0" y="981" width="1.2" height="15.0" fill="rgb(213,112,47)" rx="2" ry="2" />
<text  x="680.01" y="991.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.20%)</title><rect x="27.4" y="53" width="2.3" height="15.0" fill="rgb(246,141,17)" rx="2" ry="2" />
<text  x="30.37" y="63.5" ></text>
</g>
<g >
<title>__libc_start_main (950 samples, 93.23%)</title><rect x="18.1" y="1429" width="1100.1" height="15.0" fill="rgb(242,66,29)" rx="2" ry="2" />
<text  x="21.11" y="1439.5" >__libc_start_main</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;geojson::Feature&gt;&gt; (1 samples, 0.10%)</title><rect x="18.1" y="1093" width="1.2" height="15.0" fill="rgb(246,155,22)" rx="2" ry="2" />
<text  x="21.11" y="1103.5" ></text>
</g>
<g >
<title>&lt;geojson::geojson::GeoJson as core::convert::TryFrom&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;&gt;::try_from (3 samples, 0.29%)</title><rect x="10.0" y="1301" width="3.5" height="15.0" fill="rgb(221,198,11)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" ></text>
</g>
<g >
<title>std::panicking::try (950 samples, 93.23%)</title><rect x="18.1" y="1365" width="1100.1" height="15.0" fill="rgb(245,24,51)" rx="2" ry="2" />
<text  x="21.11" y="1375.5" >std::panicking::try</text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;geos::geom::Coordinate const**, geos::geom::Coordinate const**, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; (1 samples, 0.10%)</title><rect x="685.1" y="965" width="1.2" height="15.0" fill="rgb(225,164,47)" rx="2" ry="2" />
<text  x="688.11" y="975.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, geos::geom::Coordinate const**, geos::geom::Coordinate const**&gt; (1 samples, 0.10%)</title><rect x="685.1" y="869" width="1.2" height="15.0" fill="rgb(254,113,53)" rx="2" ry="2" />
<text  x="688.11" y="879.5" ></text>
</g>
<g >
<title>geos::algorithm::RayCrossingCounter::locatePointInRing (122 samples, 11.97%)</title><rect x="869.2" y="981" width="141.3" height="15.0" fill="rgb(228,184,21)" rx="2" ry="2" />
<text  x="872.23" y="991.5" >geos::algorithm::..</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1 samples, 0.10%)</title><rect x="69.1" y="981" width="1.1" height="15.0" fill="rgb(248,111,26)" rx="2" ry="2" />
<text  x="72.06" y="991.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.79%)</title><rect x="565.8" y="853" width="9.3" height="15.0" fill="rgb(241,168,52)" rx="2" ry="2" />
<text  x="568.84" y="863.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::is_ccw (3 samples, 0.29%)</title><rect x="56.3" y="1045" width="3.5" height="15.0" fill="rgb(249,183,1)" rx="2" ry="2" />
<text  x="59.32" y="1055.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.67%)</title><rect x="19.3" y="405" width="19.6" height="15.0" fill="rgb(207,17,17)" rx="2" ry="2" />
<text  x="22.26" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_put_node (3 samples, 0.29%)</title><rect x="611.0" y="853" width="3.5" height="15.0" fill="rgb(242,89,39)" rx="2" ry="2" />
<text  x="614.00" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_Node_allocator (1 samples, 0.10%)</title><rect x="599.4" y="869" width="1.2" height="15.0" fill="rgb(232,42,12)" rx="2" ry="2" />
<text  x="602.42" y="879.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::ge (1 samples, 0.10%)</title><rect x="69.1" y="965" width="1.1" height="15.0" fill="rgb(235,138,18)" rx="2" ry="2" />
<text  x="72.06" y="975.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.10%)</title><rect x="608.7" y="821" width="1.1" height="15.0" fill="rgb(240,154,26)" rx="2" ry="2" />
<text  x="611.68" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;geos::geom::Coordinate const*&gt;::_M_ptr (4 samples, 0.39%)</title><rect x="1184.2" y="1429" width="4.6" height="15.0" fill="rgb(247,35,14)" rx="2" ry="2" />
<text  x="1187.21" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (3 samples, 0.29%)</title><rect x="1106.6" y="917" width="3.5" height="15.0" fill="rgb(254,58,26)" rx="2" ry="2" />
<text  x="1109.62" y="927.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.10%)</title><rect x="558.9" y="885" width="1.1" height="15.0" fill="rgb(216,137,42)" rx="2" ry="2" />
<text  x="561.89" y="895.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_decimal (3 samples, 0.29%)</title><rect x="34.3" y="149" width="3.5" height="15.0" fill="rgb(237,96,4)" rx="2" ry="2" />
<text  x="37.32" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt;::deallocate (3 samples, 0.29%)</title><rect x="611.0" y="821" width="3.5" height="15.0" fill="rgb(205,161,43)" rx="2" ry="2" />
<text  x="614.00" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_node (8 samples, 0.79%)</title><rect x="1078.8" y="933" width="9.3" height="15.0" fill="rgb(210,213,53)" rx="2" ry="2" />
<text  x="1081.83" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_realloc_insert&lt;geos::geom::Coordinate const* const&amp;&gt; (1 samples, 0.10%)</title><rect x="678.2" y="997" width="1.1" height="15.0" fill="rgb(232,133,49)" rx="2" ry="2" />
<text  x="681.16" y="1007.5" ></text>
</g>
<g >
<title>&lt;f64 as core::ops::arith::Mul&gt;::mul (1 samples, 0.10%)</title><rect x="44.7" y="965" width="1.2" height="15.0" fill="rgb(236,41,4)" rx="2" ry="2" />
<text  x="47.74" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;geos::geom::CoordinateSequence, std::default_delete&lt;geos::geom::CoordinateSequence&gt; &gt;::release (1 samples, 0.10%)</title><rect x="689.7" y="949" width="1.2" height="15.0" fill="rgb(235,193,19)" rx="2" ry="2" />
<text  x="692.74" y="959.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.20%)</title><rect x="27.4" y="85" width="2.3" height="15.0" fill="rgb(253,7,43)" rx="2" ry="2" />
<text  x="30.37" y="95.5" ></text>
</g>
<g >
<title>robust::orient2d (4 samples, 0.39%)</title><rect x="74.8" y="1029" width="4.7" height="15.0" fill="rgb(247,77,21)" rx="2" ry="2" />
<text  x="77.85" y="1039.5" ></text>
</g>
<g >
<title>std::set&lt;geos::geom::Coordinate const*, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::insert&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt; &gt; (4 samples, 0.39%)</title><rect x="1096.2" y="1013" width="4.6" height="15.0" fill="rgb(206,31,4)" rx="2" ry="2" />
<text  x="1099.20" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::size (1 samples, 0.10%)</title><rect x="1128.6" y="1429" width="1.2" height="15.0" fill="rgb(213,107,52)" rx="2" ry="2" />
<text  x="1131.63" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (3 samples, 0.29%)</title><rect x="1106.6" y="901" width="3.5" height="15.0" fill="rgb(211,206,29)" rx="2" ry="2" />
<text  x="1109.62" y="911.5" ></text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::operator (3 samples, 0.29%)</title><rect x="745.3" y="885" width="3.5" height="15.0" fill="rgb(214,53,53)" rx="2" ry="2" />
<text  x="748.33" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_put_node (1 samples, 0.10%)</title><rect x="1137.9" y="1429" width="1.1" height="15.0" fill="rgb(239,215,10)" rx="2" ry="2" />
<text  x="1140.89" y="1439.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::allocate (8 samples, 0.79%)</title><rect x="1078.8" y="917" width="9.3" height="15.0" fill="rgb(230,40,19)" rx="2" ry="2" />
<text  x="1081.83" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_Node_allocator (3 samples, 0.29%)</title><rect x="450.0" y="837" width="3.5" height="15.0" fill="rgb(246,226,33)" rx="2" ry="2" />
<text  x="453.04" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;geos::geom::Coordinate const*&gt;::_Rb_tree_iterator (2 samples, 0.20%)</title><rect x="524.2" y="885" width="2.3" height="15.0" fill="rgb(219,186,6)" rx="2" ry="2" />
<text  x="527.15" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt;::deallocate (1 samples, 0.10%)</title><rect x="590.2" y="885" width="1.1" height="15.0" fill="rgb(214,38,51)" rx="2" ry="2" />
<text  x="593.16" y="895.5" ></text>
</g>
<g >
<title>copyout (2 samples, 0.20%)</title><rect x="41.3" y="837" width="2.3" height="15.0" fill="rgb(242,195,43)" rx="2" ry="2" />
<text  x="44.27" y="847.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::hull_set::_$u7b$$u7b$closure$u7d$$u7d$::h7ef82cb128e83fda (1 samples, 0.10%)</title><rect x="44.7" y="981" width="1.2" height="15.0" fill="rgb(215,36,12)" rx="2" ry="2" />
<text  x="47.74" y="991.5" ></text>
</g>
<g >
<title>geos::algorithm::ConvexHull::extractCoordinates (473 samples, 46.42%)</title><rect x="79.5" y="1029" width="547.7" height="15.0" fill="rgb(216,53,15)" rx="2" ry="2" />
<text  x="82.48" y="1039.5" >geos::algorithm::ConvexHull::extractCoordinates</text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (10 samples, 0.98%)</title><rect x="633.0" y="981" width="11.6" height="15.0" fill="rgb(251,215,29)" rx="2" ry="2" />
<text  x="636.00" y="991.5" ></text>
</g>
<g >
<title>std::forward&lt;geos::geom::Coordinate const* const&amp;&gt; (2 samples, 0.20%)</title><rect x="560.0" y="885" width="2.4" height="15.0" fill="rgb(246,66,51)" rx="2" ry="2" />
<text  x="563.05" y="895.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, geos::geom::CoordinateSequence*, std::default_delete&lt;geos::geom::CoordinateSequence&gt; &gt; (1 samples, 0.10%)</title><rect x="689.7" y="917" width="1.2" height="15.0" fill="rgb(243,116,50)" rx="2" ry="2" />
<text  x="692.74" y="927.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.39%)</title><rect x="19.3" y="373" width="4.6" height="15.0" fill="rgb(222,61,35)" rx="2" ry="2" />
<text  x="22.26" y="383.5" ></text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::operator (1 samples, 0.10%)</title><rect x="766.2" y="917" width="1.1" height="15.0" fill="rgb(237,72,37)" rx="2" ry="2" />
<text  x="769.17" y="927.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.10%)</title><rect x="36.6" y="117" width="1.2" height="15.0" fill="rgb(221,29,42)" rx="2" ry="2" />
<text  x="39.63" y="127.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;geojson::feature_collection::FeatureCollection&gt; (1 samples, 0.10%)</title><rect x="18.1" y="1109" width="1.2" height="15.0" fill="rgb(205,119,8)" rx="2" ry="2" />
<text  x="21.11" y="1119.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndexFilter (5 samples, 0.49%)</title><rect x="756.9" y="821" width="5.8" height="15.0" fill="rgb(205,146,22)" rx="2" ry="2" />
<text  x="759.91" y="831.5" ></text>
</g>
<g >
<title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (13 samples, 1.28%)</title><rect x="23.9" y="293" width="15.0" height="15.0" fill="rgb(205,17,9)" rx="2" ry="2" />
<text  x="26.90" y="303.5" ></text>
</g>
<g >
<title>&lt;geo::algorithm::kernels::robust::RobustKernel as geo::algorithm::kernels::Kernel&lt;T&gt;&gt;::orient2d (4 samples, 0.39%)</title><rect x="74.8" y="1045" width="4.7" height="15.0" fill="rgb(238,203,45)" rx="2" ry="2" />
<text  x="77.85" y="1055.5" ></text>
</g>
<g >
<title>benchmark_convex_hull::main (950 samples, 93.23%)</title><rect x="18.1" y="1205" width="1100.1" height="15.0" fill="rgb(232,151,33)" rx="2" ry="2" />
<text  x="21.11" y="1215.5" >benchmark_convex_hull::main</text>
</g>
<g >
<title>std::forward&lt;std::_Rb_tree_iterator&lt;geos::geom::Coordinate const*&gt; &gt;@plt (1 samples, 0.10%)</title><rect x="1095.0" y="965" width="1.2" height="15.0" fill="rgb(205,226,52)" rx="2" ry="2" />
<text  x="1098.04" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;::_M_valptr (2 samples, 0.20%)</title><rect x="1181.9" y="1429" width="2.3" height="15.0" fill="rgb(206,13,34)" rx="2" ry="2" />
<text  x="1184.89" y="1439.5" ></text>
</g>
<g >
<title>geos::algorithm::ConvexHull::isBetween (1 samples, 0.10%)</title><rect x="681.6" y="997" width="1.2" height="15.0" fill="rgb(214,54,40)" rx="2" ry="2" />
<text  x="684.64" y="1007.5" ></text>
</g>
<g >
<title>_int_malloc (3 samples, 0.29%)</title><rect x="1083.5" y="853" width="3.4" height="15.0" fill="rgb(221,58,45)" rx="2" ry="2" />
<text  x="1086.46" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_Alloc_node::operator (53 samples, 5.20%)</title><rect x="424.6" y="885" width="61.3" height="15.0" fill="rgb(213,183,20)" rx="2" ry="2" />
<text  x="427.56" y="895.5" >std::_..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt;::operator (5 samples, 0.49%)</title><rect x="738.4" y="885" width="5.8" height="15.0" fill="rgb(206,140,2)" rx="2" ry="2" />
<text  x="741.38" y="895.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndexFilter (3 samples, 0.29%)</title><rect x="740.7" y="789" width="3.5" height="15.0" fill="rgb(254,40,54)" rx="2" ry="2" />
<text  x="743.70" y="799.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::max_by (1 samples, 0.10%)</title><rect x="45.9" y="1061" width="1.2" height="15.0" fill="rgb(245,23,39)" rx="2" ry="2" />
<text  x="48.90" y="1071.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_right (1 samples, 0.10%)</title><rect x="1063.8" y="965" width="1.1" height="15.0" fill="rgb(235,204,35)" rx="2" ry="2" />
<text  x="1066.78" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;geos::geom::Coordinate const*&gt;::_M_ptr (1 samples, 0.10%)</title><rect x="1112.4" y="869" width="1.2" height="15.0" fill="rgb(252,0,36)" rx="2" ry="2" />
<text  x="1115.41" y="879.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;geos::geom::Coordinate const**&gt;, geos::geom::Coordinate const**&gt; (4 samples, 0.39%)</title><rect x="575.1" y="869" width="4.6" height="15.0" fill="rgb(222,119,10)" rx="2" ry="2" />
<text  x="578.10" y="879.5" ></text>
</g>
<g >
<title>geos::util::UniqueCoordinateArrayFilter::filter_ro (422 samples, 41.41%)</title><rect x="93.4" y="949" width="488.7" height="15.0" fill="rgb(235,70,8)" rx="2" ry="2" />
<text  x="96.38" y="959.5" >geos::util::UniqueCoordinateArrayFilter::filter_ro</text>
</g>
<g >
<title>geos::algorithm::ConvexHull::grahamScan (46 samples, 4.51%)</title><rect x="627.2" y="1029" width="53.3" height="15.0" fill="rgb(250,76,29)" rx="2" ry="2" />
<text  x="630.21" y="1039.5" >geos:..</text>
</g>
<g >
<title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (1 samples, 0.10%)</title><rect x="10.0" y="1029" width="1.2" height="15.0" fill="rgb(206,156,15)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="13.5" y="1093" width="1.1" height="15.0" fill="rgb(254,113,16)" rx="2" ry="2" />
<text  x="16.47" y="1103.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="45.9" y="997" width="1.2" height="15.0" fill="rgb(220,4,30)" rx="2" ry="2" />
<text  x="48.90" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_destroy_node (1 samples, 0.10%)</title><rect x="605.2" y="869" width="1.2" height="15.0" fill="rgb(219,117,46)" rx="2" ry="2" />
<text  x="608.21" y="879.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (18 samples, 1.77%)</title><rect x="19.3" y="789" width="20.8" height="15.0" fill="rgb(218,157,36)" rx="2" ry="2" />
<text  x="22.26" y="799.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.77%)</title><rect x="19.3" y="821" width="20.8" height="15.0" fill="rgb(238,56,53)" rx="2" ry="2" />
<text  x="22.26" y="831.5" ></text>
</g>
<g >
<title>geos::geom::LineString::isClosed (1 samples, 0.10%)</title><rect x="690.9" y="965" width="1.2" height="15.0" fill="rgb(224,99,16)" rx="2" ry="2" />
<text  x="693.90" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;geos::geom::LinearRing, std::default_delete&lt;geos::geom::LinearRing&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;geos::geom::LinearRing, std::default_delete&lt;geos::geom::LinearRing&gt; &gt; &gt; &gt;::~vector (1 samples, 0.10%)</title><rect x="1117.0" y="1029" width="1.2" height="15.0" fill="rgb(239,228,21)" rx="2" ry="2" />
<text  x="1120.05" y="1039.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_const_iterator&lt;geos::geom::Coordinate const*&gt;, bool&gt;::pair&lt;std::_Rb_tree_iterator&lt;geos::geom::Coordinate const*&gt;&amp;, bool&amp;, true&gt; (13 samples, 1.28%)</title><rect x="533.4" y="917" width="15.1" height="15.0" fill="rgb(228,144,4)" rx="2" ry="2" />
<text  x="536.42" y="927.5" ></text>
</g>
<g >
<title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;geos::geom::Coordinate const**, unsigned long, geos::geom::Coordinate const*&gt; (1 samples, 0.10%)</title><rect x="865.8" y="917" width="1.1" height="15.0" fill="rgb(210,89,21)" rx="2" ry="2" />
<text  x="868.76" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::empty@plt (1 samples, 0.10%)</title><rect x="662.0" y="1013" width="1.1" height="15.0" fill="rgb(228,82,30)" rx="2" ry="2" />
<text  x="664.95" y="1023.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (17 samples, 1.67%)</title><rect x="19.3" y="677" width="19.6" height="15.0" fill="rgb(230,178,28)" rx="2" ry="2" />
<text  x="22.26" y="687.5" ></text>
</g>
<g >
<title>geojson::util::json_to_3d_positions (1 samples, 0.10%)</title><rect x="12.3" y="1141" width="1.2" height="15.0" fill="rgb(218,43,24)" rx="2" ry="2" />
<text  x="15.32" y="1151.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::next_char (1 samples, 0.10%)</title><rect x="32.0" y="165" width="1.2" height="15.0" fill="rgb(209,136,33)" rx="2" ry="2" />
<text  x="35.00" y="175.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::parse (1 samples, 0.10%)</title><rect x="13.5" y="1365" width="1.1" height="15.0" fill="rgb(222,161,46)" rx="2" ry="2" />
<text  x="16.47" y="1375.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.10%)</title><rect x="43.6" y="933" width="1.1" height="15.0" fill="rgb(232,31,12)" rx="2" ry="2" />
<text  x="46.58" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_right@plt (1 samples, 0.10%)</title><rect x="622.6" y="885" width="1.1" height="15.0" fill="rgb(227,9,40)" rx="2" ry="2" />
<text  x="625.58" y="895.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::construct&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const* const&amp;&gt; (7 samples, 0.69%)</title><rect x="555.4" y="917" width="8.1" height="15.0" fill="rgb(222,4,26)" rx="2" ry="2" />
<text  x="558.42" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_insert_&lt;geos::geom::Coordinate const* const&amp;, std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_Alloc_node&gt; (105 samples, 10.30%)</title><rect x="404.9" y="901" width="121.6" height="15.0" fill="rgb(217,55,3)" rx="2" ry="2" />
<text  x="407.88" y="911.5" >std::_Rb_tree&lt;g..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Val_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt;::operator (4 samples, 0.39%)</title><rect x="700.2" y="933" width="4.6" height="15.0" fill="rgb(225,62,30)" rx="2" ry="2" />
<text  x="703.17" y="943.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (1 samples, 0.10%)</title><rect x="681.6" y="965" width="1.2" height="15.0" fill="rgb(247,194,15)" rx="2" ry="2" />
<text  x="684.64" y="975.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (3 samples, 0.29%)</title><rect x="740.7" y="805" width="3.5" height="15.0" fill="rgb(245,71,25)" rx="2" ry="2" />
<text  x="743.70" y="815.5" ></text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::polarCompare (21 samples, 2.06%)</title><rect x="714.1" y="901" width="24.3" height="15.0" fill="rgb(250,130,4)" rx="2" ry="2" />
<text  x="717.06" y="911.5" >g..</text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_left (2 samples, 0.20%)</title><rect x="620.3" y="885" width="2.3" height="15.0" fill="rgb(245,18,26)" rx="2" ry="2" />
<text  x="623.26" y="895.5" ></text>
</g>
<g >
<title>geojson::geometry::Geometry::from_json_object (1 samples, 0.10%)</title><rect x="13.5" y="1221" width="1.1" height="15.0" fill="rgb(209,63,1)" rx="2" ry="2" />
<text  x="16.47" y="1231.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt;@plt (1 samples, 0.10%)</title><rect x="579.7" y="885" width="1.2" height="15.0" fill="rgb(225,118,44)" rx="2" ry="2" />
<text  x="582.74" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_key (15 samples, 1.47%)</title><rect x="1044.1" y="965" width="17.4" height="15.0" fill="rgb(236,22,25)" rx="2" ry="2" />
<text  x="1047.09" y="975.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (19 samples, 1.86%)</title><rect x="461.6" y="789" width="22.0" height="15.0" fill="rgb(213,112,16)" rx="2" ry="2" />
<text  x="464.62" y="799.5" >_..</text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;geos::geom::Coordinate const*&gt;::_M_addr (8 samples, 0.79%)</title><rect x="363.2" y="821" width="9.3" height="15.0" fill="rgb(209,68,39)" rx="2" ry="2" />
<text  x="366.19" y="831.5" ></text>
</g>
<g >
<title>benchmark_convex_hull::geo_convex_hull (31 samples, 3.04%)</title><rect x="43.6" y="1141" width="35.9" height="15.0" fill="rgb(215,77,27)" rx="2" ry="2" />
<text  x="46.58" y="1151.5" >ben..</text>
</g>
<g >
<title>std::_Rb_tree_increment (2 samples, 0.20%)</title><rect x="1113.6" y="885" width="2.3" height="15.0" fill="rgb(247,63,37)" rx="2" ry="2" />
<text  x="1116.57" y="895.5" ></text>
</g>
<g >
<title>geos::algorithm::RayCrossingCounter::countSegment (1 samples, 0.10%)</title><rect x="1127.5" y="1429" width="1.1" height="15.0" fill="rgb(225,218,38)" rx="2" ry="2" />
<text  x="1130.47" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_drop_node (3 samples, 0.29%)</title><rect x="1139.0" y="1429" width="3.5" height="15.0" fill="rgb(243,98,33)" rx="2" ry="2" />
<text  x="1142.05" y="1439.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;geos::geom::Coordinate const*&gt;::_M_addr@plt (1 samples, 0.10%)</title><rect x="1112.4" y="853" width="1.2" height="15.0" fill="rgb(227,196,1)" rx="2" ry="2" />
<text  x="1115.41" y="863.5" ></text>
</g>
<g >
<title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.10%)</title><rect x="10.0" y="965" width="1.2" height="15.0" fill="rgb(244,115,1)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt;::operator (1 samples, 0.10%)</title><rect x="766.2" y="933" width="1.1" height="15.0" fill="rgb(235,11,24)" rx="2" ry="2" />
<text  x="769.17" y="943.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.67%)</title><rect x="19.3" y="501" width="19.6" height="15.0" fill="rgb(222,43,52)" rx="2" ry="2" />
<text  x="22.26" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_key (2 samples, 0.20%)</title><rect x="1088.1" y="965" width="2.3" height="15.0" fill="rgb(237,27,31)" rx="2" ry="2" />
<text  x="1091.10" y="975.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;geos::geom::Coordinate const**&gt;, geos::geom::Coordinate const**&gt; (3 samples, 0.29%)</title><rect x="576.3" y="853" width="3.4" height="15.0" fill="rgb(217,223,42)" rx="2" ry="2" />
<text  x="579.26" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_node (29 samples, 2.85%)</title><rect x="450.0" y="853" width="33.6" height="15.0" fill="rgb(219,139,17)" rx="2" ry="2" />
<text  x="453.04" y="863.5" >st..</text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_Alloc_node::operator (1 samples, 0.10%)</title><rect x="1099.7" y="949" width="1.1" height="15.0" fill="rgb(233,206,44)" rx="2" ry="2" />
<text  x="1102.68" y="959.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (8 samples, 0.79%)</title><rect x="565.8" y="837" width="9.3" height="15.0" fill="rgb(237,176,30)" rx="2" ry="2" />
<text  x="568.84" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (3 samples, 0.29%)</title><rect x="615.6" y="837" width="3.5" height="15.0" fill="rgb(251,206,53)" rx="2" ry="2" />
<text  x="618.63" y="847.5" ></text>
</g>
<g >
<title>geos::geom::GeometryFactory::createLinearRing (2 samples, 0.20%)</title><rect x="689.7" y="1013" width="2.4" height="15.0" fill="rgb(229,38,4)" rx="2" ry="2" />
<text  x="692.74" y="1023.5" ></text>
</g>
<g >
<title>std::_Identity&lt;geos::geom::Coordinate const*&gt;::operator (3 samples, 0.29%)</title><rect x="1045.3" y="949" width="3.4" height="15.0" fill="rgb(208,212,36)" rx="2" ry="2" />
<text  x="1048.25" y="959.5" ></text>
</g>
<g >
<title>geos::algorithm::PointLocation::isInRing (124 samples, 12.17%)</title><rect x="868.1" y="1013" width="143.6" height="15.0" fill="rgb(217,90,50)" rx="2" ry="2" />
<text  x="871.08" y="1023.5" >geos::algorithm::P..</text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (41 samples, 4.02%)</title><rect x="738.4" y="981" width="47.5" height="15.0" fill="rgb(210,12,50)" rx="2" ry="2" />
<text  x="741.38" y="991.5" >std:..</text>
</g>
<g >
<title>std::unique&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt; &gt; (1 samples, 0.10%)</title><rect x="866.9" y="997" width="1.2" height="15.0" fill="rgb(246,222,54)" rx="2" ry="2" />
<text  x="869.92" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_value@plt (1 samples, 0.10%)</title><rect x="1060.3" y="949" width="1.2" height="15.0" fill="rgb(236,12,12)" rx="2" ry="2" />
<text  x="1063.30" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::end (1 samples, 0.10%)</title><rect x="660.8" y="997" width="1.2" height="15.0" fill="rgb(214,193,30)" rx="2" ry="2" />
<text  x="663.79" y="1007.5" ></text>
</g>
<g >
<title>geo::utils::partition_slice (7 samples, 0.69%)</title><rect x="47.1" y="1061" width="8.1" height="15.0" fill="rgb(221,124,8)" rx="2" ry="2" />
<text  x="50.06" y="1071.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;geos::geom::Coordinate const*&gt; (1 samples, 0.10%)</title><rect x="685.1" y="853" width="1.2" height="15.0" fill="rgb(229,128,44)" rx="2" ry="2" />
<text  x="688.11" y="863.5" ></text>
</g>
<g >
<title>geos::geom::CoordinateArraySequence::apply_ro (2 samples, 0.20%)</title><rect x="1129.8" y="1445" width="2.3" height="15.0" fill="rgb(218,29,2)" rx="2" ry="2" />
<text  x="1132.78" y="1455.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Rb_tree_iterator&lt;geos::geom::Coordinate const*&gt; &gt; (1 samples, 0.10%)</title><rect x="531.1" y="885" width="1.2" height="15.0" fill="rgb(210,128,15)" rx="2" ry="2" />
<text  x="534.10" y="895.5" ></text>
</g>
<g >
<title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::he7cf2b649fe3178c (950 samples, 93.23%)</title><rect x="18.1" y="1253" width="1100.1" height="15.0" fill="rgb(233,131,41)" rx="2" ry="2" />
<text  x="21.11" y="1263.5" >std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::he7cf2b649fe3178c</text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt; &gt; (2 samples, 0.20%)</title><rect x="783.5" y="933" width="2.4" height="15.0" fill="rgb(246,143,9)" rx="2" ry="2" />
<text  x="786.54" y="943.5" ></text>
</g>
<g >
<title>std::move&lt;geos::geom::Coordinate const*&amp;&gt;@plt (1 samples, 0.10%)</title><rect x="784.7" y="901" width="1.2" height="15.0" fill="rgb(246,169,39)" rx="2" ry="2" />
<text  x="787.70" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_put_node (3 samples, 0.29%)</title><rect x="606.4" y="869" width="3.4" height="15.0" fill="rgb(248,221,54)" rx="2" ry="2" />
<text  x="609.37" y="879.5" ></text>
</g>
<g >
<title>geojson::feature::&lt;impl core::convert::TryFrom&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; for geojson::Feature&gt;::try_from (3 samples, 0.29%)</title><rect x="10.0" y="1237" width="3.5" height="15.0" fill="rgb(219,219,2)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::__normal_iterator (1 samples, 0.10%)</title><rect x="655.0" y="981" width="1.2" height="15.0" fill="rgb(251,181,19)" rx="2" ry="2" />
<text  x="658.00" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::size (1 samples, 0.10%)</title><rect x="679.3" y="1013" width="1.2" height="15.0" fill="rgb(208,187,16)" rx="2" ry="2" />
<text  x="682.32" y="1023.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.77%)</title><rect x="19.3" y="1029" width="20.8" height="15.0" fill="rgb(222,165,48)" rx="2" ry="2" />
<text  x="22.26" y="1039.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_drop_node (5 samples, 0.49%)</title><rect x="592.5" y="917" width="5.8" height="15.0" fill="rgb(235,87,40)" rx="2" ry="2" />
<text  x="595.47" y="927.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::quick_hull::_$u7b$$u7b$closure$u7d$$u7d$::h716adabf2c4e273d (5 samples, 0.49%)</title><rect x="73.7" y="1077" width="5.8" height="15.0" fill="rgb(213,144,38)" rx="2" ry="2" />
<text  x="76.69" y="1087.5" ></text>
</g>
<g >
<title>&lt;geojson::geojson::GeoJson as core::str::traits::FromStr&gt;::from_str (1 samples, 0.10%)</title><rect x="13.5" y="1349" width="1.1" height="15.0" fill="rgb(232,38,53)" rx="2" ry="2" />
<text  x="16.47" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::base (1 samples, 0.10%)</title><rect x="564.7" y="885" width="1.1" height="15.0" fill="rgb(215,189,49)" rx="2" ry="2" />
<text  x="567.68" y="895.5" ></text>
</g>
<g >
<title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17 samples, 1.67%)</title><rect x="19.3" y="421" width="19.6" height="15.0" fill="rgb(229,220,22)" rx="2" ry="2" />
<text  x="22.26" y="431.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.10%)</title><rect x="743.0" y="725" width="1.2" height="15.0" fill="rgb(250,72,42)" rx="2" ry="2" />
<text  x="746.01" y="735.5" ></text>
</g>
<g >
<title>std::__final_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (38 samples, 3.73%)</title><rect x="694.4" y="981" width="44.0" height="15.0" fill="rgb(252,140,5)" rx="2" ry="2" />
<text  x="697.38" y="991.5" >std:..</text>
</g>
<g >
<title>geojson::util::get_geometry (3 samples, 0.29%)</title><rect x="10.0" y="1221" width="3.5" height="15.0" fill="rgb(232,188,15)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;f64&gt;&gt; (1 samples, 0.10%)</title><rect x="18.1" y="837" width="1.2" height="15.0" fill="rgb(209,172,41)" rx="2" ry="2" />
<text  x="21.11" y="847.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::allocate (8 samples, 0.79%)</title><rect x="565.8" y="885" width="9.3" height="15.0" fill="rgb(237,89,12)" rx="2" ry="2" />
<text  x="568.84" y="895.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.20%)</title><rect x="19.3" y="149" width="2.3" height="15.0" fill="rgb(211,217,48)" rx="2" ry="2" />
<text  x="22.26" y="159.5" ></text>
</g>
<g >
<title>std::set&lt;geos::geom::Coordinate const*, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::insert (73 samples, 7.16%)</title><rect x="1011.7" y="1013" width="84.5" height="15.0" fill="rgb(227,38,26)" rx="2" ry="2" />
<text  x="1014.67" y="1023.5" >std::set&lt;..</text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_drop_node (4 samples, 0.39%)</title><rect x="609.8" y="869" width="4.7" height="15.0" fill="rgb(232,0,50)" rx="2" ry="2" />
<text  x="612.84" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_left (1 samples, 0.10%)</title><rect x="1061.5" y="965" width="1.1" height="15.0" fill="rgb(209,184,35)" rx="2" ry="2" />
<text  x="1064.46" y="975.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::deallocate (2 samples, 0.20%)</title><rect x="615.6" y="773" width="2.3" height="15.0" fill="rgb(233,210,45)" rx="2" ry="2" />
<text  x="618.63" y="783.5" ></text>
</g>
<g >
<title>std::forward&lt;geos::geom::Coordinate const* const&amp;&gt; (1 samples, 0.10%)</title><rect x="1077.7" y="901" width="1.1" height="15.0" fill="rgb(211,45,54)" rx="2" ry="2" />
<text  x="1080.67" y="911.5" ></text>
</g>
<g >
<title>&lt;geojson::feature_collection::FeatureCollection as core::convert::TryFrom&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;&gt;::try_from (1 samples, 0.10%)</title><rect x="13.5" y="1301" width="1.1" height="15.0" fill="rgb(249,133,36)" rx="2" ry="2" />
<text  x="16.47" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__val_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; (1 samples, 0.10%)</title><rect x="15.8" y="1445" width="1.1" height="15.0" fill="rgb(224,31,35)" rx="2" ry="2" />
<text  x="18.79" y="1455.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_insert_hint_unique_pos (1 samples, 0.10%)</title><rect x="1098.5" y="965" width="1.2" height="15.0" fill="rgb(235,1,46)" rx="2" ry="2" />
<text  x="1101.52" y="975.5" ></text>
</g>
<g >
<title>std::copy&lt;std::move_iterator&lt;geos::geom::Coordinate const**&gt;, geos::geom::Coordinate const**&gt; (1 samples, 0.10%)</title><rect x="685.1" y="901" width="1.2" height="15.0" fill="rgb(220,197,6)" rx="2" ry="2" />
<text  x="688.11" y="911.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.20%)</title><rect x="27.4" y="37" width="2.3" height="15.0" fill="rgb(248,5,21)" rx="2" ry="2" />
<text  x="30.37" y="47.5" ></text>
</g>
<g >
<title>std::rt::lang_start_internal (950 samples, 93.23%)</title><rect x="18.1" y="1397" width="1100.1" height="15.0" fill="rgb(226,203,4)" rx="2" ry="2" />
<text  x="21.11" y="1407.5" >std::rt::lang_start_internal</text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (950 samples, 93.23%)</title><rect x="18.1" y="1237" width="1100.1" height="15.0" fill="rgb(218,133,49)" rx="2" ry="2" />
<text  x="21.11" y="1247.5" >std::sys_common::backtrace::__rust_begin_short_backtrace</text>
</g>
<g >
<title>&lt;geos::geometry::Geometry as geos::geometry::Geom&gt;::convex_hull (896 samples, 87.93%)</title><rect x="79.5" y="1125" width="1037.5" height="15.0" fill="rgb(208,15,22)" rx="2" ry="2" />
<text  x="82.48" y="1135.5" >&lt;geos::geometry::Geometry as geos::geometry::Geom&gt;::convex_hull</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Val_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt;::operator (24 samples, 2.36%)</title><rect x="710.6" y="933" width="27.8" height="15.0" fill="rgb(209,54,10)" rx="2" ry="2" />
<text  x="713.59" y="943.5" >_..</text>
</g>
<g >
<title>geojson::util::json_to_3d_positions (1 samples, 0.10%)</title><rect x="13.5" y="1157" width="1.1" height="15.0" fill="rgb(251,194,30)" rx="2" ry="2" />
<text  x="16.47" y="1167.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::deallocate (3 samples, 0.29%)</title><rect x="611.0" y="837" width="3.5" height="15.0" fill="rgb(233,167,15)" rx="2" ry="2" />
<text  x="614.00" y="847.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::f64_from_parts (1 samples, 0.10%)</title><rect x="35.5" y="133" width="1.1" height="15.0" fill="rgb(247,199,49)" rx="2" ry="2" />
<text  x="38.48" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="19.3" y="341" width="2.3" height="15.0" fill="rgb(241,76,17)" rx="2" ry="2" />
<text  x="22.26" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="18.1" y="917" width="1.2" height="15.0" fill="rgb(233,93,21)" rx="2" ry="2" />
<text  x="21.11" y="927.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientation@plt (1 samples, 0.10%)</title><rect x="761.5" y="805" width="1.2" height="15.0" fill="rgb(221,46,6)" rx="2" ry="2" />
<text  x="764.54" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::push_back (1 samples, 0.10%)</title><rect x="1119.4" y="1429" width="1.1" height="15.0" fill="rgb(251,85,49)" rx="2" ry="2" />
<text  x="1122.36" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_construct_node&lt;geos::geom::Coordinate const*&amp;&gt; (1 samples, 0.10%)</title><rect x="1099.7" y="917" width="1.1" height="15.0" fill="rgb(232,2,20)" rx="2" ry="2" />
<text  x="1102.68" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::operator* (1 samples, 0.10%)</title><rect x="709.4" y="933" width="1.2" height="15.0" fill="rgb(244,81,5)" rx="2" ry="2" />
<text  x="712.43" y="943.5" ></text>
</g>
<g >
<title>benchmark_convex_hull::geos_convex_hull (897 samples, 88.03%)</title><rect x="79.5" y="1141" width="1038.7" height="15.0" fill="rgb(207,140,49)" rx="2" ry="2" />
<text  x="82.48" y="1151.5" >benchmark_convex_hull::geos_convex_hull</text>
</g>
<g >
<title>geojson::util::get_value (3 samples, 0.29%)</title><rect x="10.0" y="1173" width="3.5" height="15.0" fill="rgb(229,134,40)" rx="2" ry="2" />
<text  x="13.00" y="1183.5" ></text>
</g>
<g >
<title>geojson::feature::&lt;impl geojson::Feature&gt;::from_json_object (1 samples, 0.10%)</title><rect x="13.5" y="1269" width="1.1" height="15.0" fill="rgb(237,56,12)" rx="2" ry="2" />
<text  x="16.47" y="1279.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::deallocate (1 samples, 0.10%)</title><rect x="1108.9" y="853" width="1.2" height="15.0" fill="rgb(253,50,50)" rx="2" ry="2" />
<text  x="1111.94" y="863.5" ></text>
</g>
<g >
<title>std::set&lt;geos::geom::Coordinate const*, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::~set (8 samples, 0.79%)</title><rect x="1100.8" y="1013" width="9.3" height="15.0" fill="rgb(242,17,1)" rx="2" ry="2" />
<text  x="1103.83" y="1023.5" ></text>
</g>
<g >
<title>geos::algorithm::Orientation::index (2 samples, 0.20%)</title><rect x="702.5" y="885" width="2.3" height="15.0" fill="rgb(251,125,46)" rx="2" ry="2" />
<text  x="705.48" y="895.5" ></text>
</g>
<g >
<title>&lt;harness::notsofine::simple::FnWithArgProgram&lt;T&gt; as harness::notsofine::PreparedProgram&gt;::benchmark_this (928 samples, 91.07%)</title><rect x="43.6" y="1157" width="1074.6" height="15.0" fill="rgb(209,185,46)" rx="2" ry="2" />
<text  x="46.58" y="1167.5" >&lt;harness::notsofine::simple::FnWithArgProgram&lt;T&gt; as harness::notsofine::PreparedProgram&gt;::benchmark_this</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;::_M_valptr (1 samples, 0.10%)</title><rect x="589.0" y="901" width="1.2" height="15.0" fill="rgb(241,117,31)" rx="2" ry="2" />
<text  x="592.00" y="911.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::destroy&lt;geos::geom::Coordinate const*&gt; (1 samples, 0.10%)</title><rect x="1188.8" y="1429" width="1.2" height="15.0" fill="rgb(216,144,4)" rx="2" ry="2" />
<text  x="1191.84" y="1439.5" ></text>
</g>
<g >
<title>geos::geom::Polygon::apply_ro (435 samples, 42.69%)</title><rect x="80.6" y="997" width="503.8" height="15.0" fill="rgb(211,166,36)" rx="2" ry="2" />
<text  x="83.64" y="1007.5" >geos::geom::Polygon::apply_ro</text>
</g>
<g >
<title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1 samples, 0.10%)</title><rect x="37.8" y="213" width="1.1" height="15.0" fill="rgb(247,47,20)" rx="2" ry="2" />
<text  x="40.79" y="223.5" ></text>
</g>
<g >
<title>harness::notsofine::benchmark_run (928 samples, 91.07%)</title><rect x="43.6" y="1189" width="1074.6" height="15.0" fill="rgb(216,168,49)" rx="2" ry="2" />
<text  x="46.58" y="1199.5" >harness::notsofine::benchmark_run</text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::size (4 samples, 0.39%)</title><rect x="1005.9" y="965" width="4.6" height="15.0" fill="rgb(236,150,30)" rx="2" ry="2" />
<text  x="1008.88" y="975.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_allocate (8 samples, 0.79%)</title><rect x="565.8" y="901" width="9.3" height="15.0" fill="rgb(227,142,33)" rx="2" ry="2" />
<text  x="568.84" y="911.5" ></text>
</g>
<g >
<title>geos::geom::GeometryCollection::apply_ro (436 samples, 42.79%)</title><rect x="79.5" y="1013" width="504.9" height="15.0" fill="rgb(239,87,6)" rx="2" ry="2" />
<text  x="82.48" y="1023.5" >geos::geom::GeometryCollection::apply_ro</text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::parse (18 samples, 1.77%)</title><rect x="19.3" y="1125" width="20.8" height="15.0" fill="rgb(215,70,33)" rx="2" ry="2" />
<text  x="22.26" y="1135.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_create_node&lt;geos::geom::Coordinate const* const&amp;&gt; (50 samples, 4.91%)</title><rect x="428.0" y="869" width="57.9" height="15.0" fill="rgb(210,154,29)" rx="2" ry="2" />
<text  x="431.04" y="879.5" >std::_..</text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (1 samples, 0.10%)</title><rect x="617.9" y="805" width="1.2" height="15.0" fill="rgb(230,106,26)" rx="2" ry="2" />
<text  x="620.95" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (35 samples, 3.43%)</title><rect x="586.7" y="949" width="40.5" height="15.0" fill="rgb(243,224,20)" rx="2" ry="2" />
<text  x="589.68" y="959.5" >std..</text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_create_node&lt;geos::geom::Coordinate const* const&amp;&gt; (1 samples, 0.10%)</title><rect x="1135.6" y="1445" width="1.1" height="15.0" fill="rgb(243,29,20)" rx="2" ry="2" />
<text  x="1138.57" y="1455.5" ></text>
</g>
<g >
<title>std::forward&lt;geos::geom::Coordinate const* const&amp;&gt; (2 samples, 0.20%)</title><rect x="483.6" y="853" width="2.3" height="15.0" fill="rgb(248,83,6)" rx="2" ry="2" />
<text  x="486.62" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_create_node&lt;geos::geom::Coordinate const*&amp;&gt; (1 samples, 0.10%)</title><rect x="1099.7" y="933" width="1.1" height="15.0" fill="rgb(210,12,33)" rx="2" ry="2" />
<text  x="1102.68" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt;::deallocate (2 samples, 0.20%)</title><rect x="615.6" y="757" width="2.3" height="15.0" fill="rgb(235,156,52)" rx="2" ry="2" />
<text  x="618.63" y="767.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (18 samples, 1.77%)</title><rect x="19.3" y="885" width="20.8" height="15.0" fill="rgb(209,110,16)" rx="2" ry="2" />
<text  x="22.26" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_node (1 samples, 0.10%)</title><rect x="1135.6" y="1429" width="1.1" height="15.0" fill="rgb(253,80,45)" rx="2" ry="2" />
<text  x="1138.57" y="1439.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (18 samples, 1.77%)</title><rect x="19.3" y="773" width="20.8" height="15.0" fill="rgb(215,57,25)" rx="2" ry="2" />
<text  x="22.26" y="783.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt;&amp;&gt; (1 samples, 0.10%)</title><rect x="707.1" y="933" width="1.2" height="15.0" fill="rgb(250,30,19)" rx="2" ry="2" />
<text  x="710.11" y="943.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (14 samples, 1.37%)</title><rect x="750.0" y="949" width="16.2" height="15.0" fill="rgb(210,136,33)" rx="2" ry="2" />
<text  x="752.96" y="959.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, geos::geom::Coordinate const**, geos::geom::Coordinate const**&gt; (1 samples, 0.10%)</title><rect x="685.1" y="885" width="1.2" height="15.0" fill="rgb(217,153,39)" rx="2" ry="2" />
<text  x="688.11" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_key (6 samples, 0.59%)</title><rect x="490.6" y="885" width="6.9" height="15.0" fill="rgb(235,130,24)" rx="2" ry="2" />
<text  x="493.57" y="895.5" ></text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::polarCompare (1 samples, 0.10%)</title><rect x="766.2" y="901" width="1.1" height="15.0" fill="rgb(249,68,31)" rx="2" ry="2" />
<text  x="769.17" y="911.5" ></text>
</g>
<g >
<title>core::ptr::read (1 samples, 0.10%)</title><rect x="10.0" y="949" width="1.2" height="15.0" fill="rgb(220,174,42)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>geos::algorithm::ConvexHull::grahamScan (2 samples, 0.20%)</title><rect x="1118.2" y="1445" width="2.3" height="15.0" fill="rgb(229,229,5)" rx="2" ry="2" />
<text  x="1121.20" y="1455.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (17 samples, 1.67%)</title><rect x="19.3" y="469" width="19.6" height="15.0" fill="rgb(230,190,11)" rx="2" ry="2" />
<text  x="22.26" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_Node_allocator (1 samples, 0.10%)</title><rect x="601.7" y="869" width="1.2" height="15.0" fill="rgb(223,183,27)" rx="2" ry="2" />
<text  x="604.74" y="879.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.77%)</title><rect x="19.3" y="917" width="20.8" height="15.0" fill="rgb(205,8,23)" rx="2" ry="2" />
<text  x="22.26" y="927.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="18.1" y="773" width="1.2" height="15.0" fill="rgb(222,126,36)" rx="2" ry="2" />
<text  x="21.11" y="783.5" ></text>
</g>
<g >
<title>ksys_read (2 samples, 0.20%)</title><rect x="41.3" y="917" width="2.3" height="15.0" fill="rgb(217,44,1)" rx="2" ry="2" />
<text  x="44.27" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_destroy_node (1 samples, 0.10%)</title><rect x="617.9" y="773" width="1.2" height="15.0" fill="rgb(242,199,40)" rx="2" ry="2" />
<text  x="620.95" y="783.5" ></text>
</g>
<g >
<title>geos::algorithm::ConvexHull::reduce (2 samples, 0.20%)</title><rect x="1120.5" y="1445" width="2.3" height="15.0" fill="rgb(246,165,44)" rx="2" ry="2" />
<text  x="1123.52" y="1455.5" ></text>
</g>
<g >
<title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18 samples, 1.77%)</title><rect x="19.3" y="933" width="20.8" height="15.0" fill="rgb(252,170,27)" rx="2" ry="2" />
<text  x="22.26" y="943.5" ></text>
</g>
<g >
<title>std::forward&lt;geos::geom::Coordinate const* const&amp;&gt;@plt (2 samples, 0.20%)</title><rect x="526.5" y="901" width="2.3" height="15.0" fill="rgb(241,12,43)" rx="2" ry="2" />
<text  x="529.47" y="911.5" ></text>
</g>
<g >
<title>get_max_fast (1 samples, 0.10%)</title><rect x="481.3" y="757" width="1.2" height="15.0" fill="rgb(251,176,43)" rx="2" ry="2" />
<text  x="484.31" y="767.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.10%)</title><rect x="1133.3" y="1429" width="1.1" height="15.0" fill="rgb(219,161,52)" rx="2" ry="2" />
<text  x="1136.26" y="1439.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (4 samples, 0.39%)</title><rect x="25.1" y="181" width="4.6" height="15.0" fill="rgb(207,138,0)" rx="2" ry="2" />
<text  x="28.05" y="191.5" ></text>
</g>
<g >
<title>geojson::util::get_geometry (1 samples, 0.10%)</title><rect x="13.5" y="1237" width="1.1" height="15.0" fill="rgb(251,112,13)" rx="2" ry="2" />
<text  x="16.47" y="1247.5" ></text>
</g>
<g >
<title>geojson::util::get_value (1 samples, 0.10%)</title><rect x="13.5" y="1189" width="1.1" height="15.0" fill="rgb(231,115,40)" rx="2" ry="2" />
<text  x="16.47" y="1199.5" ></text>
</g>
<g >
<title>new_sync_read (2 samples, 0.20%)</title><rect x="41.3" y="885" width="2.3" height="15.0" fill="rgb(231,116,21)" rx="2" ry="2" />
<text  x="44.27" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;::_M_valptr (1 samples, 0.10%)</title><rect x="605.2" y="853" width="1.2" height="15.0" fill="rgb(206,50,21)" rx="2" ry="2" />
<text  x="608.21" y="863.5" ></text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::polarCompare (3 samples, 0.29%)</title><rect x="745.3" y="869" width="3.5" height="15.0" fill="rgb(212,222,50)" rx="2" ry="2" />
<text  x="748.33" y="879.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (3 samples, 0.29%)</title><rect x="740.7" y="821" width="3.5" height="15.0" fill="rgb(247,113,21)" rx="2" ry="2" />
<text  x="743.70" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_create_node&lt;geos::geom::Coordinate const* const&amp;&gt; (15 samples, 1.47%)</title><rect x="1070.7" y="949" width="17.4" height="15.0" fill="rgb(239,149,27)" rx="2" ry="2" />
<text  x="1073.73" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_check_len (1 samples, 0.10%)</title><rect x="579.7" y="901" width="1.2" height="15.0" fill="rgb(252,132,51)" rx="2" ry="2" />
<text  x="582.74" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;geos::geom::Coordinate const*&gt;::_M_ptr (3 samples, 0.29%)</title><rect x="440.8" y="821" width="3.4" height="15.0" fill="rgb(250,176,1)" rx="2" ry="2" />
<text  x="443.78" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_construct_node&lt;geos::geom::Coordinate const* const&amp;&gt; (6 samples, 0.59%)</title><rect x="1071.9" y="933" width="6.9" height="15.0" fill="rgb(230,198,11)" rx="2" ry="2" />
<text  x="1074.88" y="943.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.29%)</title><rect x="26.2" y="133" width="3.5" height="15.0" fill="rgb(213,190,12)" rx="2" ry="2" />
<text  x="29.21" y="143.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::hull_set (15 samples, 1.47%)</title><rect x="43.6" y="1093" width="17.4" height="15.0" fill="rgb(206,175,50)" rx="2" ry="2" />
<text  x="46.58" y="1103.5" ></text>
</g>
<g >
<title>geos::algorithm::Orientation::index (1 samples, 0.10%)</title><rect x="696.7" y="901" width="1.2" height="15.0" fill="rgb(233,96,50)" rx="2" ry="2" />
<text  x="699.69" y="911.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.77%)</title><rect x="19.3" y="709" width="20.8" height="15.0" fill="rgb(226,117,35)" rx="2" ry="2" />
<text  x="22.26" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt;::deallocate (2 samples, 0.20%)</title><rect x="595.9" y="869" width="2.4" height="15.0" fill="rgb(236,94,53)" rx="2" ry="2" />
<text  x="598.95" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (36 samples, 3.53%)</title><rect x="585.5" y="965" width="41.7" height="15.0" fill="rgb(243,94,49)" rx="2" ry="2" />
<text  x="588.53" y="975.5" >std..</text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::polarCompare (12 samples, 1.18%)</title><rect x="751.1" y="885" width="13.9" height="15.0" fill="rgb(246,215,23)" rx="2" ry="2" />
<text  x="754.12" y="895.5" ></text>
</g>
<g >
<title>std::allocator&lt;geos::geom::Coordinate&gt;::~allocator@plt (1 samples, 0.10%)</title><rect x="686.3" y="997" width="1.1" height="15.0" fill="rgb(207,56,7)" rx="2" ry="2" />
<text  x="689.27" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;geos::geom::Coordinate const*&gt;::allocate (1 samples, 0.10%)</title><rect x="684.0" y="933" width="1.1" height="15.0" fill="rgb(210,68,38)" rx="2" ry="2" />
<text  x="686.95" y="943.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;geos::geom::Coordinate const**&gt;, geos::geom::Coordinate const**, geos::geom::Coordinate const*&gt; (4 samples, 0.39%)</title><rect x="575.1" y="885" width="4.6" height="15.0" fill="rgb(241,181,46)" rx="2" ry="2" />
<text  x="578.10" y="895.5" ></text>
</g>
<g >
<title>std::forward&lt;geos::geom::Coordinate const* const&amp;&gt; (1 samples, 0.10%)</title><rect x="448.9" y="805" width="1.1" height="15.0" fill="rgb(254,171,9)" rx="2" ry="2" />
<text  x="451.88" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;geojson::geometry::Geometry&gt;&gt; (1 samples, 0.10%)</title><rect x="18.1" y="1029" width="1.2" height="15.0" fill="rgb(231,173,23)" rx="2" ry="2" />
<text  x="21.11" y="1039.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::push_back (7 samples, 0.69%)</title><rect x="671.2" y="1013" width="8.1" height="15.0" fill="rgb(236,35,49)" rx="2" ry="2" />
<text  x="674.22" y="1023.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (8 samples, 0.79%)</title><rect x="29.7" y="261" width="9.2" height="15.0" fill="rgb(214,116,42)" rx="2" ry="2" />
<text  x="32.69" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_right (1 samples, 0.10%)</title><rect x="619.1" y="853" width="1.2" height="15.0" fill="rgb(222,55,45)" rx="2" ry="2" />
<text  x="622.11" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_drop_node (1 samples, 0.10%)</title><rect x="617.9" y="789" width="1.2" height="15.0" fill="rgb(228,105,19)" rx="2" ry="2" />
<text  x="620.95" y="799.5" ></text>
</g>
<g >
<title>geojson::util::expect_property (1 samples, 0.10%)</title><rect x="10.0" y="1141" width="1.2" height="15.0" fill="rgb(251,217,26)" rx="2" ry="2" />
<text  x="13.00" y="1151.5" ></text>
</g>
<g >
<title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17 samples, 1.67%)</title><rect x="19.3" y="517" width="19.6" height="15.0" fill="rgb(248,125,36)" rx="2" ry="2" />
<text  x="22.26" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (4 samples, 0.39%)</title><rect x="1105.5" y="933" width="4.6" height="15.0" fill="rgb(243,78,1)" rx="2" ry="2" />
<text  x="1108.47" y="943.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::deallocate (3 samples, 0.29%)</title><rect x="594.8" y="885" width="3.5" height="15.0" fill="rgb(234,222,45)" rx="2" ry="2" />
<text  x="597.79" y="895.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="13.5" y="1077" width="1.1" height="15.0" fill="rgb(213,96,50)" rx="2" ry="2" />
<text  x="16.47" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (4 samples, 0.39%)</title><rect x="25.1" y="197" width="4.6" height="15.0" fill="rgb(235,112,19)" rx="2" ry="2" />
<text  x="28.05" y="207.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.67%)</title><rect x="19.3" y="597" width="19.6" height="15.0" fill="rgb(248,4,27)" rx="2" ry="2" />
<text  x="22.26" y="607.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (17 samples, 1.67%)</title><rect x="19.3" y="453" width="19.6" height="15.0" fill="rgb(223,160,24)" rx="2" ry="2" />
<text  x="22.26" y="463.5" ></text>
</g>
<g >
<title>std::sys::unix::fd::FileDesc::read (2 samples, 0.20%)</title><rect x="41.3" y="981" width="2.3" height="15.0" fill="rgb(254,149,47)" rx="2" ry="2" />
<text  x="44.27" y="991.5" ></text>
</g>
<g >
<title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::next (1 samples, 0.10%)</title><rect x="32.0" y="149" width="1.2" height="15.0" fill="rgb(214,104,41)" rx="2" ry="2" />
<text  x="35.00" y="159.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;std::_Rb_tree_const_iterator&lt;geos::geom::Coordinate const*&gt; &gt; (1 samples, 0.10%)</title><rect x="1115.9" y="949" width="1.1" height="15.0" fill="rgb(224,95,54)" rx="2" ry="2" />
<text  x="1118.89" y="959.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="18.1" y="789" width="1.2" height="15.0" fill="rgb(249,18,7)" rx="2" ry="2" />
<text  x="21.11" y="799.5" ></text>
</g>
<g >
<title>geos::algorithm::ConvexHull::reduce (285 samples, 27.97%)</title><rect x="787.0" y="1029" width="330.0" height="15.0" fill="rgb(238,11,32)" rx="2" ry="2" />
<text  x="790.02" y="1039.5" >geos::algorithm::ConvexHull::reduce</text>
</g>
<g >
<title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13 samples, 1.28%)</title><rect x="23.9" y="341" width="15.0" height="15.0" fill="rgb(234,125,4)" rx="2" ry="2" />
<text  x="26.90" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_key@plt (3 samples, 0.29%)</title><rect x="375.9" y="885" width="3.5" height="15.0" fill="rgb(214,45,54)" rx="2" ry="2" />
<text  x="378.93" y="895.5" ></text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::polarCompare (3 samples, 0.29%)</title><rect x="694.4" y="917" width="3.5" height="15.0" fill="rgb(216,122,22)" rx="2" ry="2" />
<text  x="697.38" y="927.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndexFilter (17 samples, 1.67%)</title><rect x="950.3" y="917" width="19.7" height="15.0" fill="rgb(212,127,46)" rx="2" ry="2" />
<text  x="953.29" y="927.5" ></text>
</g>
<g >
<title>std::io::append_to_string (2 samples, 0.20%)</title><rect x="41.3" y="1077" width="2.3" height="15.0" fill="rgb(224,212,24)" rx="2" ry="2" />
<text  x="44.27" y="1087.5" ></text>
</g>
<g >
<title>serde_json::de::from_trait (18 samples, 1.77%)</title><rect x="19.3" y="1061" width="20.8" height="15.0" fill="rgb(208,84,39)" rx="2" ry="2" />
<text  x="22.26" y="1071.5" ></text>
</g>
<g >
<title>harness::data::load_multipolygon_pack (1 samples, 0.10%)</title><rect x="13.5" y="1429" width="1.1" height="15.0" fill="rgb(217,198,0)" rx="2" ry="2" />
<text  x="16.47" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_key (11 samples, 1.08%)</title><rect x="1169.2" y="1445" width="12.7" height="15.0" fill="rgb(228,0,47)" rx="2" ry="2" />
<text  x="1172.16" y="1455.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;geos::geom::Coordinate const*&gt; (3 samples, 0.29%)</title><rect x="576.3" y="789" width="3.4" height="15.0" fill="rgb(220,42,2)" rx="2" ry="2" />
<text  x="579.26" y="799.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Rb_tree_iterator&lt;geos::geom::Coordinate const*&gt; &gt;@plt (1 samples, 0.10%)</title><rect x="532.3" y="885" width="1.1" height="15.0" fill="rgb(230,203,31)" rx="2" ry="2" />
<text  x="535.26" y="895.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::slice_remove (1 samples, 0.10%)</title><rect x="10.0" y="997" width="1.2" height="15.0" fill="rgb(230,110,28)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>geos::algorithm::ConvexHull::computeOctRing (64 samples, 6.28%)</title><rect x="794.0" y="1013" width="74.1" height="15.0" fill="rgb(223,204,48)" rx="2" ry="2" />
<text  x="796.96" y="1023.5" >geos::al..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::construct&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const* const&amp;&gt; (1 samples, 0.10%)</title><rect x="682.8" y="981" width="1.2" height="15.0" fill="rgb(250,169,34)" rx="2" ry="2" />
<text  x="685.80" y="991.5" ></text>
</g>
<g >
<title>std::fill_n&lt;geos::geom::Coordinate const**, unsigned long, geos::geom::Coordinate const*&gt; (1 samples, 0.10%)</title><rect x="865.8" y="901" width="1.1" height="15.0" fill="rgb(250,141,23)" rx="2" ry="2" />
<text  x="868.76" y="911.5" ></text>
</g>
<g >
<title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18 samples, 1.77%)</title><rect x="19.3" y="837" width="20.8" height="15.0" fill="rgb(209,90,52)" rx="2" ry="2" />
<text  x="22.26" y="847.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (13 samples, 1.28%)</title><rect x="23.9" y="373" width="15.0" height="15.0" fill="rgb(216,176,28)" rx="2" ry="2" />
<text  x="26.90" y="383.5" ></text>
</g>
<g >
<title>geos::algorithm::ConvexHull::computeOctPts (63 samples, 6.18%)</title><rect x="794.0" y="997" width="72.9" height="15.0" fill="rgb(245,44,17)" rx="2" ry="2" />
<text  x="796.96" y="1007.5" >geos::al..</text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;geos::geom::Coordinate const*&gt;::operator== (2 samples, 0.20%)</title><rect x="397.9" y="885" width="2.3" height="15.0" fill="rgb(222,28,11)" rx="2" ry="2" />
<text  x="400.93" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate, std::allocator&lt;geos::geom::Coordinate&gt; &gt;::begin (1 samples, 0.10%)</title><rect x="582.1" y="949" width="1.1" height="15.0" fill="rgb(250,21,39)" rx="2" ry="2" />
<text  x="585.05" y="959.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::construct&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const* const&amp;&gt; (4 samples, 0.39%)</title><rect x="673.5" y="997" width="4.7" height="15.0" fill="rgb(226,52,28)" rx="2" ry="2" />
<text  x="676.53" y="1007.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.10%)</title><rect x="11.2" y="1013" width="1.1" height="15.0" fill="rgb(239,4,53)" rx="2" ry="2" />
<text  x="14.16" y="1023.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.20%)</title><rect x="19.3" y="117" width="2.3" height="15.0" fill="rgb(230,190,51)" rx="2" ry="2" />
<text  x="22.26" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_insert_&lt;geos::geom::Coordinate const* const&amp;, std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_Alloc_node&gt; (3 samples, 0.29%)</title><rect x="1165.7" y="1445" width="3.5" height="15.0" fill="rgb(211,32,33)" rx="2" ry="2" />
<text  x="1168.68" y="1455.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_destroy_node (1 samples, 0.10%)</title><rect x="589.0" y="917" width="1.2" height="15.0" fill="rgb(226,153,52)" rx="2" ry="2" />
<text  x="592.00" y="927.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndexFilter (4 samples, 0.39%)</title><rect x="777.8" y="837" width="4.6" height="15.0" fill="rgb(211,135,43)" rx="2" ry="2" />
<text  x="780.75" y="847.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1 samples, 0.10%)</title><rect x="70.2" y="981" width="1.2" height="15.0" fill="rgb(210,92,36)" rx="2" ry="2" />
<text  x="73.22" y="991.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;*&amp;&gt; (1 samples, 0.10%)</title><rect x="403.7" y="869" width="1.2" height="15.0" fill="rgb(218,129,8)" rx="2" ry="2" />
<text  x="406.72" y="879.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::allocate (26 samples, 2.55%)</title><rect x="453.5" y="837" width="30.1" height="15.0" fill="rgb(248,47,17)" rx="2" ry="2" />
<text  x="456.51" y="847.5" >st..</text>
</g>
<g >
<title>&lt;f64 as core::ops::arith::Add&gt;::add (1 samples, 0.10%)</title><rect x="45.9" y="949" width="1.2" height="15.0" fill="rgb(223,23,22)" rx="2" ry="2" />
<text  x="48.90" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;geos::geom::Coordinate const*&gt;::construct&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const* const&amp;&gt;@plt (1 samples, 0.10%)</title><rect x="562.4" y="901" width="1.1" height="15.0" fill="rgb(216,181,4)" rx="2" ry="2" />
<text  x="565.37" y="911.5" ></text>
</g>
<g >
<title>geos::algorithm::RayCrossingCounter::locatePointInRing (1 samples, 0.10%)</title><rect x="1126.3" y="1429" width="1.2" height="15.0" fill="rgb(242,80,2)" rx="2" ry="2" />
<text  x="1129.31" y="1439.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (6 samples, 0.59%)</title><rect x="776.6" y="853" width="6.9" height="15.0" fill="rgb(217,149,0)" rx="2" ry="2" />
<text  x="779.59" y="863.5" ></text>
</g>
<g >
<title>std::io::read_to_end_with_reservation (2 samples, 0.20%)</title><rect x="41.3" y="1029" width="2.3" height="15.0" fill="rgb(233,99,6)" rx="2" ry="2" />
<text  x="44.27" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::__normal_iterator (1 samples, 0.10%)</title><rect x="14.6" y="1429" width="1.2" height="15.0" fill="rgb(239,6,7)" rx="2" ry="2" />
<text  x="17.63" y="1439.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_value (2 samples, 0.20%)</title><rect x="1181.9" y="1445" width="2.3" height="15.0" fill="rgb(228,225,16)" rx="2" ry="2" />
<text  x="1184.89" y="1455.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;::_M_valptr (1 samples, 0.10%)</title><rect x="1134.4" y="1429" width="1.2" height="15.0" fill="rgb(212,152,9)" rx="2" ry="2" />
<text  x="1137.42" y="1439.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt; &gt; (1 samples, 0.10%)</title><rect x="765.0" y="917" width="1.2" height="15.0" fill="rgb(242,175,20)" rx="2" ry="2" />
<text  x="768.01" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_Node_allocator (1 samples, 0.10%)</title><rect x="593.6" y="885" width="1.2" height="15.0" fill="rgb(247,65,2)" rx="2" ry="2" />
<text  x="596.63" y="895.5" ></text>
</g>
<g >
<title>execute&lt;GEOSConvexHull_r::{lambda (896 samples, 87.93%)</title><rect x="79.5" y="1093" width="1037.5" height="15.0" fill="rgb(209,59,14)" rx="2" ry="2" />
<text  x="82.48" y="1103.5" >execute&lt;GEOSConvexHull_r::{lambda</text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::push_back (1 samples, 0.10%)</title><rect x="1132.1" y="1429" width="1.2" height="15.0" fill="rgb(211,86,42)" rx="2" ry="2" />
<text  x="1135.10" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::operator[]@plt (1 samples, 0.10%)</title><rect x="1004.7" y="965" width="1.2" height="15.0" fill="rgb(205,139,45)" rx="2" ry="2" />
<text  x="1007.72" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (3 samples, 0.29%)</title><rect x="1139.0" y="1445" width="3.5" height="15.0" fill="rgb(213,38,1)" rx="2" ry="2" />
<text  x="1142.05" y="1455.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_insert_unique_pos (258 samples, 25.32%)</title><rect x="106.1" y="901" width="298.8" height="15.0" fill="rgb(228,43,10)" rx="2" ry="2" />
<text  x="109.11" y="911.5" >std::_Rb_tree&lt;geos::geom::Coordinate con..</text>
</g>
<g >
<title>_start (950 samples, 93.23%)</title><rect x="18.1" y="1445" width="1100.1" height="15.0" fill="rgb(249,129,53)" rx="2" ry="2" />
<text  x="21.11" y="1455.5" >_start</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;geos::geom::Coordinate const**&gt;, geos::geom::Coordinate const**&gt; (1 samples, 0.10%)</title><rect x="678.2" y="933" width="1.1" height="15.0" fill="rgb(225,189,33)" rx="2" ry="2" />
<text  x="681.16" y="943.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.10%)</title><rect x="11.2" y="1125" width="1.1" height="15.0" fill="rgb(245,102,24)" rx="2" ry="2" />
<text  x="14.16" y="1135.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;geos::geom::Coordinate const**, unsigned long, geos::geom::Coordinate const*&gt; (1 samples, 0.10%)</title><rect x="865.8" y="885" width="1.1" height="15.0" fill="rgb(233,102,46)" rx="2" ry="2" />
<text  x="868.76" y="895.5" ></text>
</g>
<g >
<title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.10%)</title><rect x="10.0" y="981" width="1.2" height="15.0" fill="rgb(246,226,1)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_right (1 samples, 0.10%)</title><rect x="626.1" y="917" width="1.1" height="15.0" fill="rgb(211,216,15)" rx="2" ry="2" />
<text  x="629.05" y="927.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (1 samples, 0.10%)</title><rect x="696.7" y="885" width="1.2" height="15.0" fill="rgb(236,150,2)" rx="2" ry="2" />
<text  x="699.69" y="895.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.20%)</title><rect x="19.3" y="181" width="2.3" height="15.0" fill="rgb(231,217,11)" rx="2" ry="2" />
<text  x="22.26" y="191.5" ></text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::polarCompare (3 samples, 0.29%)</title><rect x="701.3" y="901" width="3.5" height="15.0" fill="rgb(228,125,52)" rx="2" ry="2" />
<text  x="704.32" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_put_node (3 samples, 0.29%)</title><rect x="594.8" y="901" width="3.5" height="15.0" fill="rgb(233,92,43)" rx="2" ry="2" />
<text  x="597.79" y="911.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.10%)</title><rect x="590.2" y="869" width="1.1" height="15.0" fill="rgb(231,66,44)" rx="2" ry="2" />
<text  x="593.16" y="879.5" ></text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::polarCompare (5 samples, 0.49%)</title><rect x="738.4" y="853" width="5.8" height="15.0" fill="rgb(232,215,24)" rx="2" ry="2" />
<text  x="741.38" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;geos::geom::CoordinateSequence, std::default_delete&lt;geos::geom::CoordinateSequence&gt; &gt;::unique_ptr (1 samples, 0.10%)</title><rect x="689.7" y="965" width="1.2" height="15.0" fill="rgb(249,151,1)" rx="2" ry="2" />
<text  x="692.74" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_assign_aux&lt;std::_Rb_tree_const_iterator&lt;geos::geom::Coordinate const*&gt; &gt; (6 samples, 0.59%)</title><rect x="1110.1" y="981" width="6.9" height="15.0" fill="rgb(229,91,40)" rx="2" ry="2" />
<text  x="1113.10" y="991.5" ></text>
</g>
<g >
<title>std::_Construct&lt;geos::geom::Coordinate&gt; (1 samples, 0.10%)</title><rect x="688.6" y="917" width="1.1" height="15.0" fill="rgb(206,51,41)" rx="2" ry="2" />
<text  x="691.59" y="927.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::le (1 samples, 0.10%)</title><rect x="70.2" y="965" width="1.2" height="15.0" fill="rgb(207,140,41)" rx="2" ry="2" />
<text  x="73.22" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_equal_to_iter::operator (1 samples, 0.10%)</title><rect x="866.9" y="949" width="1.2" height="15.0" fill="rgb(248,159,1)" rx="2" ry="2" />
<text  x="869.92" y="959.5" ></text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::operator (4 samples, 0.39%)</title><rect x="700.2" y="917" width="4.6" height="15.0" fill="rgb(236,178,7)" rx="2" ry="2" />
<text  x="703.17" y="927.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (1 samples, 0.10%)</title><rect x="10.0" y="1093" width="1.2" height="15.0" fill="rgb(253,0,39)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" ></text>
</g>
<g >
<title>&lt;geozero::geojson::geojson_reader::GeoJsonReader&lt;R&gt; as geozero::api::GeozeroDatasource&gt;::process (22 samples, 2.16%)</title><rect x="18.1" y="1157" width="25.5" height="15.0" fill="rgb(219,68,45)" rx="2" ry="2" />
<text  x="21.11" y="1167.5" >&lt;..</text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (950 samples, 93.23%)</title><rect x="18.1" y="1269" width="1100.1" height="15.0" fill="rgb(208,27,34)" rx="2" ry="2" />
<text  x="21.11" y="1279.5" >core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text>
</g>
<g >
<title>geojson::util::get_features (3 samples, 0.29%)</title><rect x="10.0" y="1269" width="3.5" height="15.0" fill="rgb(247,144,23)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (5 samples, 0.49%)</title><rect x="738.4" y="933" width="5.8" height="15.0" fill="rgb(207,84,23)" rx="2" ry="2" />
<text  x="741.38" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::empty (1 samples, 0.10%)</title><rect x="1118.2" y="1429" width="1.2" height="15.0" fill="rgb(222,13,10)" rx="2" ry="2" />
<text  x="1121.20" y="1439.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (5 samples, 0.49%)</title><rect x="738.4" y="917" width="5.8" height="15.0" fill="rgb(246,10,28)" rx="2" ry="2" />
<text  x="741.38" y="927.5" ></text>
</g>
<g >
<title>geojson::geometry::Geometry::from_json_object (3 samples, 0.29%)</title><rect x="10.0" y="1205" width="3.5" height="15.0" fill="rgb(228,98,54)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" ></text>
</g>
<g >
<title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (18 samples, 1.77%)</title><rect x="19.3" y="901" width="20.8" height="15.0" fill="rgb(239,190,14)" rx="2" ry="2" />
<text  x="22.26" y="911.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;geojson::Feature&gt; (1 samples, 0.10%)</title><rect x="18.1" y="1045" width="1.2" height="15.0" fill="rgb(249,203,41)" rx="2" ry="2" />
<text  x="21.11" y="1055.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="684.0" y="901" width="1.1" height="15.0" fill="rgb(231,63,27)" rx="2" ry="2" />
<text  x="686.95" y="911.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientation (2 samples, 0.20%)</title><rect x="967.7" y="901" width="2.3" height="15.0" fill="rgb(222,145,45)" rx="2" ry="2" />
<text  x="970.66" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_drop_node (3 samples, 0.29%)</title><rect x="1100.8" y="949" width="3.5" height="15.0" fill="rgb(235,31,14)" rx="2" ry="2" />
<text  x="1103.83" y="959.5" ></text>
</g>
<g >
<title>std::uninitialized_fill_n&lt;geos::geom::Coordinate const**, unsigned long, geos::geom::Coordinate const*&gt; (1 samples, 0.10%)</title><rect x="865.8" y="933" width="1.1" height="15.0" fill="rgb(253,160,48)" rx="2" ry="2" />
<text  x="868.76" y="943.5" ></text>
</g>
<g >
<title>std::_Identity&lt;geos::geom::Coordinate const*&gt;::operator (12 samples, 1.18%)</title><rect x="309.9" y="869" width="13.9" height="15.0" fill="rgb(237,142,15)" rx="2" ry="2" />
<text  x="312.92" y="879.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (2 samples, 0.20%)</title><rect x="702.5" y="869" width="2.3" height="15.0" fill="rgb(243,138,23)" rx="2" ry="2" />
<text  x="705.48" y="879.5" ></text>
</g>
<g >
<title>harness::data::load_multipolygon (3 samples, 0.29%)</title><rect x="10.0" y="1397" width="3.5" height="15.0" fill="rgb(215,46,30)" rx="2" ry="2" />
<text  x="13.00" y="1407.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, geos::geom::Coordinate const**, geos::geom::Coordinate const**&gt; (3 samples, 0.29%)</title><rect x="576.3" y="805" width="3.4" height="15.0" fill="rgb(246,171,28)" rx="2" ry="2" />
<text  x="579.26" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.10%)</title><rect x="11.2" y="1141" width="1.1" height="15.0" fill="rgb(216,200,27)" rx="2" ry="2" />
<text  x="14.16" y="1151.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_drop_node (5 samples, 0.49%)</title><rect x="598.3" y="901" width="5.8" height="15.0" fill="rgb(214,11,1)" rx="2" ry="2" />
<text  x="601.26" y="911.5" ></text>
</g>
<g >
<title>geojson::util::json_to_position (1 samples, 0.10%)</title><rect x="12.3" y="1093" width="1.2" height="15.0" fill="rgb(221,215,31)" rx="2" ry="2" />
<text  x="15.32" y="1103.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::hull_set::_$u7b$$u7b$closure$u7d$$u7d$::he3527c9a5ca8d9da (1 samples, 0.10%)</title><rect x="59.8" y="1061" width="1.2" height="15.0" fill="rgb(241,141,30)" rx="2" ry="2" />
<text  x="62.79" y="1071.5" ></text>
</g>
<g >
<title>GEOSGeom_destroy_r::{lambda (1 samples, 0.10%)</title><rect x="1117.0" y="1077" width="1.2" height="15.0" fill="rgb(218,2,3)" rx="2" ry="2" />
<text  x="1120.05" y="1087.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, std::_Rb_tree_const_iterator&lt;geos::geom::Coordinate const*&gt;, geos::geom::Coordinate const**&gt; (5 samples, 0.49%)</title><rect x="1110.1" y="933" width="5.8" height="15.0" fill="rgb(235,106,37)" rx="2" ry="2" />
<text  x="1113.10" y="943.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::map_fold::_$u7b$$u7b$closure$u7d$$u7d$::h9bfd4e2611fa3b1e (1 samples, 0.10%)</title><rect x="45.9" y="981" width="1.2" height="15.0" fill="rgb(221,223,45)" rx="2" ry="2" />
<text  x="48.90" y="991.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.10%)</title><rect x="13.5" y="965" width="1.1" height="15.0" fill="rgb(244,62,10)" rx="2" ry="2" />
<text  x="16.47" y="975.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (17 samples, 1.67%)</title><rect x="19.3" y="565" width="19.6" height="15.0" fill="rgb(227,62,53)" rx="2" ry="2" />
<text  x="22.26" y="575.5" ></text>
</g>
<g >
<title>std::isfinite (1 samples, 0.10%)</title><rect x="782.4" y="837" width="1.1" height="15.0" fill="rgb(253,63,39)" rx="2" ry="2" />
<text  x="785.38" y="847.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, std::_Rb_tree_const_iterator&lt;geos::geom::Coordinate const*&gt;, geos::geom::Coordinate const**&gt; (5 samples, 0.49%)</title><rect x="1110.1" y="949" width="5.8" height="15.0" fill="rgb(245,85,35)" rx="2" ry="2" />
<text  x="1113.10" y="959.5" ></text>
</g>
<g >
<title>geos::algorithm::ConvexHull::cleanRing (5 samples, 0.49%)</title><rect x="680.5" y="1013" width="5.8" height="15.0" fill="rgb(205,177,32)" rx="2" ry="2" />
<text  x="683.48" y="1023.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::hull_set::_$u7b$$u7b$closure$u7d$$u7d$::h42e16cf9d6a833ce (3 samples, 0.29%)</title><rect x="49.4" y="1045" width="3.4" height="15.0" fill="rgb(250,80,48)" rx="2" ry="2" />
<text  x="52.37" y="1055.5" ></text>
</g>
<g >
<title>geos::geom::CoordinateLessThen::operator (98 samples, 9.62%)</title><rect x="165.2" y="885" width="113.5" height="15.0" fill="rgb(209,11,27)" rx="2" ry="2" />
<text  x="168.17" y="895.5" >geos::geom::Co..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt;::operator (3 samples, 0.29%)</title><rect x="694.4" y="949" width="3.5" height="15.0" fill="rgb(231,55,51)" rx="2" ry="2" />
<text  x="697.38" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;geos::geom::Coordinate const*&gt;::_Rb_tree_iterator (4 samples, 0.39%)</title><rect x="391.0" y="885" width="4.6" height="15.0" fill="rgb(239,158,35)" rx="2" ry="2" />
<text  x="393.98" y="895.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.49%)</title><rect x="23.9" y="245" width="5.8" height="15.0" fill="rgb(252,179,35)" rx="2" ry="2" />
<text  x="26.90" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.20%)</title><rect x="19.3" y="325" width="2.3" height="15.0" fill="rgb(254,114,49)" rx="2" ry="2" />
<text  x="22.26" y="335.5" ></text>
</g>
<g >
<title>geos::geom::Polygon::Polygon (1 samples, 0.10%)</title><rect x="692.1" y="997" width="1.1" height="15.0" fill="rgb(250,176,36)" rx="2" ry="2" />
<text  x="695.06" y="1007.5" ></text>
</g>
<g >
<title>benchmark_convex_hull::main (3 samples, 0.29%)</title><rect x="10.0" y="1429" width="3.5" height="15.0" fill="rgb(210,5,40)" rx="2" ry="2" />
<text  x="13.00" y="1439.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::quick_hull (31 samples, 3.04%)</title><rect x="43.6" y="1109" width="35.9" height="15.0" fill="rgb(240,37,22)" rx="2" ry="2" />
<text  x="46.58" y="1119.5" >geo..</text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::parse (3 samples, 0.29%)</title><rect x="10.0" y="1349" width="3.5" height="15.0" fill="rgb(217,229,7)" rx="2" ry="2" />
<text  x="13.00" y="1359.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt;::operator (11 samples, 1.08%)</title><rect x="770.8" y="933" width="12.7" height="15.0" fill="rgb(232,142,6)" rx="2" ry="2" />
<text  x="773.80" y="943.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f64&gt;::partial_cmp (7 samples, 0.69%)</title><rect x="63.3" y="997" width="8.1" height="15.0" fill="rgb(251,211,25)" rx="2" ry="2" />
<text  x="66.27" y="1007.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndexFilter (1 samples, 0.10%)</title><rect x="696.7" y="853" width="1.2" height="15.0" fill="rgb(214,132,26)" rx="2" ry="2" />
<text  x="699.69" y="863.5" ></text>
</g>
<g >
<title>geos::geom::LineString::apply_ro (433 samples, 42.49%)</title><rect x="81.8" y="981" width="501.4" height="15.0" fill="rgb(211,164,17)" rx="2" ry="2" />
<text  x="84.80" y="991.5" >geos::geom::LineString::apply_ro</text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_destroy_node (1 samples, 0.10%)</title><rect x="1136.7" y="1445" width="1.2" height="15.0" fill="rgb(242,19,38)" rx="2" ry="2" />
<text  x="1139.73" y="1455.5" ></text>
</g>
<g >
<title>geos::algorithm::PointLocation::locateInRing (3 samples, 0.29%)</title><rect x="1122.8" y="1429" width="3.5" height="15.0" fill="rgb(235,51,18)" rx="2" ry="2" />
<text  x="1125.84" y="1439.5" ></text>
</g>
<g >
<title>geos::algorithm::Orientation::index (3 samples, 0.29%)</title><rect x="740.7" y="837" width="3.5" height="15.0" fill="rgb(240,167,15)" rx="2" ry="2" />
<text  x="743.70" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.10%)</title><rect x="23.9" y="197" width="1.2" height="15.0" fill="rgb(237,89,36)" rx="2" ry="2" />
<text  x="26.90" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.29%)</title><rect x="26.2" y="101" width="3.5" height="15.0" fill="rgb(237,34,52)" rx="2" ry="2" />
<text  x="29.21" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::operator-- (2 samples, 0.20%)</title><rect x="768.5" y="933" width="2.3" height="15.0" fill="rgb(208,167,18)" rx="2" ry="2" />
<text  x="771.49" y="943.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (950 samples, 93.23%)</title><rect x="18.1" y="1221" width="1100.1" height="15.0" fill="rgb(207,206,34)" rx="2" ry="2" />
<text  x="21.11" y="1231.5" >core::ops::function::FnOnce::call_once</text>
</g>
<g >
<title>std::forward&lt;std::_Rb_tree_iterator&lt;geos::geom::Coordinate const*&gt; &gt; (1 samples, 0.10%)</title><rect x="1093.9" y="965" width="1.1" height="15.0" fill="rgb(250,174,1)" rx="2" ry="2" />
<text  x="1096.89" y="975.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.10%)</title><rect x="18.1" y="757" width="1.2" height="15.0" fill="rgb(208,79,10)" rx="2" ry="2" />
<text  x="21.11" y="767.5" ></text>
</g>
<g >
<title>geos::algorithm::Orientation::index (8 samples, 0.79%)</title><rect x="774.3" y="885" width="9.2" height="15.0" fill="rgb(220,85,18)" rx="2" ry="2" />
<text  x="777.28" y="895.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt; &gt;::deallocate (1 samples, 0.10%)</title><rect x="602.9" y="853" width="1.2" height="15.0" fill="rgb(218,202,34)" rx="2" ry="2" />
<text  x="605.89" y="863.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;geos::geom::Coordinate const**, geos::geom::Coordinate const**, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; (4 samples, 0.39%)</title><rect x="575.1" y="901" width="4.6" height="15.0" fill="rgb(254,13,19)" rx="2" ry="2" />
<text  x="578.10" y="911.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;geos::geom::Coordinate const**&gt;, geos::geom::Coordinate const**, geos::geom::Coordinate const*&gt; (1 samples, 0.10%)</title><rect x="685.1" y="949" width="1.2" height="15.0" fill="rgb(233,105,24)" rx="2" ry="2" />
<text  x="688.11" y="959.5" ></text>
</g>
<g >
<title>geos::geom::Polygon::~Polygon (1 samples, 0.10%)</title><rect x="1117.0" y="1061" width="1.2" height="15.0" fill="rgb(211,121,53)" rx="2" ry="2" />
<text  x="1120.05" y="1071.5" ></text>
</g>
<g >
<title>harness::data::load_multipolygon (22 samples, 2.16%)</title><rect x="18.1" y="1173" width="25.5" height="15.0" fill="rgb(226,113,17)" rx="2" ry="2" />
<text  x="21.11" y="1183.5" >h..</text>
</g>
<g >
<title>std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::h3a398a8154de3106 (950 samples, 93.23%)</title><rect x="18.1" y="1333" width="1100.1" height="15.0" fill="rgb(229,121,9)" rx="2" ry="2" />
<text  x="21.11" y="1343.5" >std::rt::lang_start_internal::_$u7b$$u7b$closure$u7d$$u7d$::h3a398a8154de3106</text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (14 samples, 1.37%)</title><rect x="722.2" y="853" width="16.2" height="15.0" fill="rgb(244,172,27)" rx="2" ry="2" />
<text  x="725.17" y="863.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Val_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (26 samples, 2.55%)</title><rect x="708.3" y="949" width="30.1" height="15.0" fill="rgb(221,174,15)" rx="2" ry="2" />
<text  x="711.27" y="959.5" >st..</text>
</g>
<g >
<title>geo::utils::partition_slice (5 samples, 0.49%)</title><rect x="55.2" y="1077" width="5.8" height="15.0" fill="rgb(219,131,23)" rx="2" ry="2" />
<text  x="58.16" y="1087.5" ></text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::operator (21 samples, 2.06%)</title><rect x="714.1" y="917" width="24.3" height="15.0" fill="rgb(232,40,5)" rx="2" ry="2" />
<text  x="717.06" y="927.5" >g..</text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_Node_allocator (2 samples, 0.20%)</title><rect x="435.0" y="837" width="2.3" height="15.0" fill="rgb(206,28,23)" rx="2" ry="2" />
<text  x="437.99" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;geos::geom::Coordinate const*&gt;::_M_valptr (31 samples, 3.04%)</title><rect x="336.6" y="853" width="35.9" height="15.0" fill="rgb(218,15,18)" rx="2" ry="2" />
<text  x="339.56" y="863.5" >std..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;f64&gt;&gt; (1 samples, 0.10%)</title><rect x="18.1" y="821" width="1.2" height="15.0" fill="rgb(230,26,36)" rx="2" ry="2" />
<text  x="21.11" y="831.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="13.5" y="1013" width="1.1" height="15.0" fill="rgb(230,213,32)" rx="2" ry="2" />
<text  x="16.47" y="1023.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="743.0" y="757" width="1.2" height="15.0" fill="rgb(244,223,35)" rx="2" ry="2" />
<text  x="746.01" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::pop_back (1 samples, 0.10%)</title><rect x="1188.8" y="1445" width="1.2" height="15.0" fill="rgb(232,138,41)" rx="2" ry="2" />
<text  x="1191.84" y="1455.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;f64&gt;&gt;&gt;]&gt; (1 samples, 0.10%)</title><rect x="18.1" y="949" width="1.2" height="15.0" fill="rgb(251,73,32)" rx="2" ry="2" />
<text  x="21.11" y="959.5" ></text>
</g>
<g >
<title>geo::algorithm::convex_hull::qhull::hull_set::_$u7b$$u7b$closure$u7d$$u7d$::hc070e53374dcf1f8 (1 samples, 0.10%)</title><rect x="43.6" y="917" width="1.1" height="15.0" fill="rgb(211,45,36)" rx="2" ry="2" />
<text  x="46.58" y="927.5" ></text>
</g>
<g >
<title>geozero::geojson::geojson_reader::read_geojson (1 samples, 0.10%)</title><rect x="13.5" y="1381" width="1.1" height="15.0" fill="rgb(211,87,43)" rx="2" ry="2" />
<text  x="16.47" y="1391.5" ></text>
</g>
<g >
<title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.28%)</title><rect x="23.9" y="309" width="15.0" height="15.0" fill="rgb(210,93,11)" rx="2" ry="2" />
<text  x="26.90" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_insert_unique&lt;geos::geom::Coordinate const* const&amp;&gt; (379 samples, 37.19%)</title><rect x="94.5" y="917" width="438.9" height="15.0" fill="rgb(237,166,26)" rx="2" ry="2" />
<text  x="97.53" y="927.5" >std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Co..</text>
</g>
<g >
<title>geos::algorithm::RayCrossingCounter::countSegment@plt (1 samples, 0.10%)</title><rect x="976.9" y="965" width="1.2" height="15.0" fill="rgb(244,41,10)" rx="2" ry="2" />
<text  x="979.93" y="975.5" ></text>
</g>
<g >
<title>geojson::geojson::get_object (18 samples, 1.77%)</title><rect x="19.3" y="1093" width="20.8" height="15.0" fill="rgb(215,59,26)" rx="2" ry="2" />
<text  x="22.26" y="1103.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (17 samples, 1.67%)</title><rect x="19.3" y="645" width="19.6" height="15.0" fill="rgb(245,66,53)" rx="2" ry="2" />
<text  x="22.26" y="655.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (1 samples, 0.10%)</title><rect x="10.0" y="1061" width="1.2" height="15.0" fill="rgb(239,128,29)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="11.2" y="981" width="1.1" height="15.0" fill="rgb(242,196,41)" rx="2" ry="2" />
<text  x="14.16" y="991.5" ></text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (79 samples, 7.75%)</title><rect x="694.4" y="997" width="91.5" height="15.0" fill="rgb(250,167,19)" rx="2" ry="2" />
<text  x="697.38" y="1007.5" >std::__sor..</text>
</g>
<g >
<title>_int_malloc (8 samples, 0.79%)</title><rect x="565.8" y="821" width="9.3" height="15.0" fill="rgb(211,62,44)" rx="2" ry="2" />
<text  x="568.84" y="831.5" ></text>
</g>
<g >
<title>geos::algorithm::PointLocation::locateInRing (123 samples, 12.07%)</title><rect x="868.1" y="997" width="142.4" height="15.0" fill="rgb(233,78,48)" rx="2" ry="2" />
<text  x="871.08" y="1007.5" >geos::algorithm::P..</text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_get_insert_unique_pos (43 samples, 4.22%)</title><rect x="1016.3" y="981" width="49.8" height="15.0" fill="rgb(216,169,16)" rx="2" ry="2" />
<text  x="1019.30" y="991.5" >std::..</text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_any_number (5 samples, 0.49%)</title><rect x="32.0" y="197" width="5.8" height="15.0" fill="rgb(248,222,34)" rx="2" ry="2" />
<text  x="35.00" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_put_node (1 samples, 0.10%)</title><rect x="1108.9" y="869" width="1.2" height="15.0" fill="rgb(232,112,7)" rx="2" ry="2" />
<text  x="1111.94" y="879.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.20%)</title><rect x="19.3" y="277" width="2.3" height="15.0" fill="rgb(222,228,46)" rx="2" ry="2" />
<text  x="22.26" y="287.5" ></text>
</g>
<g >
<title>&lt;geojson::geojson::GeoJson as core::convert::TryFrom&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;&gt;::try_from (1 samples, 0.10%)</title><rect x="13.5" y="1317" width="1.1" height="15.0" fill="rgb(214,87,39)" rx="2" ry="2" />
<text  x="16.47" y="1327.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_Alloc_node::operator (16 samples, 1.57%)</title><rect x="1069.6" y="965" width="18.5" height="15.0" fill="rgb(207,9,39)" rx="2" ry="2" />
<text  x="1072.57" y="975.5" ></text>
</g>
<g >
<title>geos::geom::CoordinateLessThen::operator (17 samples, 1.67%)</title><rect x="1024.4" y="965" width="19.7" height="15.0" fill="rgb(232,111,33)" rx="2" ry="2" />
<text  x="1027.41" y="975.5" ></text>
</g>
<g >
<title>std::set&lt;geos::geom::Coordinate const*, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::insert (393 samples, 38.57%)</title><rect x="93.4" y="933" width="455.1" height="15.0" fill="rgb(252,172,24)" rx="2" ry="2" />
<text  x="96.38" y="943.5" >std::set&lt;geos::geom::Coordinate const*, geos::geom::Coordinate..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::max_by (2 samples, 0.20%)</title><rect x="43.6" y="1077" width="2.3" height="15.0" fill="rgb(207,98,4)" rx="2" ry="2" />
<text  x="46.58" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (17 samples, 1.67%)</title><rect x="604.1" y="901" width="19.6" height="15.0" fill="rgb(206,99,24)" rx="2" ry="2" />
<text  x="607.05" y="911.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (14 samples, 1.37%)</title><rect x="750.0" y="933" width="16.2" height="15.0" fill="rgb(219,202,10)" rx="2" ry="2" />
<text  x="752.96" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_insert_unique&lt;geos::geom::Coordinate const* const&amp;&gt; (72 samples, 7.07%)</title><rect x="1012.8" y="997" width="83.4" height="15.0" fill="rgb(210,131,45)" rx="2" ry="2" />
<text  x="1015.83" y="1007.5" >std::_Rb_..</text>
</g>
<g >
<title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.77%)</title><rect x="19.3" y="693" width="20.8" height="15.0" fill="rgb(253,207,50)" rx="2" ry="2" />
<text  x="22.26" y="703.5" ></text>
</g>
<g >
<title>_int_realloc (2 samples, 0.20%)</title><rect x="19.3" y="213" width="2.3" height="15.0" fill="rgb(225,52,50)" rx="2" ry="2" />
<text  x="22.26" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (5 samples, 0.49%)</title><rect x="1104.3" y="949" width="5.8" height="15.0" fill="rgb(242,182,21)" rx="2" ry="2" />
<text  x="1107.31" y="959.5" ></text>
</g>
<g >
<title>std::sys::unix::fs::File::read (2 samples, 0.20%)</title><rect x="41.3" y="997" width="2.3" height="15.0" fill="rgb(234,210,15)" rx="2" ry="2" />
<text  x="44.27" y="1007.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndexFilter (8 samples, 0.79%)</title><rect x="635.3" y="965" width="9.3" height="15.0" fill="rgb(219,45,39)" rx="2" ry="2" />
<text  x="638.32" y="975.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;geos::geom::Coordinate*, unsigned long, geos::geom::Coordinate&gt; (2 samples, 0.20%)</title><rect x="687.4" y="965" width="2.3" height="15.0" fill="rgb(225,225,51)" rx="2" ry="2" />
<text  x="690.43" y="975.5" ></text>
</g>
<g >
<title>geojson::feature::&lt;impl geojson::Feature&gt;::from_json_object (3 samples, 0.29%)</title><rect x="10.0" y="1253" width="3.5" height="15.0" fill="rgb(211,210,42)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::operator* (1 samples, 0.10%)</title><rect x="699.0" y="933" width="1.2" height="15.0" fill="rgb(243,18,12)" rx="2" ry="2" />
<text  x="702.01" y="943.5" ></text>
</g>
<g >
<title>serde_json::de::from_str (18 samples, 1.77%)</title><rect x="19.3" y="1077" width="20.8" height="15.0" fill="rgb(228,145,1)" rx="2" ry="2" />
<text  x="22.26" y="1087.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndexFilter (1 samples, 0.10%)</title><rect x="703.6" y="837" width="1.2" height="15.0" fill="rgb(224,79,38)" rx="2" ry="2" />
<text  x="706.64" y="847.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (12 samples, 1.18%)</title><rect x="630.7" y="997" width="13.9" height="15.0" fill="rgb(244,140,9)" rx="2" ry="2" />
<text  x="633.69" y="1007.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.10%)</title><rect x="675.8" y="965" width="1.2" height="15.0" fill="rgb(241,176,29)" rx="2" ry="2" />
<text  x="678.85" y="975.5" ></text>
</g>
<g >
<title>core::cmp::max_by (1 samples, 0.10%)</title><rect x="43.6" y="949" width="1.1" height="15.0" fill="rgb(254,62,1)" rx="2" ry="2" />
<text  x="46.58" y="959.5" ></text>
</g>
<g >
<title>geos::algorithm::RayCrossingCounter::isOnSegment@plt (3 samples, 0.29%)</title><rect x="982.7" y="965" width="3.5" height="15.0" fill="rgb(254,5,11)" rx="2" ry="2" />
<text  x="985.72" y="975.5" ></text>
</g>
<g >
<title>&lt;geozero::geojson::geojson_reader::GeoJsonReader&lt;R&gt; as geozero::api::GeozeroDatasource&gt;::process (3 samples, 0.29%)</title><rect x="10.0" y="1381" width="3.5" height="15.0" fill="rgb(241,61,4)" rx="2" ry="2" />
<text  x="13.00" y="1391.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (16 samples, 1.57%)</title><rect x="767.3" y="949" width="18.6" height="15.0" fill="rgb(246,83,10)" rx="2" ry="2" />
<text  x="770.33" y="959.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (18 samples, 1.77%)</title><rect x="19.3" y="981" width="20.8" height="15.0" fill="rgb(252,113,36)" rx="2" ry="2" />
<text  x="22.26" y="991.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.20%)</title><rect x="19.3" y="85" width="2.3" height="15.0" fill="rgb(241,124,20)" rx="2" ry="2" />
<text  x="22.26" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate, std::allocator&lt;geos::geom::Coordinate&gt; &gt;::_M_default_initialize (2 samples, 0.20%)</title><rect x="687.4" y="981" width="2.3" height="15.0" fill="rgb(249,88,10)" rx="2" ry="2" />
<text  x="690.43" y="991.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1 samples, 0.10%)</title><rect x="38.9" y="677" width="1.2" height="15.0" fill="rgb(239,23,5)" rx="2" ry="2" />
<text  x="41.95" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_erase (9 samples, 0.88%)</title><rect x="609.8" y="885" width="10.5" height="15.0" fill="rgb(218,157,53)" rx="2" ry="2" />
<text  x="612.84" y="895.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.10%)</title><rect x="37.8" y="229" width="1.1" height="15.0" fill="rgb(234,22,22)" rx="2" ry="2" />
<text  x="40.79" y="239.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.20%)</title><rect x="43.6" y="1013" width="2.3" height="15.0" fill="rgb(228,16,4)" rx="2" ry="2" />
<text  x="46.58" y="1023.5" ></text>
</g>
<g >
<title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (18 samples, 1.77%)</title><rect x="19.3" y="869" width="20.8" height="15.0" fill="rgb(241,5,20)" rx="2" ry="2" />
<text  x="22.26" y="879.5" ></text>
</g>
<g >
<title>geos::util::UniqueCoordinateArrayFilter::~UniqueCoordinateArrayFilter (37 samples, 3.63%)</title><rect x="584.4" y="1013" width="42.8" height="15.0" fill="rgb(207,125,40)" rx="2" ry="2" />
<text  x="587.37" y="1023.5" >geos..</text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_end (4 samples, 0.39%)</title><rect x="485.9" y="885" width="4.7" height="15.0" fill="rgb(224,227,42)" rx="2" ry="2" />
<text  x="488.94" y="895.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.10%)</title><rect x="11.2" y="1029" width="1.1" height="15.0" fill="rgb(234,99,17)" rx="2" ry="2" />
<text  x="14.16" y="1039.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="13.5" y="997" width="1.1" height="15.0" fill="rgb(206,109,22)" rx="2" ry="2" />
<text  x="16.47" y="1007.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientation (2 samples, 0.20%)</title><rect x="642.3" y="949" width="2.3" height="15.0" fill="rgb(220,153,28)" rx="2" ry="2" />
<text  x="645.27" y="959.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (950 samples, 93.23%)</title><rect x="18.1" y="1381" width="1100.1" height="15.0" fill="rgb(209,163,31)" rx="2" ry="2" />
<text  x="21.11" y="1391.5" >std::panic::catch_unwind</text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_value@plt (3 samples, 0.29%)</title><rect x="372.5" y="869" width="3.4" height="15.0" fill="rgb(224,173,4)" rx="2" ry="2" />
<text  x="375.45" y="879.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (10 samples, 0.98%)</title><rect x="738.4" y="949" width="11.6" height="15.0" fill="rgb(210,185,23)" rx="2" ry="2" />
<text  x="741.38" y="959.5" ></text>
</g>
<g >
<title>geos::algorithm::(anonymous namespace)::RadiallyLessThen::operator (12 samples, 1.18%)</title><rect x="751.1" y="901" width="13.9" height="15.0" fill="rgb(244,219,5)" rx="2" ry="2" />
<text  x="754.12" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.20%)</title><rect x="41.3" y="933" width="2.3" height="15.0" fill="rgb(219,94,5)" rx="2" ry="2" />
<text  x="44.27" y="943.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;geojson::geojson::GeoJson&gt; (1 samples, 0.10%)</title><rect x="18.1" y="1125" width="1.2" height="15.0" fill="rgb(218,177,5)" rx="2" ry="2" />
<text  x="21.11" y="1135.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (9 samples, 0.88%)</title><rect x="694.4" y="965" width="10.4" height="15.0" fill="rgb(214,142,1)" rx="2" ry="2" />
<text  x="697.38" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;geos::geom::Coordinate const*, std::vector&lt;geos::geom::Coordinate, std::allocator&lt;geos::geom::Coordinate&gt; &gt; &gt; (4 samples, 0.39%)</title><rect x="88.7" y="949" width="4.7" height="15.0" fill="rgb(248,146,48)" rx="2" ry="2" />
<text  x="91.74" y="959.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (5 samples, 0.49%)</title><rect x="738.4" y="901" width="5.8" height="15.0" fill="rgb(233,191,20)" rx="2" ry="2" />
<text  x="741.38" y="911.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.20%)</title><rect x="19.3" y="101" width="2.3" height="15.0" fill="rgb(249,142,28)" rx="2" ry="2" />
<text  x="22.26" y="111.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.10%)</title><rect x="37.8" y="245" width="1.1" height="15.0" fill="rgb(243,62,0)" rx="2" ry="2" />
<text  x="40.79" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;alloc::vec::Vec&lt;f64&gt;&gt;]&gt; (1 samples, 0.10%)</title><rect x="18.1" y="901" width="1.2" height="15.0" fill="rgb(214,6,9)" rx="2" ry="2" />
<text  x="21.11" y="911.5" ></text>
</g>
<g >
<title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.69%)</title><rect x="29.7" y="229" width="8.1" height="15.0" fill="rgb(210,79,15)" rx="2" ry="2" />
<text  x="32.69" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_begin (1 samples, 0.10%)</title><rect x="278.7" y="885" width="1.1" height="15.0" fill="rgb(246,71,39)" rx="2" ry="2" />
<text  x="281.66" y="895.5" ></text>
</g>
<g >
<title>std::io::Read::read_to_string::_$u7b$$u7b$closure$u7d$$u7d$::hace5fe1ab9e3c1a8 (2 samples, 0.20%)</title><rect x="41.3" y="1061" width="2.3" height="15.0" fill="rgb(212,89,10)" rx="2" ry="2" />
<text  x="44.27" y="1071.5" ></text>
</g>
<g >
<title>geos::geom::Coordinate::compareTo (6 samples, 0.59%)</title><rect x="417.6" y="869" width="7.0" height="15.0" fill="rgb(240,91,6)" rx="2" ry="2" />
<text  x="420.62" y="879.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;geos::geom::Coordinate const**&gt;, geos::geom::Coordinate const**, geos::geom::Coordinate const*&gt; (1 samples, 0.10%)</title><rect x="678.2" y="965" width="1.1" height="15.0" fill="rgb(251,149,43)" rx="2" ry="2" />
<text  x="681.16" y="975.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="45.9" y="1013" width="1.2" height="15.0" fill="rgb(231,147,47)" rx="2" ry="2" />
<text  x="48.90" y="1023.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.10%)</title><rect x="743.0" y="773" width="1.2" height="15.0" fill="rgb(228,20,46)" rx="2" ry="2" />
<text  x="746.01" y="783.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="11.2" y="1109" width="1.1" height="15.0" fill="rgb(219,103,43)" rx="2" ry="2" />
<text  x="14.16" y="1119.5" ></text>
</g>
<g >
<title>std::swap&lt;geos::geom::Coordinate const*&gt; (2 samples, 0.20%)</title><rect x="783.5" y="917" width="2.4" height="15.0" fill="rgb(236,213,29)" rx="2" ry="2" />
<text  x="786.54" y="927.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;::base (1 samples, 0.10%)</title><rect x="748.8" y="885" width="1.2" height="15.0" fill="rgb(217,61,46)" rx="2" ry="2" />
<text  x="751.80" y="895.5" ></text>
</g>
<g >
<title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.28%)</title><rect x="23.9" y="325" width="15.0" height="15.0" fill="rgb(250,98,53)" rx="2" ry="2" />
<text  x="26.90" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.49%)</title><rect x="23.9" y="213" width="5.8" height="15.0" fill="rgb(207,113,45)" rx="2" ry="2" />
<text  x="26.90" y="223.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; &gt; (17 samples, 1.67%)</title><rect x="766.2" y="965" width="19.7" height="15.0" fill="rgb(226,56,53)" rx="2" ry="2" />
<text  x="769.17" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::back@plt (1 samples, 0.10%)</title><rect x="656.2" y="1013" width="1.1" height="15.0" fill="rgb(248,213,17)" rx="2" ry="2" />
<text  x="659.16" y="1023.5" ></text>
</g>
<g >
<title>geojson::geojson::GeoJson::from_json_object (1 samples, 0.10%)</title><rect x="13.5" y="1333" width="1.1" height="15.0" fill="rgb(250,27,40)" rx="2" ry="2" />
<text  x="16.47" y="1343.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_value (1 samples, 0.10%)</title><rect x="496.4" y="869" width="1.1" height="15.0" fill="rgb(247,197,18)" rx="2" ry="2" />
<text  x="499.36" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;geos::geom::Coordinate, std::allocator&lt;geos::geom::Coordinate&gt; &gt;::vector (2 samples, 0.20%)</title><rect x="687.4" y="997" width="2.3" height="15.0" fill="rgb(232,76,18)" rx="2" ry="2" />
<text  x="690.43" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_S_key (13 samples, 1.28%)</title><rect x="1146.0" y="1429" width="15.1" height="15.0" fill="rgb(249,15,14)" rx="2" ry="2" />
<text  x="1149.00" y="1439.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_allocate (1 samples, 0.10%)</title><rect x="684.0" y="965" width="1.1" height="15.0" fill="rgb(233,119,14)" rx="2" ry="2" />
<text  x="686.95" y="975.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::__val_comp_iter&lt;geos::algorithm::(anonymous namespace)::RadiallyLessThen&gt; (1 samples, 0.10%)</title><rect x="697.9" y="949" width="1.1" height="15.0" fill="rgb(207,176,53)" rx="2" ry="2" />
<text  x="700.85" y="959.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.20%)</title><rect x="19.3" y="309" width="2.3" height="15.0" fill="rgb(253,121,0)" rx="2" ry="2" />
<text  x="22.26" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_put_node (1 samples, 0.10%)</title><rect x="1105.5" y="901" width="1.1" height="15.0" fill="rgb(214,95,31)" rx="2" ry="2" />
<text  x="1108.47" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;geos::geom::Coordinate const*&gt;::construct&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const* const&amp;&gt; (3 samples, 0.29%)</title><rect x="673.5" y="981" width="3.5" height="15.0" fill="rgb(225,139,8)" rx="2" ry="2" />
<text  x="676.53" y="991.5" ></text>
</g>
<g >
<title>&lt;geojson::geometry::Geometry as core::convert::TryFrom&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;&gt;::try_from (3 samples, 0.29%)</title><rect x="10.0" y="1189" width="3.5" height="15.0" fill="rgb(241,144,1)" rx="2" ry="2" />
<text  x="13.00" y="1199.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;geos::geom::Coordinate const*, geos::geom::Coordinate const*, std::_Identity&lt;geos::geom::Coordinate const*&gt;, geos::geom::CoordinateLessThen, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt;::_M_drop_node (3 samples, 0.29%)</title><rect x="587.8" y="933" width="3.5" height="15.0" fill="rgb(241,107,49)" rx="2" ry="2" />
<text  x="590.84" y="943.5" ></text>
</g>
<g >
<title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17 samples, 1.67%)</title><rect x="19.3" y="613" width="19.6" height="15.0" fill="rgb(227,43,8)" rx="2" ry="2" />
<text  x="22.26" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.10%)</title><rect x="11.2" y="997" width="1.1" height="15.0" fill="rgb(228,77,43)" rx="2" ry="2" />
<text  x="14.16" y="1007.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;geos::geom::Coordinate const**, std::vector&lt;geos::geom::Coordinate const*, std::allocator&lt;geos::geom::Coordinate const*&gt; &gt; &gt; (1 samples, 0.10%)</title><rect x="564.7" y="901" width="1.1" height="15.0" fill="rgb(245,148,30)" rx="2" ry="2" />
<text  x="567.68" y="911.5" ></text>
</g>
<g >
<title>_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::enumerate::_$u7b$$u7b$closure$u7d$$u7d$::h4ee234408b169ceb (1 samples, 0.10%)</title><rect x="43.6" y="981" width="1.1" height="15.0" fill="rgb(238,164,54)" rx="2" ry="2" />
<text  x="46.58" y="991.5" ></text>
</g>
<g >
<title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (17 samples, 1.67%)</title><rect x="19.3" y="485" width="19.6" height="15.0" fill="rgb(243,204,0)" rx="2" ry="2" />
<text  x="22.26" y="495.5" ></text>
</g>
<g >
<title>geos::algorithm::CGAlgorithmsDD::orientationIndex (6 samples, 0.59%)</title><rect x="776.6" y="869" width="6.9" height="15.0" fill="rgb(233,25,30)" rx="2" ry="2" />
<text  x="779.59" y="879.5" ></text>
</g>
<g >
<title>geos::geom::Coordinate::compareTo (12 samples, 1.18%)</title><rect x="1030.2" y="949" width="13.9" height="15.0" fill="rgb(213,218,24)" rx="2" ry="2" />
<text  x="1033.20" y="959.5" ></text>
</g>
</g>
</svg>
